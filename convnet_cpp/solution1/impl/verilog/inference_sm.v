// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inference_sm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        X_0_0_address0,
        X_0_0_ce0,
        X_0_0_q0,
        X_0_0_address1,
        X_0_0_ce1,
        X_0_0_q1,
        X_1_0_address0,
        X_1_0_ce0,
        X_1_0_q0,
        X_1_0_address1,
        X_1_0_ce1,
        X_1_0_q1,
        X_2_0_address0,
        X_2_0_ce0,
        X_2_0_q0,
        X_2_0_address1,
        X_2_0_ce1,
        X_2_0_q1,
        X_3_0_address0,
        X_3_0_ce0,
        X_3_0_q0,
        X_3_0_address1,
        X_3_0_ce1,
        X_3_0_q1,
        argmax_TDATA,
        argmax_TVALID,
        argmax_TREADY
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] X_0_0_address0;
output   X_0_0_ce0;
input  [31:0] X_0_0_q0;
output  [4:0] X_0_0_address1;
output   X_0_0_ce1;
input  [31:0] X_0_0_q1;
output  [4:0] X_1_0_address0;
output   X_1_0_ce0;
input  [31:0] X_1_0_q0;
output  [4:0] X_1_0_address1;
output   X_1_0_ce1;
input  [31:0] X_1_0_q1;
output  [4:0] X_2_0_address0;
output   X_2_0_ce0;
input  [31:0] X_2_0_q0;
output  [4:0] X_2_0_address1;
output   X_2_0_ce1;
input  [31:0] X_2_0_q1;
output  [4:0] X_3_0_address0;
output   X_3_0_ce0;
input  [31:0] X_3_0_q0;
output  [4:0] X_3_0_address1;
output   X_3_0_ce1;
input  [31:0] X_3_0_q1;
output  [31:0] argmax_TDATA;
output   argmax_TVALID;
input   argmax_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_0_0_ce0;
reg X_0_0_ce1;
reg X_1_0_ce0;
reg X_1_0_ce1;
reg X_2_0_ce0;
reg X_2_0_ce1;
reg X_3_0_ce0;
reg X_3_0_ce1;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
reg   [1:0] T_0_0_address0;
reg    T_0_0_ce0;
reg    T_0_0_we0;
wire   [31:0] T_0_0_d0;
wire   [31:0] T_0_0_q0;
reg   [1:0] T_1_0_address0;
reg    T_1_0_ce0;
reg    T_1_0_we0;
wire   [31:0] T_1_0_d0;
wire   [31:0] T_1_0_q0;
reg   [0:0] T_2_0_address0;
reg    T_2_0_ce0;
reg    T_2_0_we0;
wire   [31:0] T_2_0_d0;
wire   [31:0] T_2_0_q0;
reg   [0:0] T_3_0_address0;
reg    T_3_0_ce0;
reg    T_3_0_we0;
wire   [31:0] T_3_0_d0;
wire   [31:0] T_3_0_q0;
reg   [1:0] S_0_0_address0;
reg    S_0_0_ce0;
reg    S_0_0_we0;
wire   [31:0] S_0_0_d0;
wire   [31:0] S_0_0_q0;
reg   [1:0] S_1_0_address0;
reg    S_1_0_ce0;
reg    S_1_0_we0;
wire   [31:0] S_1_0_d0;
wire   [31:0] S_1_0_q0;
reg   [0:0] S_2_0_address0;
reg    S_2_0_ce0;
reg    S_2_0_we0;
wire   [31:0] S_2_0_d0;
wire   [31:0] S_2_0_q0;
reg   [0:0] S_3_0_address0;
reg    S_3_0_ce0;
reg    S_3_0_we0;
wire   [31:0] S_3_0_d0;
wire   [31:0] S_3_0_q0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_ap_start;
wire    grp_inference_mult_1_84_84_10_s_fu_228_ap_done;
wire    grp_inference_mult_1_84_84_10_s_fu_228_ap_idle;
wire    grp_inference_mult_1_84_84_10_s_fu_228_ap_ready;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1;
wire   [1:0] grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0;
wire   [1:0] grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0;
wire   [0:0] grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0;
wire   [0:0] grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0;
wire    grp_inference_add_1_10_s_fu_416_ap_start;
wire    grp_inference_add_1_10_s_fu_416_ap_done;
wire    grp_inference_add_1_10_s_fu_416_ap_idle;
wire    grp_inference_add_1_10_s_fu_416_ap_ready;
wire   [1:0] grp_inference_add_1_10_s_fu_416_A_0_0_address0;
wire    grp_inference_add_1_10_s_fu_416_A_0_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_A_0_0_q0;
wire   [1:0] grp_inference_add_1_10_s_fu_416_A_1_0_address0;
wire    grp_inference_add_1_10_s_fu_416_A_1_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_A_1_0_q0;
wire   [0:0] grp_inference_add_1_10_s_fu_416_A_2_0_address0;
wire    grp_inference_add_1_10_s_fu_416_A_2_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_A_2_0_q0;
wire   [0:0] grp_inference_add_1_10_s_fu_416_A_3_0_address0;
wire    grp_inference_add_1_10_s_fu_416_A_3_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_A_3_0_q0;
wire   [1:0] grp_inference_add_1_10_s_fu_416_C_0_0_address0;
wire    grp_inference_add_1_10_s_fu_416_C_0_0_ce0;
wire    grp_inference_add_1_10_s_fu_416_C_0_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_C_0_0_d0;
wire   [1:0] grp_inference_add_1_10_s_fu_416_C_1_0_address0;
wire    grp_inference_add_1_10_s_fu_416_C_1_0_ce0;
wire    grp_inference_add_1_10_s_fu_416_C_1_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_C_1_0_d0;
wire   [0:0] grp_inference_add_1_10_s_fu_416_C_2_0_address0;
wire    grp_inference_add_1_10_s_fu_416_C_2_0_ce0;
wire    grp_inference_add_1_10_s_fu_416_C_2_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_C_2_0_d0;
wire   [0:0] grp_inference_add_1_10_s_fu_416_C_3_0_address0;
wire    grp_inference_add_1_10_s_fu_416_C_3_0_ce0;
wire    grp_inference_add_1_10_s_fu_416_C_3_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_416_C_3_0_d0;
wire    grp_inference_softmax_1_10_s_fu_430_ap_start;
wire    grp_inference_softmax_1_10_s_fu_430_ap_done;
wire    grp_inference_softmax_1_10_s_fu_430_ap_idle;
wire    grp_inference_softmax_1_10_s_fu_430_ap_ready;
wire   [1:0] grp_inference_softmax_1_10_s_fu_430_A_0_0_address0;
wire    grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0;
wire   [31:0] grp_inference_softmax_1_10_s_fu_430_A_0_0_q0;
wire   [1:0] grp_inference_softmax_1_10_s_fu_430_A_1_0_address0;
wire    grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0;
wire   [31:0] grp_inference_softmax_1_10_s_fu_430_A_1_0_q0;
wire   [0:0] grp_inference_softmax_1_10_s_fu_430_A_2_0_address0;
wire    grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0;
wire   [31:0] grp_inference_softmax_1_10_s_fu_430_A_2_0_q0;
wire   [0:0] grp_inference_softmax_1_10_s_fu_430_A_3_0_address0;
wire    grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0;
wire   [31:0] grp_inference_softmax_1_10_s_fu_430_A_3_0_q0;
wire   [31:0] grp_inference_softmax_1_10_s_fu_430_argmax_TDATA;
wire    grp_inference_softmax_1_10_s_fu_430_argmax_TVALID;
wire    grp_inference_softmax_1_10_s_fu_430_argmax_TREADY;
reg    grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_bdd_251;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_259;
reg    grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_940;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_947;
reg    grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_964;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_971;
reg   [5:0] ap_NS_fsm;


inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
T_0_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_0_0_address0 ),
    .ce0( T_0_0_ce0 ),
    .we0( T_0_0_we0 ),
    .d0( T_0_0_d0 ),
    .q0( T_0_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
T_1_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_1_0_address0 ),
    .ce0( T_1_0_ce0 ),
    .we0( T_1_0_we0 ),
    .d0( T_1_0_d0 ),
    .q0( T_1_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
T_2_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_2_0_address0 ),
    .ce0( T_2_0_ce0 ),
    .we0( T_2_0_we0 ),
    .d0( T_2_0_d0 ),
    .q0( T_2_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
T_3_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_3_0_address0 ),
    .ce0( T_3_0_ce0 ),
    .we0( T_3_0_we0 ),
    .d0( T_3_0_d0 ),
    .q0( T_3_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
S_0_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_0_0_address0 ),
    .ce0( S_0_0_ce0 ),
    .we0( S_0_0_we0 ),
    .d0( S_0_0_d0 ),
    .q0( S_0_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
S_1_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_1_0_address0 ),
    .ce0( S_1_0_ce0 ),
    .we0( S_1_0_we0 ),
    .d0( S_1_0_d0 ),
    .q0( S_1_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
S_2_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_2_0_address0 ),
    .ce0( S_2_0_ce0 ),
    .we0( S_2_0_we0 ),
    .d0( S_2_0_d0 ),
    .q0( S_2_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
S_3_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_3_0_address0 ),
    .ce0( S_3_0_ce0 ),
    .we0( S_3_0_we0 ),
    .d0( S_3_0_d0 ),
    .q0( S_3_0_q0 )
);

inference_mult_1_84_84_10_s grp_inference_mult_1_84_84_10_s_fu_228(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_inference_mult_1_84_84_10_s_fu_228_ap_start ),
    .ap_done( grp_inference_mult_1_84_84_10_s_fu_228_ap_done ),
    .ap_idle( grp_inference_mult_1_84_84_10_s_fu_228_ap_idle ),
    .ap_ready( grp_inference_mult_1_84_84_10_s_fu_228_ap_ready ),
    .A_0_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0 ),
    .A_0_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0 ),
    .A_0_0_q0( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0 ),
    .A_0_0_address1( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1 ),
    .A_0_0_ce1( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1 ),
    .A_0_0_q1( grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1 ),
    .A_1_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0 ),
    .A_1_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0 ),
    .A_1_0_q0( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0 ),
    .A_1_0_address1( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1 ),
    .A_1_0_ce1( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1 ),
    .A_1_0_q1( grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1 ),
    .A_2_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0 ),
    .A_2_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0 ),
    .A_2_0_q0( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0 ),
    .A_2_0_address1( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1 ),
    .A_2_0_ce1( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1 ),
    .A_2_0_q1( grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1 ),
    .A_3_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0 ),
    .A_3_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0 ),
    .A_3_0_q0( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0 ),
    .A_3_0_address1( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1 ),
    .A_3_0_ce1( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1 ),
    .A_3_0_q1( grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1 ),
    .C_0_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0 ),
    .C_0_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0 ),
    .C_0_0_we0( grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0 ),
    .C_0_0_d0( grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0 ),
    .C_1_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0 ),
    .C_1_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0 ),
    .C_1_0_we0( grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0 ),
    .C_1_0_d0( grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0 ),
    .C_2_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0 ),
    .C_2_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0 ),
    .C_2_0_we0( grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0 ),
    .C_2_0_d0( grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0 ),
    .C_3_0_address0( grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0 ),
    .C_3_0_ce0( grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0 ),
    .C_3_0_we0( grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0 ),
    .C_3_0_d0( grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0 )
);

inference_add_1_10_s grp_inference_add_1_10_s_fu_416(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_inference_add_1_10_s_fu_416_ap_start ),
    .ap_done( grp_inference_add_1_10_s_fu_416_ap_done ),
    .ap_idle( grp_inference_add_1_10_s_fu_416_ap_idle ),
    .ap_ready( grp_inference_add_1_10_s_fu_416_ap_ready ),
    .A_0_0_address0( grp_inference_add_1_10_s_fu_416_A_0_0_address0 ),
    .A_0_0_ce0( grp_inference_add_1_10_s_fu_416_A_0_0_ce0 ),
    .A_0_0_q0( grp_inference_add_1_10_s_fu_416_A_0_0_q0 ),
    .A_1_0_address0( grp_inference_add_1_10_s_fu_416_A_1_0_address0 ),
    .A_1_0_ce0( grp_inference_add_1_10_s_fu_416_A_1_0_ce0 ),
    .A_1_0_q0( grp_inference_add_1_10_s_fu_416_A_1_0_q0 ),
    .A_2_0_address0( grp_inference_add_1_10_s_fu_416_A_2_0_address0 ),
    .A_2_0_ce0( grp_inference_add_1_10_s_fu_416_A_2_0_ce0 ),
    .A_2_0_q0( grp_inference_add_1_10_s_fu_416_A_2_0_q0 ),
    .A_3_0_address0( grp_inference_add_1_10_s_fu_416_A_3_0_address0 ),
    .A_3_0_ce0( grp_inference_add_1_10_s_fu_416_A_3_0_ce0 ),
    .A_3_0_q0( grp_inference_add_1_10_s_fu_416_A_3_0_q0 ),
    .C_0_0_address0( grp_inference_add_1_10_s_fu_416_C_0_0_address0 ),
    .C_0_0_ce0( grp_inference_add_1_10_s_fu_416_C_0_0_ce0 ),
    .C_0_0_we0( grp_inference_add_1_10_s_fu_416_C_0_0_we0 ),
    .C_0_0_d0( grp_inference_add_1_10_s_fu_416_C_0_0_d0 ),
    .C_1_0_address0( grp_inference_add_1_10_s_fu_416_C_1_0_address0 ),
    .C_1_0_ce0( grp_inference_add_1_10_s_fu_416_C_1_0_ce0 ),
    .C_1_0_we0( grp_inference_add_1_10_s_fu_416_C_1_0_we0 ),
    .C_1_0_d0( grp_inference_add_1_10_s_fu_416_C_1_0_d0 ),
    .C_2_0_address0( grp_inference_add_1_10_s_fu_416_C_2_0_address0 ),
    .C_2_0_ce0( grp_inference_add_1_10_s_fu_416_C_2_0_ce0 ),
    .C_2_0_we0( grp_inference_add_1_10_s_fu_416_C_2_0_we0 ),
    .C_2_0_d0( grp_inference_add_1_10_s_fu_416_C_2_0_d0 ),
    .C_3_0_address0( grp_inference_add_1_10_s_fu_416_C_3_0_address0 ),
    .C_3_0_ce0( grp_inference_add_1_10_s_fu_416_C_3_0_ce0 ),
    .C_3_0_we0( grp_inference_add_1_10_s_fu_416_C_3_0_we0 ),
    .C_3_0_d0( grp_inference_add_1_10_s_fu_416_C_3_0_d0 )
);

inference_softmax_1_10_s grp_inference_softmax_1_10_s_fu_430(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_inference_softmax_1_10_s_fu_430_ap_start ),
    .ap_done( grp_inference_softmax_1_10_s_fu_430_ap_done ),
    .ap_idle( grp_inference_softmax_1_10_s_fu_430_ap_idle ),
    .ap_ready( grp_inference_softmax_1_10_s_fu_430_ap_ready ),
    .A_0_0_address0( grp_inference_softmax_1_10_s_fu_430_A_0_0_address0 ),
    .A_0_0_ce0( grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0 ),
    .A_0_0_q0( grp_inference_softmax_1_10_s_fu_430_A_0_0_q0 ),
    .A_1_0_address0( grp_inference_softmax_1_10_s_fu_430_A_1_0_address0 ),
    .A_1_0_ce0( grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0 ),
    .A_1_0_q0( grp_inference_softmax_1_10_s_fu_430_A_1_0_q0 ),
    .A_2_0_address0( grp_inference_softmax_1_10_s_fu_430_A_2_0_address0 ),
    .A_2_0_ce0( grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0 ),
    .A_2_0_q0( grp_inference_softmax_1_10_s_fu_430_A_2_0_q0 ),
    .A_3_0_address0( grp_inference_softmax_1_10_s_fu_430_A_3_0_address0 ),
    .A_3_0_ce0( grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0 ),
    .A_3_0_q0( grp_inference_softmax_1_10_s_fu_430_A_3_0_q0 ),
    .argmax_TDATA( grp_inference_softmax_1_10_s_fu_430_argmax_TDATA ),
    .argmax_TVALID( grp_inference_softmax_1_10_s_fu_430_argmax_TVALID ),
    .argmax_TREADY( grp_inference_softmax_1_10_s_fu_430_argmax_TREADY )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_logic_0 == grp_inference_softmax_1_10_s_fu_430_ap_done))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_inference_add_1_10_s_fu_416_ap_ready)) begin
            grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_251)) begin
            grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_inference_mult_1_84_84_10_s_fu_228_ap_ready)) begin
            grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_inference_softmax_1_10_s_fu_430_ap_ready)) begin
            grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_0_0_address0 or grp_inference_softmax_1_10_s_fu_430_A_0_0_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_0_0_address0 = grp_inference_softmax_1_10_s_fu_430_A_0_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_address0 = grp_inference_add_1_10_s_fu_416_C_0_0_address0;
    end else begin
        S_0_0_address0 = 'bx;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_0_0_ce0 or grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_0_0_ce0 = grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_ce0 = grp_inference_add_1_10_s_fu_416_C_0_0_ce0;
    end else begin
        S_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_0_0_we0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_we0 = grp_inference_add_1_10_s_fu_416_C_0_0_we0;
    end else begin
        S_0_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_1_0_address0 or grp_inference_softmax_1_10_s_fu_430_A_1_0_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_1_0_address0 = grp_inference_softmax_1_10_s_fu_430_A_1_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_address0 = grp_inference_add_1_10_s_fu_416_C_1_0_address0;
    end else begin
        S_1_0_address0 = 'bx;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_1_0_ce0 or grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_1_0_ce0 = grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_ce0 = grp_inference_add_1_10_s_fu_416_C_1_0_ce0;
    end else begin
        S_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_1_0_we0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_we0 = grp_inference_add_1_10_s_fu_416_C_1_0_we0;
    end else begin
        S_1_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_2_0_address0 or grp_inference_softmax_1_10_s_fu_430_A_2_0_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_2_0_address0 = grp_inference_softmax_1_10_s_fu_430_A_2_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_address0 = grp_inference_add_1_10_s_fu_416_C_2_0_address0;
    end else begin
        S_2_0_address0 = 'bx;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_2_0_ce0 or grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_2_0_ce0 = grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_ce0 = grp_inference_add_1_10_s_fu_416_C_2_0_ce0;
    end else begin
        S_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_2_0_we0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_we0 = grp_inference_add_1_10_s_fu_416_C_2_0_we0;
    end else begin
        S_2_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_3_0_address0 or grp_inference_softmax_1_10_s_fu_430_A_3_0_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_3_0_address0 = grp_inference_softmax_1_10_s_fu_430_A_3_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_address0 = grp_inference_add_1_10_s_fu_416_C_3_0_address0;
    end else begin
        S_3_0_address0 = 'bx;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_3_0_ce0 or grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        S_3_0_ce0 = grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_ce0 = grp_inference_add_1_10_s_fu_416_C_3_0_ce0;
    end else begin
        S_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_add_1_10_s_fu_416_C_3_0_we0 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_we0 = grp_inference_add_1_10_s_fu_416_C_3_0_we0;
    end else begin
        S_3_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0 or grp_inference_add_1_10_s_fu_416_A_0_0_address0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_0_0_address0 = grp_inference_add_1_10_s_fu_416_A_0_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0;
    end else begin
        T_0_0_address0 = 'bx;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0 or grp_inference_add_1_10_s_fu_416_A_0_0_ce0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_0_0_ce0 = grp_inference_add_1_10_s_fu_416_A_0_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0;
    end else begin
        T_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_we0 = grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0;
    end else begin
        T_0_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0 or grp_inference_add_1_10_s_fu_416_A_1_0_address0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_1_0_address0 = grp_inference_add_1_10_s_fu_416_A_1_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0;
    end else begin
        T_1_0_address0 = 'bx;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0 or grp_inference_add_1_10_s_fu_416_A_1_0_ce0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_1_0_ce0 = grp_inference_add_1_10_s_fu_416_A_1_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0;
    end else begin
        T_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_we0 = grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0;
    end else begin
        T_1_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0 or grp_inference_add_1_10_s_fu_416_A_2_0_address0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_2_0_address0 = grp_inference_add_1_10_s_fu_416_A_2_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0;
    end else begin
        T_2_0_address0 = 'bx;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0 or grp_inference_add_1_10_s_fu_416_A_2_0_ce0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_2_0_ce0 = grp_inference_add_1_10_s_fu_416_A_2_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0;
    end else begin
        T_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_we0 = grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0;
    end else begin
        T_2_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0 or grp_inference_add_1_10_s_fu_416_A_3_0_address0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_3_0_address0 = grp_inference_add_1_10_s_fu_416_A_3_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0;
    end else begin
        T_3_0_address0 = 'bx;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0 or grp_inference_add_1_10_s_fu_416_A_3_0_ce0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_3_0_ce0 = grp_inference_add_1_10_s_fu_416_A_3_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0;
    end else begin
        T_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_we0 = grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0;
    end else begin
        T_3_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_0_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0;
    end else begin
        X_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_0_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1;
    end else begin
        X_0_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_1_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0;
    end else begin
        X_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_1_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1;
    end else begin
        X_1_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_2_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0;
    end else begin
        X_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_2_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1;
    end else begin
        X_2_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_3_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0;
    end else begin
        X_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_3_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1;
    end else begin
        X_3_0_ce1 = ap_const_logic_0;
    end
end

always @ (ap_done_reg or grp_inference_softmax_1_10_s_fu_430_ap_done or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_logic_0 == grp_inference_softmax_1_10_s_fu_430_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (grp_inference_softmax_1_10_s_fu_430_ap_done or ap_sig_cseq_ST_st6_fsm_5) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_logic_0 == grp_inference_softmax_1_10_s_fu_430_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_259) begin
    if (ap_sig_bdd_259) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_940) begin
    if (ap_sig_bdd_940) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_947) begin
    if (ap_sig_bdd_947) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_964) begin
    if (ap_sig_bdd_964) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_971) begin
    if (ap_sig_bdd_971) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or grp_inference_mult_1_84_84_10_s_fu_228_ap_done or grp_inference_add_1_10_s_fu_416_ap_done or grp_inference_softmax_1_10_s_fu_430_ap_done or ap_sig_bdd_251) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_251) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_inference_mult_1_84_84_10_s_fu_228_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_416_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_logic_0 == grp_inference_softmax_1_10_s_fu_430_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign S_0_0_d0 = grp_inference_add_1_10_s_fu_416_C_0_0_d0;

assign S_1_0_d0 = grp_inference_add_1_10_s_fu_416_C_1_0_d0;

assign S_2_0_d0 = grp_inference_add_1_10_s_fu_416_C_2_0_d0;

assign S_3_0_d0 = grp_inference_add_1_10_s_fu_416_C_3_0_d0;

assign T_0_0_d0 = grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0;

assign T_1_0_d0 = grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0;

assign T_2_0_d0 = grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0;

assign T_3_0_d0 = grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0;

assign X_0_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0;

assign X_0_0_address1 = grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1;

assign X_1_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0;

assign X_1_0_address1 = grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1;

assign X_2_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0;

assign X_2_0_address1 = grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1;

assign X_3_0_address0 = grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0;

assign X_3_0_address1 = grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_251 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_259 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_940 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_947 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_964 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_971 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

assign argmax_TDATA = grp_inference_softmax_1_10_s_fu_430_argmax_TDATA;

assign argmax_TVALID = grp_inference_softmax_1_10_s_fu_430_argmax_TVALID;

assign grp_inference_add_1_10_s_fu_416_A_0_0_q0 = T_0_0_q0;

assign grp_inference_add_1_10_s_fu_416_A_1_0_q0 = T_1_0_q0;

assign grp_inference_add_1_10_s_fu_416_A_2_0_q0 = T_2_0_q0;

assign grp_inference_add_1_10_s_fu_416_A_3_0_q0 = T_3_0_q0;

assign grp_inference_add_1_10_s_fu_416_ap_start = grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0 = X_0_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1 = X_0_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0 = X_1_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1 = X_1_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0 = X_2_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1 = X_2_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0 = X_3_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1 = X_3_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_228_ap_start = grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg;

assign grp_inference_softmax_1_10_s_fu_430_A_0_0_q0 = S_0_0_q0;

assign grp_inference_softmax_1_10_s_fu_430_A_1_0_q0 = S_1_0_q0;

assign grp_inference_softmax_1_10_s_fu_430_A_2_0_q0 = S_2_0_q0;

assign grp_inference_softmax_1_10_s_fu_430_A_3_0_q0 = S_3_0_q0;

assign grp_inference_softmax_1_10_s_fu_430_ap_start = grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg;

assign grp_inference_softmax_1_10_s_fu_430_argmax_TREADY = argmax_TREADY;


endmodule //inference_sm

