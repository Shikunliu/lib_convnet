// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inference_Loop_1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        inputImage_address0,
        inputImage_ce0,
        inputImage_q0,
        x_in_0_0_0_address0,
        x_in_0_0_0_ce0,
        x_in_0_0_0_we0,
        x_in_0_0_0_d0,
        x_in_0_1_0_address0,
        x_in_0_1_0_ce0,
        x_in_0_1_0_we0,
        x_in_0_1_0_d0,
        x_in_0_2_0_address0,
        x_in_0_2_0_ce0,
        x_in_0_2_0_we0,
        x_in_0_2_0_d0,
        x_in_0_3_0_address0,
        x_in_0_3_0_ce0,
        x_in_0_3_0_we0,
        x_in_0_3_0_d0,
        x_in_0_4_0_address0,
        x_in_0_4_0_ce0,
        x_in_0_4_0_we0,
        x_in_0_4_0_d0,
        x_in_1_0_0_address0,
        x_in_1_0_0_ce0,
        x_in_1_0_0_we0,
        x_in_1_0_0_d0,
        x_in_1_1_0_address0,
        x_in_1_1_0_ce0,
        x_in_1_1_0_we0,
        x_in_1_1_0_d0,
        x_in_1_2_0_address0,
        x_in_1_2_0_ce0,
        x_in_1_2_0_we0,
        x_in_1_2_0_d0,
        x_in_1_3_0_address0,
        x_in_1_3_0_ce0,
        x_in_1_3_0_we0,
        x_in_1_3_0_d0,
        x_in_1_4_0_address0,
        x_in_1_4_0_ce0,
        x_in_1_4_0_we0,
        x_in_1_4_0_d0,
        x_in_2_0_0_address0,
        x_in_2_0_0_ce0,
        x_in_2_0_0_we0,
        x_in_2_0_0_d0,
        x_in_2_1_0_address0,
        x_in_2_1_0_ce0,
        x_in_2_1_0_we0,
        x_in_2_1_0_d0,
        x_in_2_2_0_address0,
        x_in_2_2_0_ce0,
        x_in_2_2_0_we0,
        x_in_2_2_0_d0,
        x_in_2_3_0_address0,
        x_in_2_3_0_ce0,
        x_in_2_3_0_we0,
        x_in_2_3_0_d0,
        x_in_2_4_0_address0,
        x_in_2_4_0_ce0,
        x_in_2_4_0_we0,
        x_in_2_4_0_d0,
        x_in_3_0_0_address0,
        x_in_3_0_0_ce0,
        x_in_3_0_0_we0,
        x_in_3_0_0_d0,
        x_in_3_1_0_address0,
        x_in_3_1_0_ce0,
        x_in_3_1_0_we0,
        x_in_3_1_0_d0,
        x_in_3_2_0_address0,
        x_in_3_2_0_ce0,
        x_in_3_2_0_we0,
        x_in_3_2_0_d0,
        x_in_3_3_0_address0,
        x_in_3_3_0_ce0,
        x_in_3_3_0_we0,
        x_in_3_3_0_d0,
        x_in_3_4_0_address0,
        x_in_3_4_0_ce0,
        x_in_3_4_0_we0,
        x_in_3_4_0_d0,
        x_in_4_0_0_address0,
        x_in_4_0_0_ce0,
        x_in_4_0_0_we0,
        x_in_4_0_0_d0,
        x_in_4_1_0_address0,
        x_in_4_1_0_ce0,
        x_in_4_1_0_we0,
        x_in_4_1_0_d0,
        x_in_4_2_0_address0,
        x_in_4_2_0_ce0,
        x_in_4_2_0_we0,
        x_in_4_2_0_d0,
        x_in_4_3_0_address0,
        x_in_4_3_0_ce0,
        x_in_4_3_0_we0,
        x_in_4_3_0_d0,
        x_in_4_4_0_address0,
        x_in_4_4_0_ce0,
        x_in_4_4_0_we0,
        x_in_4_4_0_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st11_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv12_34 = 12'b110100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] inputImage_address0;
output   inputImage_ce0;
input  [31:0] inputImage_q0;
output  [5:0] x_in_0_0_0_address0;
output   x_in_0_0_0_ce0;
output   x_in_0_0_0_we0;
output  [31:0] x_in_0_0_0_d0;
output  [5:0] x_in_0_1_0_address0;
output   x_in_0_1_0_ce0;
output   x_in_0_1_0_we0;
output  [31:0] x_in_0_1_0_d0;
output  [5:0] x_in_0_2_0_address0;
output   x_in_0_2_0_ce0;
output   x_in_0_2_0_we0;
output  [31:0] x_in_0_2_0_d0;
output  [4:0] x_in_0_3_0_address0;
output   x_in_0_3_0_ce0;
output   x_in_0_3_0_we0;
output  [31:0] x_in_0_3_0_d0;
output  [4:0] x_in_0_4_0_address0;
output   x_in_0_4_0_ce0;
output   x_in_0_4_0_we0;
output  [31:0] x_in_0_4_0_d0;
output  [5:0] x_in_1_0_0_address0;
output   x_in_1_0_0_ce0;
output   x_in_1_0_0_we0;
output  [31:0] x_in_1_0_0_d0;
output  [5:0] x_in_1_1_0_address0;
output   x_in_1_1_0_ce0;
output   x_in_1_1_0_we0;
output  [31:0] x_in_1_1_0_d0;
output  [5:0] x_in_1_2_0_address0;
output   x_in_1_2_0_ce0;
output   x_in_1_2_0_we0;
output  [31:0] x_in_1_2_0_d0;
output  [4:0] x_in_1_3_0_address0;
output   x_in_1_3_0_ce0;
output   x_in_1_3_0_we0;
output  [31:0] x_in_1_3_0_d0;
output  [4:0] x_in_1_4_0_address0;
output   x_in_1_4_0_ce0;
output   x_in_1_4_0_we0;
output  [31:0] x_in_1_4_0_d0;
output  [5:0] x_in_2_0_0_address0;
output   x_in_2_0_0_ce0;
output   x_in_2_0_0_we0;
output  [31:0] x_in_2_0_0_d0;
output  [5:0] x_in_2_1_0_address0;
output   x_in_2_1_0_ce0;
output   x_in_2_1_0_we0;
output  [31:0] x_in_2_1_0_d0;
output  [5:0] x_in_2_2_0_address0;
output   x_in_2_2_0_ce0;
output   x_in_2_2_0_we0;
output  [31:0] x_in_2_2_0_d0;
output  [4:0] x_in_2_3_0_address0;
output   x_in_2_3_0_ce0;
output   x_in_2_3_0_we0;
output  [31:0] x_in_2_3_0_d0;
output  [4:0] x_in_2_4_0_address0;
output   x_in_2_4_0_ce0;
output   x_in_2_4_0_we0;
output  [31:0] x_in_2_4_0_d0;
output  [4:0] x_in_3_0_0_address0;
output   x_in_3_0_0_ce0;
output   x_in_3_0_0_we0;
output  [31:0] x_in_3_0_0_d0;
output  [4:0] x_in_3_1_0_address0;
output   x_in_3_1_0_ce0;
output   x_in_3_1_0_we0;
output  [31:0] x_in_3_1_0_d0;
output  [4:0] x_in_3_2_0_address0;
output   x_in_3_2_0_ce0;
output   x_in_3_2_0_we0;
output  [31:0] x_in_3_2_0_d0;
output  [4:0] x_in_3_3_0_address0;
output   x_in_3_3_0_ce0;
output   x_in_3_3_0_we0;
output  [31:0] x_in_3_3_0_d0;
output  [4:0] x_in_3_4_0_address0;
output   x_in_3_4_0_ce0;
output   x_in_3_4_0_we0;
output  [31:0] x_in_3_4_0_d0;
output  [4:0] x_in_4_0_0_address0;
output   x_in_4_0_0_ce0;
output   x_in_4_0_0_we0;
output  [31:0] x_in_4_0_0_d0;
output  [4:0] x_in_4_1_0_address0;
output   x_in_4_1_0_ce0;
output   x_in_4_1_0_we0;
output  [31:0] x_in_4_1_0_d0;
output  [4:0] x_in_4_2_0_address0;
output   x_in_4_2_0_ce0;
output   x_in_4_2_0_we0;
output  [31:0] x_in_4_2_0_d0;
output  [4:0] x_in_4_3_0_address0;
output   x_in_4_3_0_ce0;
output   x_in_4_3_0_we0;
output  [31:0] x_in_4_3_0_d0;
output  [4:0] x_in_4_4_0_address0;
output   x_in_4_4_0_ce0;
output   x_in_4_4_0_we0;
output  [31:0] x_in_4_4_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg inputImage_ce0;
reg x_in_0_0_0_ce0;
reg x_in_0_0_0_we0;
reg x_in_0_1_0_ce0;
reg x_in_0_1_0_we0;
reg x_in_0_2_0_ce0;
reg x_in_0_2_0_we0;
reg x_in_0_3_0_ce0;
reg x_in_0_3_0_we0;
reg x_in_0_4_0_ce0;
reg x_in_0_4_0_we0;
reg x_in_1_0_0_ce0;
reg x_in_1_0_0_we0;
reg x_in_1_1_0_ce0;
reg x_in_1_1_0_we0;
reg x_in_1_2_0_ce0;
reg x_in_1_2_0_we0;
reg x_in_1_3_0_ce0;
reg x_in_1_3_0_we0;
reg x_in_1_4_0_ce0;
reg x_in_1_4_0_we0;
reg x_in_2_0_0_ce0;
reg x_in_2_0_0_we0;
reg x_in_2_1_0_ce0;
reg x_in_2_1_0_we0;
reg x_in_2_2_0_ce0;
reg x_in_2_2_0_we0;
reg x_in_2_3_0_ce0;
reg x_in_2_3_0_we0;
reg x_in_2_4_0_ce0;
reg x_in_2_4_0_we0;
reg x_in_3_0_0_ce0;
reg x_in_3_0_0_we0;
reg x_in_3_1_0_ce0;
reg x_in_3_1_0_we0;
reg x_in_3_2_0_ce0;
reg x_in_3_2_0_we0;
reg x_in_3_3_0_ce0;
reg x_in_3_3_0_we0;
reg x_in_3_4_0_ce0;
reg x_in_3_4_0_we0;
reg x_in_4_0_0_ce0;
reg x_in_4_0_0_we0;
reg x_in_4_1_0_ce0;
reg x_in_4_1_0_we0;
reg x_in_4_2_0_ce0;
reg x_in_4_2_0_we0;
reg x_in_4_3_0_ce0;
reg x_in_4_3_0_we0;
reg x_in_4_4_0_ce0;
reg x_in_4_4_0_we0;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [9:0] indvar_flatten_reg_459;
reg   [4:0] i_0_i_i_reg_470;
reg   [4:0] j_0_i_i_reg_481;
wire   [0:0] exitcond_flatten_fu_492_p2;
reg   [0:0] exitcond_flatten_reg_742;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_223;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it6;
wire   [9:0] indvar_flatten_next_fu_498_p2;
wire   [4:0] j_0_i_i_mid2_fu_516_p3;
reg   [4:0] j_0_i_i_mid2_reg_751;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it1;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it2;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it3;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it4;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it5;
reg   [4:0] ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it6;
wire   [4:0] i_0_i_i_mid2_fu_524_p3;
reg   [4:0] i_0_i_i_mid2_reg_758;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it1;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it2;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it3;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it4;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it5;
reg   [4:0] ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it6;
wire   [4:0] j_fu_544_p2;
reg   [3:0] tmp_763_reg_772;
reg   [3:0] tmp_768_reg_785;
reg    ap_sig_bdd_290;
reg   [4:0] i_0_i_i_phi_fu_474_p4;
wire  signed [63:0] tmp_782_cast_fu_606_p1;
wire  signed [63:0] tmp_783_cast_fu_703_p1;
wire   [63:0] tmp_784_cast_fu_728_p1;
wire   [3:0] tmp_762_fu_630_p1;
wire   [3:0] tmp_767_fu_682_p1;
wire   [0:0] exitcond27_i_i9_fu_510_p2;
wire   [4:0] i_fu_504_p2;
wire   [4:0] grp_fu_532_p0;
wire   [3:0] grp_fu_532_p1;
wire   [3:0] grp_fu_538_p1;
wire   [9:0] tmp_fu_550_p3;
wire   [6:0] tmp_s_fu_561_p3;
wire   [10:0] p_shl6_cast_fu_557_p1;
wire   [10:0] p_shl7_cast_fu_568_p1;
wire   [4:0] mul4_fu_581_p1;
wire   [11:0] mul4_fu_581_p2;
wire   [10:0] tmp_731_fu_572_p2;
wire   [10:0] tmp_22_i_cast_fu_597_p1;
wire   [10:0] tmp_735_fu_600_p2;
wire   [4:0] mul_fu_614_p1;
wire   [11:0] mul_fu_614_p2;
wire   [4:0] grp_fu_532_p2;
wire  signed [4:0] newIndex_fu_634_p1;
wire   [4:0] tmp_765_fu_648_p3;
wire  signed [5:0] tmp_732_fu_655_p1;
wire   [6:0] tmp_764_fu_641_p3;
wire   [6:0] p_shl2_cast_fu_659_p1;
wire   [5:0] newIndex8_cast_fu_637_p1;
wire   [5:0] tmp_766_fu_669_p3;
wire   [4:0] grp_fu_538_p2;
wire  signed [4:0] newIndex9_fu_686_p1;
wire   [6:0] tmp_733_fu_663_p2;
wire   [6:0] newIndex10_cast_fu_693_p1;
wire   [6:0] tmp_736_fu_697_p2;
wire   [5:0] tmp_734_fu_676_p2;
wire   [5:0] newIndex10_cast1_fu_689_p1;
wire   [5:0] tmp_737_fu_722_p2;
wire    grp_fu_532_ce;
wire    grp_fu_538_ce;
reg    ap_sig_cseq_ST_st11_fsm_2;
reg    ap_sig_bdd_607;
reg   [2:0] ap_NS_fsm;
wire   [11:0] mul4_fu_581_p10;
wire   [11:0] mul_fu_614_p10;


inference_urem_5ns_4ns_5_9 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
inference_urem_5ns_4ns_5_9_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_532_p0 ),
    .din1( grp_fu_532_p1 ),
    .ce( grp_fu_532_ce ),
    .dout( grp_fu_532_p2 )
);

inference_urem_5ns_4ns_5_9 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
inference_urem_5ns_4ns_5_9_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( j_0_i_i_mid2_fu_516_p3 ),
    .din1( grp_fu_538_p1 ),
    .ce( grp_fu_538_ce ),
    .dout( grp_fu_538_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_290)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_290) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_492_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_742 == ap_const_lv1_0))) begin
        i_0_i_i_reg_470 <= i_0_i_i_mid2_reg_758;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_290)) begin
        i_0_i_i_reg_470 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_459 <= indvar_flatten_next_fu_498_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_290)) begin
        indvar_flatten_reg_459 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
        j_0_i_i_reg_481 <= j_fu_544_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_290)) begin
        j_0_i_i_reg_481 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it1 <= exitcond_flatten_reg_742;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it1 <= i_0_i_i_mid2_reg_758;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it1 <= j_0_i_i_mid2_reg_751;
        exitcond_flatten_reg_742 <= exitcond_flatten_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it1;
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it3 <= ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it2;
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it4 <= ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it3;
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it5 <= ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it4;
        ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it6 <= ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it5;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it2 <= ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it1;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it3 <= ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it2;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it4 <= ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it3;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it5 <= ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it4;
        ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it6 <= ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it5;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it2 <= ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it1;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it3 <= ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it2;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it4 <= ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it3;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it5 <= ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it4;
        ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it6 <= ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
        i_0_i_i_mid2_reg_758 <= i_0_i_i_mid2_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_492_p2 == ap_const_lv1_0))) begin
        j_0_i_i_mid2_reg_751 <= j_0_i_i_mid2_fu_516_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_742_pp0_it6 == ap_const_lv1_0)) begin
        tmp_763_reg_772 <= {{mul4_fu_581_p2[ap_const_lv32_B : ap_const_lv32_8]}};
        tmp_768_reg_785 <= {{mul_fu_614_p2[ap_const_lv32_B : ap_const_lv32_8]}};
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_st11_fsm_2) begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st11_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_223) begin
    if (ap_sig_bdd_223) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_607) begin
    if (ap_sig_bdd_607) begin
        ap_sig_cseq_ST_st11_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_22) begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (i_0_i_i_reg_470 or exitcond_flatten_reg_742 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_0_i_i_mid2_reg_758) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_742 == ap_const_lv1_0))) begin
        i_0_i_i_phi_fu_474_p4 = i_0_i_i_mid2_reg_758;
    end else begin
        i_0_i_i_phi_fu_474_p4 = i_0_i_i_reg_470;
    end
end

always @ (ap_reg_ppiten_pp0_it7) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it7)) begin
        inputImage_ce0 = ap_const_logic_1;
    end else begin
        inputImage_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_0_0_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_0_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_0_0_0_we0 = ap_const_logic_1;
    end else begin
        x_in_0_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_0_1_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_0_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_1) & (tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_0_1_0_we0 = ap_const_logic_1;
    end else begin
        x_in_0_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_0_2_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_0_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_2) & (tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_0_2_0_we0 = ap_const_logic_1;
    end else begin
        x_in_0_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_0_3_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_0_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv4_3 == tmp_767_fu_682_p1) & (tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_0_3_0_we0 = ap_const_logic_1;
    end else begin
        x_in_0_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_0_4_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_0_4_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_0_4_0_we0 = ap_const_logic_1;
    end else begin
        x_in_0_4_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_1_0_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_1_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_1))) begin
        x_in_1_0_0_we0 = ap_const_logic_1;
    end else begin
        x_in_1_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_1_1_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_1_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_1) & (tmp_762_fu_630_p1 == ap_const_lv4_1))) begin
        x_in_1_1_0_we0 = ap_const_logic_1;
    end else begin
        x_in_1_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_1_2_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_1_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_2) & (tmp_762_fu_630_p1 == ap_const_lv4_1))) begin
        x_in_1_2_0_we0 = ap_const_logic_1;
    end else begin
        x_in_1_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_1_3_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_1_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv4_3 == tmp_767_fu_682_p1) & (tmp_762_fu_630_p1 == ap_const_lv4_1))) begin
        x_in_1_3_0_we0 = ap_const_logic_1;
    end else begin
        x_in_1_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_1_4_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_1_4_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_1))) begin
        x_in_1_4_0_we0 = ap_const_logic_1;
    end else begin
        x_in_1_4_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_2_0_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_2_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_2))) begin
        x_in_2_0_0_we0 = ap_const_logic_1;
    end else begin
        x_in_2_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_2_1_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_2_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_1) & (tmp_762_fu_630_p1 == ap_const_lv4_2))) begin
        x_in_2_1_0_we0 = ap_const_logic_1;
    end else begin
        x_in_2_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_2_2_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_2_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_2) & (tmp_762_fu_630_p1 == ap_const_lv4_2))) begin
        x_in_2_2_0_we0 = ap_const_logic_1;
    end else begin
        x_in_2_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_2_3_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_2_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv4_3 == tmp_767_fu_682_p1) & (tmp_762_fu_630_p1 == ap_const_lv4_2))) begin
        x_in_2_3_0_we0 = ap_const_logic_1;
    end else begin
        x_in_2_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_2_4_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_2_4_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_0) & (tmp_762_fu_630_p1 == ap_const_lv4_2))) begin
        x_in_2_4_0_we0 = ap_const_logic_1;
    end else begin
        x_in_2_4_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_3_0_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_3_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_762_fu_630_p1 == ap_const_lv4_3) & (tmp_767_fu_682_p1 == ap_const_lv4_0))) begin
        x_in_3_0_0_we0 = ap_const_logic_1;
    end else begin
        x_in_3_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_3_1_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_3_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_762_fu_630_p1 == ap_const_lv4_3) & (tmp_767_fu_682_p1 == ap_const_lv4_1))) begin
        x_in_3_1_0_we0 = ap_const_logic_1;
    end else begin
        x_in_3_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_3_2_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_3_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_762_fu_630_p1 == ap_const_lv4_3) & (tmp_767_fu_682_p1 == ap_const_lv4_2))) begin
        x_in_3_2_0_we0 = ap_const_logic_1;
    end else begin
        x_in_3_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_3_3_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_3_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_762_fu_630_p1 == ap_const_lv4_3) & (ap_const_lv4_3 == tmp_767_fu_682_p1))) begin
        x_in_3_3_0_we0 = ap_const_logic_1;
    end else begin
        x_in_3_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_3_4_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_3_4_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_0))) begin
        x_in_3_4_0_we0 = ap_const_logic_1;
    end else begin
        x_in_3_4_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_4_0_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_4_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_0) & ~(tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(tmp_762_fu_630_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_4_0_0_we0 = ap_const_logic_1;
    end else begin
        x_in_4_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_4_1_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_4_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(tmp_762_fu_630_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_4_1_0_we0 = ap_const_logic_1;
    end else begin
        x_in_4_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_4_2_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_4_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(tmp_762_fu_630_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_4_2_0_we0 = ap_const_logic_1;
    end else begin
        x_in_4_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_4_3_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_4_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(tmp_762_fu_630_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_4_3_0_we0 = ap_const_logic_1;
    end else begin
        x_in_4_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it8)) begin
        x_in_4_4_0_ce0 = ap_const_logic_1;
    end else begin
        x_in_4_4_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it8 or tmp_762_fu_630_p1 or tmp_767_fu_682_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_lv4_3 == tmp_767_fu_682_p1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_2) & ~(tmp_767_fu_682_p1 == ap_const_lv4_1) & ~(tmp_767_fu_682_p1 == ap_const_lv4_0) & ~(tmp_762_fu_630_p1 == ap_const_lv4_3) & ~(tmp_762_fu_630_p1 == ap_const_lv4_2) & ~(tmp_762_fu_630_p1 == ap_const_lv4_1) & ~(tmp_762_fu_630_p1 == ap_const_lv4_0))) begin
        x_in_4_4_0_we0 = ap_const_logic_1;
    end else begin
        x_in_4_4_0_we0 = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or exitcond_flatten_fu_492_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or ap_sig_bdd_290) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_290) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it7)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_492_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_492_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st11_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_2;
            end
        end
        ap_ST_st11_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_290 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_607 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign exitcond27_i_i9_fu_510_p2 = (j_0_i_i_reg_481 == ap_const_lv5_1C? 1'b1: 1'b0);

assign exitcond_flatten_fu_492_p2 = (indvar_flatten_reg_459 == ap_const_lv10_310? 1'b1: 1'b0);

assign grp_fu_532_ce = ap_const_logic_1;

assign grp_fu_532_p0 = ((exitcond27_i_i9_fu_510_p2[0:0] === 1'b1) ? i_fu_504_p2 : i_0_i_i_phi_fu_474_p4);

assign grp_fu_532_p1 = ap_const_lv5_5;

assign grp_fu_538_ce = ap_const_logic_1;

assign grp_fu_538_p1 = ap_const_lv5_5;

assign i_0_i_i_mid2_fu_524_p3 = ((exitcond27_i_i9_fu_510_p2[0:0] === 1'b1) ? i_fu_504_p2 : i_0_i_i_phi_fu_474_p4);

assign i_fu_504_p2 = (ap_const_lv5_1 + i_0_i_i_phi_fu_474_p4);

assign indvar_flatten_next_fu_498_p2 = (indvar_flatten_reg_459 + ap_const_lv10_1);

assign inputImage_address0 = tmp_782_cast_fu_606_p1;

assign j_0_i_i_mid2_fu_516_p3 = ((exitcond27_i_i9_fu_510_p2[0:0] === 1'b1) ? ap_const_lv5_0 : j_0_i_i_reg_481);

assign j_fu_544_p2 = (j_0_i_i_mid2_fu_516_p3 + ap_const_lv5_1);

assign mul4_fu_581_p1 = mul4_fu_581_p10;

assign mul4_fu_581_p10 = ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it6;

assign mul4_fu_581_p2 = (ap_const_lv12_34 * mul4_fu_581_p1);

assign mul_fu_614_p1 = mul_fu_614_p10;

assign mul_fu_614_p10 = ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it6;

assign mul_fu_614_p2 = (ap_const_lv12_34 * mul_fu_614_p1);

assign newIndex10_cast1_fu_689_p1 = $unsigned(newIndex9_fu_686_p1);

assign newIndex10_cast_fu_693_p1 = $unsigned(newIndex9_fu_686_p1);

assign newIndex8_cast_fu_637_p1 = $unsigned(newIndex_fu_634_p1);

assign newIndex9_fu_686_p1 = $signed(tmp_768_reg_785);

assign newIndex_fu_634_p1 = $signed(tmp_763_reg_772);

assign p_shl2_cast_fu_659_p1 = $unsigned(tmp_732_fu_655_p1);

assign p_shl6_cast_fu_557_p1 = tmp_fu_550_p3;

assign p_shl7_cast_fu_568_p1 = tmp_s_fu_561_p3;

assign tmp_22_i_cast_fu_597_p1 = ap_reg_ppstg_j_0_i_i_mid2_reg_751_pp0_it6;

assign tmp_731_fu_572_p2 = (p_shl6_cast_fu_557_p1 - p_shl7_cast_fu_568_p1);

assign tmp_732_fu_655_p1 = $signed(tmp_765_fu_648_p3);

assign tmp_733_fu_663_p2 = (tmp_764_fu_641_p3 - p_shl2_cast_fu_659_p1);

assign tmp_734_fu_676_p2 = (newIndex8_cast_fu_637_p1 + tmp_766_fu_669_p3);

assign tmp_735_fu_600_p2 = (tmp_731_fu_572_p2 + tmp_22_i_cast_fu_597_p1);

assign tmp_736_fu_697_p2 = (tmp_733_fu_663_p2 + newIndex10_cast_fu_693_p1);

assign tmp_737_fu_722_p2 = (tmp_734_fu_676_p2 + newIndex10_cast1_fu_689_p1);

assign tmp_762_fu_630_p1 = grp_fu_532_p2[3:0];

assign tmp_764_fu_641_p3 = {{tmp_763_reg_772}, {ap_const_lv3_0}};

assign tmp_765_fu_648_p3 = {{tmp_763_reg_772}, {ap_const_lv1_0}};

assign tmp_766_fu_669_p3 = {{tmp_763_reg_772}, {ap_const_lv2_0}};

assign tmp_767_fu_682_p1 = grp_fu_538_p2[3:0];

assign tmp_782_cast_fu_606_p1 = $signed(tmp_735_fu_600_p2);

assign tmp_783_cast_fu_703_p1 = $signed(tmp_736_fu_697_p2);

assign tmp_784_cast_fu_728_p1 = tmp_737_fu_722_p2;

assign tmp_fu_550_p3 = {{ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it6}, {ap_const_lv5_0}};

assign tmp_s_fu_561_p3 = {{ap_reg_ppstg_i_0_i_i_mid2_reg_758_pp0_it6}, {ap_const_lv2_0}};

assign x_in_0_0_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_0_0_0_d0 = inputImage_q0;

assign x_in_0_1_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_0_1_0_d0 = inputImage_q0;

assign x_in_0_2_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_0_2_0_d0 = inputImage_q0;

assign x_in_0_3_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_0_3_0_d0 = inputImage_q0;

assign x_in_0_4_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_0_4_0_d0 = inputImage_q0;

assign x_in_1_0_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_1_0_0_d0 = inputImage_q0;

assign x_in_1_1_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_1_1_0_d0 = inputImage_q0;

assign x_in_1_2_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_1_2_0_d0 = inputImage_q0;

assign x_in_1_3_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_1_3_0_d0 = inputImage_q0;

assign x_in_1_4_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_1_4_0_d0 = inputImage_q0;

assign x_in_2_0_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_2_0_0_d0 = inputImage_q0;

assign x_in_2_1_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_2_1_0_d0 = inputImage_q0;

assign x_in_2_2_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_2_2_0_d0 = inputImage_q0;

assign x_in_2_3_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_2_3_0_d0 = inputImage_q0;

assign x_in_2_4_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_2_4_0_d0 = inputImage_q0;

assign x_in_3_0_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_3_0_0_d0 = inputImage_q0;

assign x_in_3_1_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_3_1_0_d0 = inputImage_q0;

assign x_in_3_2_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_3_2_0_d0 = inputImage_q0;

assign x_in_3_3_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_3_3_0_d0 = inputImage_q0;

assign x_in_3_4_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_3_4_0_d0 = inputImage_q0;

assign x_in_4_0_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_4_0_0_d0 = inputImage_q0;

assign x_in_4_1_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_4_1_0_d0 = inputImage_q0;

assign x_in_4_2_0_address0 = tmp_783_cast_fu_703_p1;

assign x_in_4_2_0_d0 = inputImage_q0;

assign x_in_4_3_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_4_3_0_d0 = inputImage_q0;

assign x_in_4_4_0_address0 = tmp_784_cast_fu_728_p1;

assign x_in_4_4_0_d0 = inputImage_q0;


endmodule //inference_Loop_1_proc

