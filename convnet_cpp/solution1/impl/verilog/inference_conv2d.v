// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inference_conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_address0,
        x_ce0,
        x_q0,
        W_address0,
        W_ce0,
        W_q0,
        b_address0,
        b_ce0,
        b_q0,
        out_feature_0_0_address0,
        out_feature_0_0_ce0,
        out_feature_0_0_we0,
        out_feature_0_0_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 20'b1;
parameter    ap_ST_st2_fsm_1 = 20'b10;
parameter    ap_ST_st3_fsm_2 = 20'b100;
parameter    ap_ST_st4_fsm_3 = 20'b1000;
parameter    ap_ST_st5_fsm_4 = 20'b10000;
parameter    ap_ST_st6_fsm_5 = 20'b100000;
parameter    ap_ST_st7_fsm_6 = 20'b1000000;
parameter    ap_ST_st8_fsm_7 = 20'b10000000;
parameter    ap_ST_st9_fsm_8 = 20'b100000000;
parameter    ap_ST_st10_fsm_9 = 20'b1000000000;
parameter    ap_ST_st11_fsm_10 = 20'b10000000000;
parameter    ap_ST_st12_fsm_11 = 20'b100000000000;
parameter    ap_ST_st13_fsm_12 = 20'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 20'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 20'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 20'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 20'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 20'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 20'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 20'b10000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv7_78 = 7'b1111000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] x_address0;
output   x_ce0;
input  [31:0] x_q0;
output  [15:0] W_address0;
output   W_ce0;
input  [31:0] W_q0;
output  [6:0] b_address0;
output   b_ce0;
input  [31:0] b_q0;
output  [6:0] out_feature_0_0_address0;
output   out_feature_0_0_ce0;
output   out_feature_0_0_we0;
output  [31:0] out_feature_0_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x_ce0;
reg W_ce0;
reg b_ce0;
reg out_feature_0_0_ce0;
reg out_feature_0_0_we0;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm = 20'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_38;
wire   [6:0] filter_idx_1_fu_247_p2;
reg   [6:0] filter_idx_1_reg_514;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_75;
wire   [16:0] tmp_cast_fu_259_p1;
reg   [16:0] tmp_cast_reg_519;
wire   [0:0] exitcond3_fu_241_p2;
reg   [6:0] b_addr_reg_524;
reg   [6:0] out_feature_0_0_addr_reg_529;
wire   [2:0] out_r_idx_cast5_fu_263_p1;
reg   [2:0] out_r_idx_cast5_reg_534;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_94;
wire   [2:0] out_c_idx_cast4_fu_267_p1;
reg   [2:0] out_c_idx_cast4_reg_539;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_103;
wire   [4:0] in_ch_idx_1_fu_277_p2;
reg   [4:0] in_ch_idx_1_reg_547;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_112;
wire   [63:0] tmp_s_fu_283_p1;
reg   [63:0] tmp_s_reg_552;
wire   [0:0] exitcond2_fu_271_p2;
wire   [9:0] tmp_cast_78_fu_287_p1;
reg   [9:0] tmp_cast_78_reg_557;
wire   [2:0] r_idx_3_fu_297_p2;
reg   [2:0] r_idx_3_reg_565;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_128;
wire   [5:0] tmp_101_fu_324_p2;
reg   [5:0] tmp_101_reg_570;
wire   [0:0] exitcond1_fu_291_p2;
wire   [5:0] tmp_103_fu_346_p2;
reg   [5:0] tmp_103_reg_575;
wire   [2:0] c_idx_3_fu_358_p2;
reg   [2:0] c_idx_3_reg_583;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_144;
wire   [0:0] exitcond_fu_352_p2;
reg   [31:0] in_val_reg_598;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_159;
reg   [31:0] W_load_reg_603;
wire   [31:0] grp_fu_232_p2;
reg   [31:0] tmp_38_reg_608;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_169;
wire   [31:0] grp_fu_226_p2;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_178;
reg   [31:0] b_load_reg_618;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_186;
reg   [31:0] x_assign_reg_623;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_194;
reg   [6:0] filter_idx_reg_120;
wire   [0:0] out_r_idx_phi_fu_136_p4;
reg   [0:0] out_r_idx_reg_131;
wire   [0:0] out_c_idx_phi_fu_149_p4;
reg   [0:0] out_c_idx_reg_144;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_217;
reg   [31:0] out_reg_157;
reg   [4:0] in_ch_idx_reg_169;
reg   [31:0] out_1_reg_180;
reg   [2:0] r_idx_reg_192;
reg   [31:0] out_2_reg_203;
reg   [2:0] c_idx_reg_215;
wire   [63:0] tmp_fu_253_p1;
wire   [63:0] tmp_138_cast_fu_391_p1;
wire   [63:0] tmp_146_cast_fu_457_p1;
reg   [31:0] grp_fu_226_p0;
reg   [31:0] grp_fu_226_p1;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_251;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_258;
wire   [4:0] tmp_100_fu_312_p3;
wire   [5:0] tmp_34_cast_fu_308_p1;
wire   [5:0] p_shl1_cast_fu_320_p1;
wire   [2:0] slide_in_r_idx_fu_303_p2;
wire   [4:0] tmp_102_fu_334_p3;
wire   [5:0] tmp_35_cast_fu_330_p1;
wire   [5:0] p_shl_cast_fu_342_p1;
wire   [2:0] slide_in_c_idx_fu_364_p2;
wire   [5:0] tmp_36_cast_fu_369_p1;
wire   [5:0] tmp_104_fu_373_p2;
wire   [9:0] tmp_137_cast_fu_378_p3;
wire   [9:0] tmp_105_fu_386_p2;
wire   [5:0] tmp_37_cast_fu_396_p1;
wire   [5:0] tmp_106_fu_400_p2;
wire   [9:0] tmp_74_fu_405_p3;
wire   [63:0] tmp_107_fu_413_p1;
wire   [63:0] tmp_108_fu_417_p2;
wire   [9:0] tmp_75_fu_422_p1;
wire   [13:0] tmp_76_fu_434_p1;
wire   [16:0] p_shl2_cast_fu_426_p3;
wire   [16:0] p_shl3_cast_fu_438_p3;
wire   [16:0] tmp_109_fu_446_p2;
wire   [16:0] tmp_110_fu_452_p2;
wire   [31:0] x_assign_to_int_fu_462_p1;
wire   [7:0] tmp_29_fu_465_p4;
wire   [22:0] tmp_73_fu_475_p1;
wire   [0:0] notrhs_fu_485_p2;
wire   [0:0] notlhs_fu_479_p2;
wire   [0:0] tmp_31_fu_491_p2;
wire   [0:0] tmp_32_fu_236_p2;
wire   [0:0] tmp_33_fu_497_p2;
wire    grp_fu_226_ce;
wire    grp_fu_232_ce;
wire   [4:0] tmp_32_fu_236_opcode;
reg   [19:0] ap_NS_fsm;


inference_fadd_32ns_32ns_32_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
inference_fadd_32ns_32ns_32_4_full_dsp_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_226_p0 ),
    .din1( grp_fu_226_p1 ),
    .ce( grp_fu_226_ce ),
    .dout( grp_fu_226_p2 )
);

inference_fmul_32ns_32ns_32_2_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
inference_fmul_32ns_32ns_32_2_max_dsp_U22(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( in_val_reg_598 ),
    .din1( W_load_reg_603 ),
    .ce( grp_fu_232_ce ),
    .dout( grp_fu_232_p2 )
);

inference_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
inference_fcmp_32ns_32ns_1_1_U23(
    .din0( x_assign_reg_623 ),
    .din1( ap_const_lv32_0 ),
    .opcode( tmp_32_fu_236_opcode ),
    .dout( tmp_32_fu_236_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond1_fu_291_p2))) begin
        c_idx_reg_215 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        c_idx_reg_215 <= c_idx_3_reg_583;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == out_r_idx_phi_fu_136_p4))) begin
        filter_idx_reg_120 <= filter_idx_1_reg_514;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        filter_idx_reg_120 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond1_fu_291_p2))) begin
        in_ch_idx_reg_169 <= in_ch_idx_1_reg_547;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == out_c_idx_phi_fu_149_p4))) begin
        in_ch_idx_reg_169 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond_fu_352_p2))) begin
        out_1_reg_180 <= out_2_reg_203;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_271_p2))) begin
        out_1_reg_180 <= out_reg_157;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond1_fu_291_p2))) begin
        out_2_reg_203 <= out_1_reg_180;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        out_2_reg_203 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == out_r_idx_phi_fu_136_p4))) begin
        out_c_idx_reg_144 <= ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        out_c_idx_reg_144 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == out_c_idx_phi_fu_149_p4))) begin
        out_r_idx_reg_131 <= ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_241_p2 == ap_const_lv1_0))) begin
        out_r_idx_reg_131 <= ap_const_lv1_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond1_fu_291_p2))) begin
        out_reg_157 <= out_1_reg_180;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == out_c_idx_phi_fu_149_p4))) begin
        out_reg_157 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond_fu_352_p2))) begin
        r_idx_reg_192 <= r_idx_3_reg_565;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_271_p2))) begin
        r_idx_reg_192 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        W_load_reg_603 <= W_q0;
        in_val_reg_598 <= x_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_241_p2 == ap_const_lv1_0))) begin
        b_addr_reg_524 <= tmp_fu_253_p1;
        out_feature_0_0_addr_reg_529 <= tmp_fu_253_p1;
        tmp_cast_reg_519[6 : 0] <= tmp_cast_fu_259_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        b_load_reg_618 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        c_idx_3_reg_583 <= c_idx_3_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        filter_idx_1_reg_514 <= filter_idx_1_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        in_ch_idx_1_reg_547 <= in_ch_idx_1_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        out_c_idx_cast4_reg_539[0] <= out_c_idx_cast4_fu_267_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        out_r_idx_cast5_reg_534[0] <= out_r_idx_cast5_fu_263_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        r_idx_3_reg_565 <= r_idx_3_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond1_fu_291_p2))) begin
        tmp_101_reg_570 <= tmp_101_fu_324_p2;
        tmp_103_reg_575 <= tmp_103_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp_38_reg_608 <= grp_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond2_fu_271_p2))) begin
        tmp_cast_78_reg_557[4 : 0] <= tmp_cast_78_fu_287_p1[4 : 0];
        tmp_s_reg_552[4 : 0] <= tmp_s_fu_283_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        x_assign_reg_623 <= grp_fu_226_p2;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        W_ce0 = ap_const_logic_1;
    end else begin
        W_ce0 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond3_fu_241_p2) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_241_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond3_fu_241_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_241_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_169) begin
    if (ap_sig_bdd_169) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_251) begin
    if (ap_sig_bdd_251) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_178) begin
    if (ap_sig_bdd_178) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_186) begin
    if (ap_sig_bdd_186) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_258) begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_194) begin
    if (ap_sig_bdd_194) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_38) begin
    if (ap_sig_bdd_38) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_217) begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_75) begin
    if (ap_sig_bdd_75) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_94) begin
    if (ap_sig_bdd_94) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_103) begin
    if (ap_sig_bdd_103) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_112) begin
    if (ap_sig_bdd_112) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_128) begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_144) begin
    if (ap_sig_bdd_144) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_159) begin
    if (ap_sig_bdd_159) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        b_ce0 = ap_const_logic_1;
    end else begin
        b_ce0 = ap_const_logic_0;
    end
end

always @ (out_reg_157 or out_2_reg_203 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st16_fsm_15) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_226_p0 = out_reg_157;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_226_p0 = out_2_reg_203;
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (tmp_38_reg_608 or b_load_reg_618 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st16_fsm_15) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_226_p1 = b_load_reg_618;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_226_p1 = tmp_38_reg_608;
    end else begin
        grp_fu_226_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st20_fsm_19) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        out_feature_0_0_ce0 = ap_const_logic_1;
    end else begin
        out_feature_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st20_fsm_19) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        out_feature_0_0_we0 = ap_const_logic_1;
    end else begin
        out_feature_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st7_fsm_6) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        x_ce0 = ap_const_logic_1;
    end else begin
        x_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond3_fu_241_p2 or exitcond2_fu_271_p2 or exitcond1_fu_291_p2 or exitcond_fu_352_p2 or out_r_idx_phi_fu_136_p4 or out_c_idx_phi_fu_149_p4) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond3_fu_241_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == out_r_idx_phi_fu_136_p4)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == out_c_idx_phi_fu_149_p4)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == exitcond2_fu_271_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_291_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_352_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign W_address0 = tmp_146_cast_fu_457_p1;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_103 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_112 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_144 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_159 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_169 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_178 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_186 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_194 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_251 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_38 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_75 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_94 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign b_address0 = b_addr_reg_524;

assign c_idx_3_fu_358_p2 = (c_idx_reg_215 + ap_const_lv3_1);

assign exitcond1_fu_291_p2 = (r_idx_reg_192 == ap_const_lv3_5? 1'b1: 1'b0);

assign exitcond2_fu_271_p2 = (in_ch_idx_reg_169 == ap_const_lv5_10? 1'b1: 1'b0);

assign exitcond3_fu_241_p2 = (filter_idx_reg_120 == ap_const_lv7_78? 1'b1: 1'b0);

assign exitcond_fu_352_p2 = (c_idx_reg_215 == ap_const_lv3_5? 1'b1: 1'b0);

assign filter_idx_1_fu_247_p2 = (filter_idx_reg_120 + ap_const_lv7_1);

assign grp_fu_226_ce = ap_const_logic_1;

assign grp_fu_232_ce = ap_const_logic_1;

assign in_ch_idx_1_fu_277_p2 = (in_ch_idx_reg_169 + ap_const_lv5_1);

assign notlhs_fu_479_p2 = (tmp_29_fu_465_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs_fu_485_p2 = (tmp_73_fu_475_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign out_c_idx_cast4_fu_267_p1 = out_c_idx_reg_144;

assign out_c_idx_phi_fu_149_p4 = out_c_idx_reg_144;

assign out_feature_0_0_address0 = out_feature_0_0_addr_reg_529;

assign out_feature_0_0_d0 = ((tmp_33_fu_497_p2[0:0] === 1'b1) ? x_assign_reg_623 : ap_const_lv32_0);

assign out_r_idx_cast5_fu_263_p1 = out_r_idx_reg_131;

assign out_r_idx_phi_fu_136_p4 = out_r_idx_reg_131;

assign p_shl1_cast_fu_320_p1 = tmp_100_fu_312_p3;

assign p_shl2_cast_fu_426_p3 = {{tmp_75_fu_422_p1}, {ap_const_lv7_0}};

assign p_shl3_cast_fu_438_p3 = {{tmp_76_fu_434_p1}, {ap_const_lv3_0}};

assign p_shl_cast_fu_342_p1 = tmp_102_fu_334_p3;

assign r_idx_3_fu_297_p2 = (r_idx_reg_192 + ap_const_lv3_1);

assign slide_in_c_idx_fu_364_p2 = (out_c_idx_cast4_reg_539 + c_idx_reg_215);

assign slide_in_r_idx_fu_303_p2 = (r_idx_reg_192 + out_r_idx_cast5_reg_534);

assign tmp_100_fu_312_p3 = {{r_idx_reg_192}, {ap_const_lv2_0}};

assign tmp_101_fu_324_p2 = (tmp_34_cast_fu_308_p1 + p_shl1_cast_fu_320_p1);

assign tmp_102_fu_334_p3 = {{slide_in_r_idx_fu_303_p2}, {ap_const_lv2_0}};

assign tmp_103_fu_346_p2 = (tmp_35_cast_fu_330_p1 + p_shl_cast_fu_342_p1);

assign tmp_104_fu_373_p2 = (tmp_36_cast_fu_369_p1 + tmp_103_reg_575);

assign tmp_105_fu_386_p2 = (tmp_cast_78_reg_557 + tmp_137_cast_fu_378_p3);

assign tmp_106_fu_400_p2 = (tmp_37_cast_fu_396_p1 + tmp_101_reg_570);

assign tmp_107_fu_413_p1 = tmp_74_fu_405_p3;

assign tmp_108_fu_417_p2 = (tmp_s_reg_552 + tmp_107_fu_413_p1);

assign tmp_109_fu_446_p2 = (p_shl2_cast_fu_426_p3 - p_shl3_cast_fu_438_p3);

assign tmp_110_fu_452_p2 = (tmp_cast_reg_519 + tmp_109_fu_446_p2);

assign tmp_137_cast_fu_378_p3 = {{tmp_104_fu_373_p2}, {ap_const_lv4_0}};

assign tmp_138_cast_fu_391_p1 = tmp_105_fu_386_p2;

assign tmp_146_cast_fu_457_p1 = tmp_110_fu_452_p2;

assign tmp_29_fu_465_p4 = {{x_assign_to_int_fu_462_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_31_fu_491_p2 = (notrhs_fu_485_p2 | notlhs_fu_479_p2);

assign tmp_32_fu_236_opcode = ap_const_lv5_2;

assign tmp_33_fu_497_p2 = (tmp_31_fu_491_p2 & tmp_32_fu_236_p2);

assign tmp_34_cast_fu_308_p1 = r_idx_reg_192;

assign tmp_35_cast_fu_330_p1 = slide_in_r_idx_fu_303_p2;

assign tmp_36_cast_fu_369_p1 = slide_in_c_idx_fu_364_p2;

assign tmp_37_cast_fu_396_p1 = c_idx_reg_215;

assign tmp_73_fu_475_p1 = x_assign_to_int_fu_462_p1[22:0];

assign tmp_74_fu_405_p3 = {{tmp_106_fu_400_p2}, {ap_const_lv4_0}};

assign tmp_75_fu_422_p1 = tmp_108_fu_417_p2[9:0];

assign tmp_76_fu_434_p1 = tmp_108_fu_417_p2[13:0];

assign tmp_cast_78_fu_287_p1 = in_ch_idx_reg_169;

assign tmp_cast_fu_259_p1 = filter_idx_reg_120;

assign tmp_fu_253_p1 = filter_idx_reg_120;

assign tmp_s_fu_283_p1 = in_ch_idx_reg_169;

assign x_address0 = tmp_138_cast_fu_391_p1;

assign x_assign_to_int_fu_462_p1 = x_assign_reg_623;
always @ (posedge ap_clk) begin
    tmp_cast_reg_519[16:7] <= 10'b0000000000;
    out_r_idx_cast5_reg_534[2:1] <= 2'b00;
    out_c_idx_cast4_reg_539[2:1] <= 2'b00;
    tmp_s_reg_552[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_cast_78_reg_557[9:5] <= 5'b00000;
end



endmodule //inference_conv2d

