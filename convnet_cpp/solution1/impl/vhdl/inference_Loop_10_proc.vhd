-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inference_Loop_10_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    smWeight_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    smWeight_ce0 : OUT STD_LOGIC;
    smWeight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W5_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_0_ce0 : OUT STD_LOGIC;
    W5_0_we0 : OUT STD_LOGIC;
    W5_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_1_ce0 : OUT STD_LOGIC;
    W5_1_we0 : OUT STD_LOGIC;
    W5_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_2_ce0 : OUT STD_LOGIC;
    W5_2_we0 : OUT STD_LOGIC;
    W5_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_3_ce0 : OUT STD_LOGIC;
    W5_3_we0 : OUT STD_LOGIC;
    W5_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_4_ce0 : OUT STD_LOGIC;
    W5_4_we0 : OUT STD_LOGIC;
    W5_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_5_ce0 : OUT STD_LOGIC;
    W5_5_we0 : OUT STD_LOGIC;
    W5_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_6_ce0 : OUT STD_LOGIC;
    W5_6_we0 : OUT STD_LOGIC;
    W5_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_7_ce0 : OUT STD_LOGIC;
    W5_7_we0 : OUT STD_LOGIC;
    W5_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_8_ce0 : OUT STD_LOGIC;
    W5_8_we0 : OUT STD_LOGIC;
    W5_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_9_ce0 : OUT STD_LOGIC;
    W5_9_we0 : OUT STD_LOGIC;
    W5_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_10_ce0 : OUT STD_LOGIC;
    W5_10_we0 : OUT STD_LOGIC;
    W5_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_11_ce0 : OUT STD_LOGIC;
    W5_11_we0 : OUT STD_LOGIC;
    W5_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_12_ce0 : OUT STD_LOGIC;
    W5_12_we0 : OUT STD_LOGIC;
    W5_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_13_ce0 : OUT STD_LOGIC;
    W5_13_we0 : OUT STD_LOGIC;
    W5_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_14_ce0 : OUT STD_LOGIC;
    W5_14_we0 : OUT STD_LOGIC;
    W5_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_15_ce0 : OUT STD_LOGIC;
    W5_15_we0 : OUT STD_LOGIC;
    W5_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_16_ce0 : OUT STD_LOGIC;
    W5_16_we0 : OUT STD_LOGIC;
    W5_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_17_ce0 : OUT STD_LOGIC;
    W5_17_we0 : OUT STD_LOGIC;
    W5_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_18_ce0 : OUT STD_LOGIC;
    W5_18_we0 : OUT STD_LOGIC;
    W5_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_19_ce0 : OUT STD_LOGIC;
    W5_19_we0 : OUT STD_LOGIC;
    W5_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_20_ce0 : OUT STD_LOGIC;
    W5_20_we0 : OUT STD_LOGIC;
    W5_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_21_ce0 : OUT STD_LOGIC;
    W5_21_we0 : OUT STD_LOGIC;
    W5_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_22_ce0 : OUT STD_LOGIC;
    W5_22_we0 : OUT STD_LOGIC;
    W5_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_23_ce0 : OUT STD_LOGIC;
    W5_23_we0 : OUT STD_LOGIC;
    W5_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_24_ce0 : OUT STD_LOGIC;
    W5_24_we0 : OUT STD_LOGIC;
    W5_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_25_ce0 : OUT STD_LOGIC;
    W5_25_we0 : OUT STD_LOGIC;
    W5_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_26_ce0 : OUT STD_LOGIC;
    W5_26_we0 : OUT STD_LOGIC;
    W5_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_27_ce0 : OUT STD_LOGIC;
    W5_27_we0 : OUT STD_LOGIC;
    W5_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_28_ce0 : OUT STD_LOGIC;
    W5_28_we0 : OUT STD_LOGIC;
    W5_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_29_ce0 : OUT STD_LOGIC;
    W5_29_we0 : OUT STD_LOGIC;
    W5_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_30_ce0 : OUT STD_LOGIC;
    W5_30_we0 : OUT STD_LOGIC;
    W5_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_31_ce0 : OUT STD_LOGIC;
    W5_31_we0 : OUT STD_LOGIC;
    W5_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_32_ce0 : OUT STD_LOGIC;
    W5_32_we0 : OUT STD_LOGIC;
    W5_32_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_33_ce0 : OUT STD_LOGIC;
    W5_33_we0 : OUT STD_LOGIC;
    W5_33_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_34_ce0 : OUT STD_LOGIC;
    W5_34_we0 : OUT STD_LOGIC;
    W5_34_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_35_ce0 : OUT STD_LOGIC;
    W5_35_we0 : OUT STD_LOGIC;
    W5_35_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_36_ce0 : OUT STD_LOGIC;
    W5_36_we0 : OUT STD_LOGIC;
    W5_36_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_37_ce0 : OUT STD_LOGIC;
    W5_37_we0 : OUT STD_LOGIC;
    W5_37_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_38_ce0 : OUT STD_LOGIC;
    W5_38_we0 : OUT STD_LOGIC;
    W5_38_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_39_ce0 : OUT STD_LOGIC;
    W5_39_we0 : OUT STD_LOGIC;
    W5_39_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_40_ce0 : OUT STD_LOGIC;
    W5_40_we0 : OUT STD_LOGIC;
    W5_40_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_41_ce0 : OUT STD_LOGIC;
    W5_41_we0 : OUT STD_LOGIC;
    W5_41_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_42_ce0 : OUT STD_LOGIC;
    W5_42_we0 : OUT STD_LOGIC;
    W5_42_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_43_ce0 : OUT STD_LOGIC;
    W5_43_we0 : OUT STD_LOGIC;
    W5_43_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_44_ce0 : OUT STD_LOGIC;
    W5_44_we0 : OUT STD_LOGIC;
    W5_44_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_45_ce0 : OUT STD_LOGIC;
    W5_45_we0 : OUT STD_LOGIC;
    W5_45_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_46_ce0 : OUT STD_LOGIC;
    W5_46_we0 : OUT STD_LOGIC;
    W5_46_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_47_ce0 : OUT STD_LOGIC;
    W5_47_we0 : OUT STD_LOGIC;
    W5_47_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_48_ce0 : OUT STD_LOGIC;
    W5_48_we0 : OUT STD_LOGIC;
    W5_48_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_49_ce0 : OUT STD_LOGIC;
    W5_49_we0 : OUT STD_LOGIC;
    W5_49_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_50_ce0 : OUT STD_LOGIC;
    W5_50_we0 : OUT STD_LOGIC;
    W5_50_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_51_ce0 : OUT STD_LOGIC;
    W5_51_we0 : OUT STD_LOGIC;
    W5_51_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_52_ce0 : OUT STD_LOGIC;
    W5_52_we0 : OUT STD_LOGIC;
    W5_52_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_53_ce0 : OUT STD_LOGIC;
    W5_53_we0 : OUT STD_LOGIC;
    W5_53_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_54_ce0 : OUT STD_LOGIC;
    W5_54_we0 : OUT STD_LOGIC;
    W5_54_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_55_ce0 : OUT STD_LOGIC;
    W5_55_we0 : OUT STD_LOGIC;
    W5_55_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_56_ce0 : OUT STD_LOGIC;
    W5_56_we0 : OUT STD_LOGIC;
    W5_56_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_57_ce0 : OUT STD_LOGIC;
    W5_57_we0 : OUT STD_LOGIC;
    W5_57_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_58_ce0 : OUT STD_LOGIC;
    W5_58_we0 : OUT STD_LOGIC;
    W5_58_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_59_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_59_ce0 : OUT STD_LOGIC;
    W5_59_we0 : OUT STD_LOGIC;
    W5_59_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_60_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_60_ce0 : OUT STD_LOGIC;
    W5_60_we0 : OUT STD_LOGIC;
    W5_60_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_61_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_61_ce0 : OUT STD_LOGIC;
    W5_61_we0 : OUT STD_LOGIC;
    W5_61_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_62_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_62_ce0 : OUT STD_LOGIC;
    W5_62_we0 : OUT STD_LOGIC;
    W5_62_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_63_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_63_ce0 : OUT STD_LOGIC;
    W5_63_we0 : OUT STD_LOGIC;
    W5_63_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_64_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_64_ce0 : OUT STD_LOGIC;
    W5_64_we0 : OUT STD_LOGIC;
    W5_64_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_65_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_65_ce0 : OUT STD_LOGIC;
    W5_65_we0 : OUT STD_LOGIC;
    W5_65_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_66_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_66_ce0 : OUT STD_LOGIC;
    W5_66_we0 : OUT STD_LOGIC;
    W5_66_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_67_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_67_ce0 : OUT STD_LOGIC;
    W5_67_we0 : OUT STD_LOGIC;
    W5_67_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_68_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_68_ce0 : OUT STD_LOGIC;
    W5_68_we0 : OUT STD_LOGIC;
    W5_68_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_69_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_69_ce0 : OUT STD_LOGIC;
    W5_69_we0 : OUT STD_LOGIC;
    W5_69_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_70_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_70_ce0 : OUT STD_LOGIC;
    W5_70_we0 : OUT STD_LOGIC;
    W5_70_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_71_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_71_ce0 : OUT STD_LOGIC;
    W5_71_we0 : OUT STD_LOGIC;
    W5_71_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_72_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_72_ce0 : OUT STD_LOGIC;
    W5_72_we0 : OUT STD_LOGIC;
    W5_72_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_73_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_73_ce0 : OUT STD_LOGIC;
    W5_73_we0 : OUT STD_LOGIC;
    W5_73_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_74_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_74_ce0 : OUT STD_LOGIC;
    W5_74_we0 : OUT STD_LOGIC;
    W5_74_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_75_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_75_ce0 : OUT STD_LOGIC;
    W5_75_we0 : OUT STD_LOGIC;
    W5_75_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_76_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_76_ce0 : OUT STD_LOGIC;
    W5_76_we0 : OUT STD_LOGIC;
    W5_76_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_77_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_77_ce0 : OUT STD_LOGIC;
    W5_77_we0 : OUT STD_LOGIC;
    W5_77_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_78_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_78_ce0 : OUT STD_LOGIC;
    W5_78_we0 : OUT STD_LOGIC;
    W5_78_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_79_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_79_ce0 : OUT STD_LOGIC;
    W5_79_we0 : OUT STD_LOGIC;
    W5_79_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_80_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_80_ce0 : OUT STD_LOGIC;
    W5_80_we0 : OUT STD_LOGIC;
    W5_80_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_81_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_81_ce0 : OUT STD_LOGIC;
    W5_81_we0 : OUT STD_LOGIC;
    W5_81_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_82_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_82_ce0 : OUT STD_LOGIC;
    W5_82_we0 : OUT STD_LOGIC;
    W5_82_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W5_83_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W5_83_ce0 : OUT STD_LOGIC;
    W5_83_we0 : OUT STD_LOGIC;
    W5_83_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of inference_Loop_10_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st4_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_348 : STD_LOGIC_VECTOR (9 downto 0) := "1101001000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal indvar_flatten_reg_1490 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_1501 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_1512 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1701 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_635 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal indvar_flatten_next_fu_1529_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_mid2_fu_1547_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_mid2_reg_1710 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_mid2_fu_1555_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_mid2_reg_1715 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_6_fu_1608_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_bdd_659 : BOOLEAN;
    signal i_phi_fu_1505_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_813_cast_fu_1603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1535_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_1563_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_773_fu_1575_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_cast_fu_1583_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_1571_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_774_fu_1587_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_cast_fu_1593_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_775_fu_1597_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1322 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond_flatten_fu_1523_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_659))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_659)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_reg_1501 assign process. --
    i_reg_1501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_1701 = ap_const_lv1_0))) then 
                i_reg_1501 <= i_mid2_reg_1715;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_659))) then 
                i_reg_1501 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_1490 assign process. --
    indvar_flatten_reg_1490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_1490 <= indvar_flatten_next_fu_1529_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_659))) then 
                indvar_flatten_reg_1490 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- j_reg_1512 assign process. --
    j_reg_1512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))) then 
                j_reg_1512 <= j_6_fu_1608_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_659))) then 
                j_reg_1512 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then
                exitcond_flatten_reg_1701 <= exitcond_flatten_fu_1523_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))) then
                i_mid2_reg_1715 <= i_mid2_fu_1555_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))) then
                j_mid2_reg_1710 <= j_mid2_fu_1547_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond_flatten_fu_1523_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_659)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_659)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_1523_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_2;
                end if;
            when ap_ST_st4_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    W5_0_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_0_ce0 assign process. --
    W5_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_0_ce0 <= ap_const_logic_1;
        else 
            W5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_0_d0 <= smWeight_q0;

    -- W5_0_we0 assign process. --
    W5_0_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_0)))) then 
            W5_0_we0 <= ap_const_logic_1;
        else 
            W5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_10_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_10_ce0 assign process. --
    W5_10_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_10_ce0 <= ap_const_logic_1;
        else 
            W5_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_10_d0 <= smWeight_q0;

    -- W5_10_we0 assign process. --
    W5_10_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_A)))) then 
            W5_10_we0 <= ap_const_logic_1;
        else 
            W5_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_11_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_11_ce0 assign process. --
    W5_11_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_11_ce0 <= ap_const_logic_1;
        else 
            W5_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_11_d0 <= smWeight_q0;

    -- W5_11_we0 assign process. --
    W5_11_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_B)))) then 
            W5_11_we0 <= ap_const_logic_1;
        else 
            W5_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_12_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_12_ce0 assign process. --
    W5_12_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_12_ce0 <= ap_const_logic_1;
        else 
            W5_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_12_d0 <= smWeight_q0;

    -- W5_12_we0 assign process. --
    W5_12_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_C)))) then 
            W5_12_we0 <= ap_const_logic_1;
        else 
            W5_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_13_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_13_ce0 assign process. --
    W5_13_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_13_ce0 <= ap_const_logic_1;
        else 
            W5_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_13_d0 <= smWeight_q0;

    -- W5_13_we0 assign process. --
    W5_13_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_D)))) then 
            W5_13_we0 <= ap_const_logic_1;
        else 
            W5_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_14_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_14_ce0 assign process. --
    W5_14_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_14_ce0 <= ap_const_logic_1;
        else 
            W5_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_14_d0 <= smWeight_q0;

    -- W5_14_we0 assign process. --
    W5_14_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_E)))) then 
            W5_14_we0 <= ap_const_logic_1;
        else 
            W5_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_15_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_15_ce0 assign process. --
    W5_15_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_15_ce0 <= ap_const_logic_1;
        else 
            W5_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_15_d0 <= smWeight_q0;

    -- W5_15_we0 assign process. --
    W5_15_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_F)))) then 
            W5_15_we0 <= ap_const_logic_1;
        else 
            W5_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_16_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_16_ce0 assign process. --
    W5_16_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_16_ce0 <= ap_const_logic_1;
        else 
            W5_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_16_d0 <= smWeight_q0;

    -- W5_16_we0 assign process. --
    W5_16_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_10)))) then 
            W5_16_we0 <= ap_const_logic_1;
        else 
            W5_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_17_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_17_ce0 assign process. --
    W5_17_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_17_ce0 <= ap_const_logic_1;
        else 
            W5_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_17_d0 <= smWeight_q0;

    -- W5_17_we0 assign process. --
    W5_17_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_11)))) then 
            W5_17_we0 <= ap_const_logic_1;
        else 
            W5_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_18_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_18_ce0 assign process. --
    W5_18_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_18_ce0 <= ap_const_logic_1;
        else 
            W5_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_18_d0 <= smWeight_q0;

    -- W5_18_we0 assign process. --
    W5_18_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_12)))) then 
            W5_18_we0 <= ap_const_logic_1;
        else 
            W5_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_19_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_19_ce0 assign process. --
    W5_19_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_19_ce0 <= ap_const_logic_1;
        else 
            W5_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_19_d0 <= smWeight_q0;

    -- W5_19_we0 assign process. --
    W5_19_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_13)))) then 
            W5_19_we0 <= ap_const_logic_1;
        else 
            W5_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_1_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_1_ce0 assign process. --
    W5_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_1_ce0 <= ap_const_logic_1;
        else 
            W5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_1_d0 <= smWeight_q0;

    -- W5_1_we0 assign process. --
    W5_1_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1)))) then 
            W5_1_we0 <= ap_const_logic_1;
        else 
            W5_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_20_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_20_ce0 assign process. --
    W5_20_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_20_ce0 <= ap_const_logic_1;
        else 
            W5_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_20_d0 <= smWeight_q0;

    -- W5_20_we0 assign process. --
    W5_20_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_14)))) then 
            W5_20_we0 <= ap_const_logic_1;
        else 
            W5_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_21_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_21_ce0 assign process. --
    W5_21_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_21_ce0 <= ap_const_logic_1;
        else 
            W5_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_21_d0 <= smWeight_q0;

    -- W5_21_we0 assign process. --
    W5_21_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_15)))) then 
            W5_21_we0 <= ap_const_logic_1;
        else 
            W5_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_22_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_22_ce0 assign process. --
    W5_22_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_22_ce0 <= ap_const_logic_1;
        else 
            W5_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_22_d0 <= smWeight_q0;

    -- W5_22_we0 assign process. --
    W5_22_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_16)))) then 
            W5_22_we0 <= ap_const_logic_1;
        else 
            W5_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_23_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_23_ce0 assign process. --
    W5_23_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_23_ce0 <= ap_const_logic_1;
        else 
            W5_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_23_d0 <= smWeight_q0;

    -- W5_23_we0 assign process. --
    W5_23_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_17)))) then 
            W5_23_we0 <= ap_const_logic_1;
        else 
            W5_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_24_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_24_ce0 assign process. --
    W5_24_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_24_ce0 <= ap_const_logic_1;
        else 
            W5_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_24_d0 <= smWeight_q0;

    -- W5_24_we0 assign process. --
    W5_24_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_18)))) then 
            W5_24_we0 <= ap_const_logic_1;
        else 
            W5_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_25_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_25_ce0 assign process. --
    W5_25_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_25_ce0 <= ap_const_logic_1;
        else 
            W5_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_25_d0 <= smWeight_q0;

    -- W5_25_we0 assign process. --
    W5_25_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_19)))) then 
            W5_25_we0 <= ap_const_logic_1;
        else 
            W5_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_26_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_26_ce0 assign process. --
    W5_26_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_26_ce0 <= ap_const_logic_1;
        else 
            W5_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_26_d0 <= smWeight_q0;

    -- W5_26_we0 assign process. --
    W5_26_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1A)))) then 
            W5_26_we0 <= ap_const_logic_1;
        else 
            W5_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_27_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_27_ce0 assign process. --
    W5_27_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_27_ce0 <= ap_const_logic_1;
        else 
            W5_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_27_d0 <= smWeight_q0;

    -- W5_27_we0 assign process. --
    W5_27_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1B)))) then 
            W5_27_we0 <= ap_const_logic_1;
        else 
            W5_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_28_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_28_ce0 assign process. --
    W5_28_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_28_ce0 <= ap_const_logic_1;
        else 
            W5_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_28_d0 <= smWeight_q0;

    -- W5_28_we0 assign process. --
    W5_28_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1C)))) then 
            W5_28_we0 <= ap_const_logic_1;
        else 
            W5_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_29_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_29_ce0 assign process. --
    W5_29_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_29_ce0 <= ap_const_logic_1;
        else 
            W5_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_29_d0 <= smWeight_q0;

    -- W5_29_we0 assign process. --
    W5_29_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1D)))) then 
            W5_29_we0 <= ap_const_logic_1;
        else 
            W5_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_2_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_2_ce0 assign process. --
    W5_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_2_ce0 <= ap_const_logic_1;
        else 
            W5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_2_d0 <= smWeight_q0;

    -- W5_2_we0 assign process. --
    W5_2_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2)))) then 
            W5_2_we0 <= ap_const_logic_1;
        else 
            W5_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_30_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_30_ce0 assign process. --
    W5_30_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_30_ce0 <= ap_const_logic_1;
        else 
            W5_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_30_d0 <= smWeight_q0;

    -- W5_30_we0 assign process. --
    W5_30_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1E)))) then 
            W5_30_we0 <= ap_const_logic_1;
        else 
            W5_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_31_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_31_ce0 assign process. --
    W5_31_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_31_ce0 <= ap_const_logic_1;
        else 
            W5_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_31_d0 <= smWeight_q0;

    -- W5_31_we0 assign process. --
    W5_31_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_1F)))) then 
            W5_31_we0 <= ap_const_logic_1;
        else 
            W5_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_32_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_32_ce0 assign process. --
    W5_32_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_32_ce0 <= ap_const_logic_1;
        else 
            W5_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_32_d0 <= smWeight_q0;

    -- W5_32_we0 assign process. --
    W5_32_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_20)))) then 
            W5_32_we0 <= ap_const_logic_1;
        else 
            W5_32_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_33_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_33_ce0 assign process. --
    W5_33_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_33_ce0 <= ap_const_logic_1;
        else 
            W5_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_33_d0 <= smWeight_q0;

    -- W5_33_we0 assign process. --
    W5_33_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_21)))) then 
            W5_33_we0 <= ap_const_logic_1;
        else 
            W5_33_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_34_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_34_ce0 assign process. --
    W5_34_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_34_ce0 <= ap_const_logic_1;
        else 
            W5_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_34_d0 <= smWeight_q0;

    -- W5_34_we0 assign process. --
    W5_34_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_22)))) then 
            W5_34_we0 <= ap_const_logic_1;
        else 
            W5_34_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_35_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_35_ce0 assign process. --
    W5_35_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_35_ce0 <= ap_const_logic_1;
        else 
            W5_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_35_d0 <= smWeight_q0;

    -- W5_35_we0 assign process. --
    W5_35_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_23)))) then 
            W5_35_we0 <= ap_const_logic_1;
        else 
            W5_35_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_36_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_36_ce0 assign process. --
    W5_36_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_36_ce0 <= ap_const_logic_1;
        else 
            W5_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_36_d0 <= smWeight_q0;

    -- W5_36_we0 assign process. --
    W5_36_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_24)))) then 
            W5_36_we0 <= ap_const_logic_1;
        else 
            W5_36_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_37_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_37_ce0 assign process. --
    W5_37_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_37_ce0 <= ap_const_logic_1;
        else 
            W5_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_37_d0 <= smWeight_q0;

    -- W5_37_we0 assign process. --
    W5_37_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_25)))) then 
            W5_37_we0 <= ap_const_logic_1;
        else 
            W5_37_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_38_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_38_ce0 assign process. --
    W5_38_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_38_ce0 <= ap_const_logic_1;
        else 
            W5_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_38_d0 <= smWeight_q0;

    -- W5_38_we0 assign process. --
    W5_38_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_26)))) then 
            W5_38_we0 <= ap_const_logic_1;
        else 
            W5_38_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_39_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_39_ce0 assign process. --
    W5_39_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_39_ce0 <= ap_const_logic_1;
        else 
            W5_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_39_d0 <= smWeight_q0;

    -- W5_39_we0 assign process. --
    W5_39_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_27)))) then 
            W5_39_we0 <= ap_const_logic_1;
        else 
            W5_39_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_3_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_3_ce0 assign process. --
    W5_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_3_ce0 <= ap_const_logic_1;
        else 
            W5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_3_d0 <= smWeight_q0;

    -- W5_3_we0 assign process. --
    W5_3_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3)))) then 
            W5_3_we0 <= ap_const_logic_1;
        else 
            W5_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_40_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_40_ce0 assign process. --
    W5_40_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_40_ce0 <= ap_const_logic_1;
        else 
            W5_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_40_d0 <= smWeight_q0;

    -- W5_40_we0 assign process. --
    W5_40_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_28)))) then 
            W5_40_we0 <= ap_const_logic_1;
        else 
            W5_40_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_41_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_41_ce0 assign process. --
    W5_41_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_41_ce0 <= ap_const_logic_1;
        else 
            W5_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_41_d0 <= smWeight_q0;

    -- W5_41_we0 assign process. --
    W5_41_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_29)))) then 
            W5_41_we0 <= ap_const_logic_1;
        else 
            W5_41_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_42_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_42_ce0 assign process. --
    W5_42_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_42_ce0 <= ap_const_logic_1;
        else 
            W5_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_42_d0 <= smWeight_q0;

    -- W5_42_we0 assign process. --
    W5_42_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2A)))) then 
            W5_42_we0 <= ap_const_logic_1;
        else 
            W5_42_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_43_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_43_ce0 assign process. --
    W5_43_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_43_ce0 <= ap_const_logic_1;
        else 
            W5_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_43_d0 <= smWeight_q0;

    -- W5_43_we0 assign process. --
    W5_43_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2B)))) then 
            W5_43_we0 <= ap_const_logic_1;
        else 
            W5_43_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_44_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_44_ce0 assign process. --
    W5_44_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_44_ce0 <= ap_const_logic_1;
        else 
            W5_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_44_d0 <= smWeight_q0;

    -- W5_44_we0 assign process. --
    W5_44_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2C)))) then 
            W5_44_we0 <= ap_const_logic_1;
        else 
            W5_44_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_45_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_45_ce0 assign process. --
    W5_45_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_45_ce0 <= ap_const_logic_1;
        else 
            W5_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_45_d0 <= smWeight_q0;

    -- W5_45_we0 assign process. --
    W5_45_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2D)))) then 
            W5_45_we0 <= ap_const_logic_1;
        else 
            W5_45_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_46_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_46_ce0 assign process. --
    W5_46_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_46_ce0 <= ap_const_logic_1;
        else 
            W5_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_46_d0 <= smWeight_q0;

    -- W5_46_we0 assign process. --
    W5_46_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2E)))) then 
            W5_46_we0 <= ap_const_logic_1;
        else 
            W5_46_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_47_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_47_ce0 assign process. --
    W5_47_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_47_ce0 <= ap_const_logic_1;
        else 
            W5_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_47_d0 <= smWeight_q0;

    -- W5_47_we0 assign process. --
    W5_47_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_2F)))) then 
            W5_47_we0 <= ap_const_logic_1;
        else 
            W5_47_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_48_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_48_ce0 assign process. --
    W5_48_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_48_ce0 <= ap_const_logic_1;
        else 
            W5_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_48_d0 <= smWeight_q0;

    -- W5_48_we0 assign process. --
    W5_48_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_30)))) then 
            W5_48_we0 <= ap_const_logic_1;
        else 
            W5_48_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_49_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_49_ce0 assign process. --
    W5_49_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_49_ce0 <= ap_const_logic_1;
        else 
            W5_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_49_d0 <= smWeight_q0;

    -- W5_49_we0 assign process. --
    W5_49_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_31)))) then 
            W5_49_we0 <= ap_const_logic_1;
        else 
            W5_49_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_4_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_4_ce0 assign process. --
    W5_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_4_ce0 <= ap_const_logic_1;
        else 
            W5_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_4_d0 <= smWeight_q0;

    -- W5_4_we0 assign process. --
    W5_4_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4)))) then 
            W5_4_we0 <= ap_const_logic_1;
        else 
            W5_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_50_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_50_ce0 assign process. --
    W5_50_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_50_ce0 <= ap_const_logic_1;
        else 
            W5_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_50_d0 <= smWeight_q0;

    -- W5_50_we0 assign process. --
    W5_50_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_32)))) then 
            W5_50_we0 <= ap_const_logic_1;
        else 
            W5_50_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_51_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_51_ce0 assign process. --
    W5_51_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_51_ce0 <= ap_const_logic_1;
        else 
            W5_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_51_d0 <= smWeight_q0;

    -- W5_51_we0 assign process. --
    W5_51_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_33)))) then 
            W5_51_we0 <= ap_const_logic_1;
        else 
            W5_51_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_52_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_52_ce0 assign process. --
    W5_52_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_52_ce0 <= ap_const_logic_1;
        else 
            W5_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_52_d0 <= smWeight_q0;

    -- W5_52_we0 assign process. --
    W5_52_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_34)))) then 
            W5_52_we0 <= ap_const_logic_1;
        else 
            W5_52_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_53_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_53_ce0 assign process. --
    W5_53_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_53_ce0 <= ap_const_logic_1;
        else 
            W5_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_53_d0 <= smWeight_q0;

    -- W5_53_we0 assign process. --
    W5_53_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_35)))) then 
            W5_53_we0 <= ap_const_logic_1;
        else 
            W5_53_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_54_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_54_ce0 assign process. --
    W5_54_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_54_ce0 <= ap_const_logic_1;
        else 
            W5_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_54_d0 <= smWeight_q0;

    -- W5_54_we0 assign process. --
    W5_54_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_36)))) then 
            W5_54_we0 <= ap_const_logic_1;
        else 
            W5_54_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_55_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_55_ce0 assign process. --
    W5_55_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_55_ce0 <= ap_const_logic_1;
        else 
            W5_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_55_d0 <= smWeight_q0;

    -- W5_55_we0 assign process. --
    W5_55_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_37)))) then 
            W5_55_we0 <= ap_const_logic_1;
        else 
            W5_55_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_56_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_56_ce0 assign process. --
    W5_56_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_56_ce0 <= ap_const_logic_1;
        else 
            W5_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_56_d0 <= smWeight_q0;

    -- W5_56_we0 assign process. --
    W5_56_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_38)))) then 
            W5_56_we0 <= ap_const_logic_1;
        else 
            W5_56_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_57_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_57_ce0 assign process. --
    W5_57_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_57_ce0 <= ap_const_logic_1;
        else 
            W5_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_57_d0 <= smWeight_q0;

    -- W5_57_we0 assign process. --
    W5_57_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_39)))) then 
            W5_57_we0 <= ap_const_logic_1;
        else 
            W5_57_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_58_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_58_ce0 assign process. --
    W5_58_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_58_ce0 <= ap_const_logic_1;
        else 
            W5_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_58_d0 <= smWeight_q0;

    -- W5_58_we0 assign process. --
    W5_58_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3A)))) then 
            W5_58_we0 <= ap_const_logic_1;
        else 
            W5_58_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_59_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_59_ce0 assign process. --
    W5_59_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_59_ce0 <= ap_const_logic_1;
        else 
            W5_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_59_d0 <= smWeight_q0;

    -- W5_59_we0 assign process. --
    W5_59_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3B)))) then 
            W5_59_we0 <= ap_const_logic_1;
        else 
            W5_59_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_5_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_5_ce0 assign process. --
    W5_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_5_ce0 <= ap_const_logic_1;
        else 
            W5_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_5_d0 <= smWeight_q0;

    -- W5_5_we0 assign process. --
    W5_5_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_5)))) then 
            W5_5_we0 <= ap_const_logic_1;
        else 
            W5_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_60_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_60_ce0 assign process. --
    W5_60_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_60_ce0 <= ap_const_logic_1;
        else 
            W5_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_60_d0 <= smWeight_q0;

    -- W5_60_we0 assign process. --
    W5_60_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3C)))) then 
            W5_60_we0 <= ap_const_logic_1;
        else 
            W5_60_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_61_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_61_ce0 assign process. --
    W5_61_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_61_ce0 <= ap_const_logic_1;
        else 
            W5_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_61_d0 <= smWeight_q0;

    -- W5_61_we0 assign process. --
    W5_61_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3D)))) then 
            W5_61_we0 <= ap_const_logic_1;
        else 
            W5_61_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_62_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_62_ce0 assign process. --
    W5_62_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_62_ce0 <= ap_const_logic_1;
        else 
            W5_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_62_d0 <= smWeight_q0;

    -- W5_62_we0 assign process. --
    W5_62_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3E)))) then 
            W5_62_we0 <= ap_const_logic_1;
        else 
            W5_62_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_63_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_63_ce0 assign process. --
    W5_63_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_63_ce0 <= ap_const_logic_1;
        else 
            W5_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_63_d0 <= smWeight_q0;

    -- W5_63_we0 assign process. --
    W5_63_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_3F)))) then 
            W5_63_we0 <= ap_const_logic_1;
        else 
            W5_63_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_64_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_64_ce0 assign process. --
    W5_64_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_64_ce0 <= ap_const_logic_1;
        else 
            W5_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_64_d0 <= smWeight_q0;

    -- W5_64_we0 assign process. --
    W5_64_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_40)))) then 
            W5_64_we0 <= ap_const_logic_1;
        else 
            W5_64_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_65_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_65_ce0 assign process. --
    W5_65_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_65_ce0 <= ap_const_logic_1;
        else 
            W5_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_65_d0 <= smWeight_q0;

    -- W5_65_we0 assign process. --
    W5_65_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_41)))) then 
            W5_65_we0 <= ap_const_logic_1;
        else 
            W5_65_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_66_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_66_ce0 assign process. --
    W5_66_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_66_ce0 <= ap_const_logic_1;
        else 
            W5_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_66_d0 <= smWeight_q0;

    -- W5_66_we0 assign process. --
    W5_66_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_42)))) then 
            W5_66_we0 <= ap_const_logic_1;
        else 
            W5_66_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_67_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_67_ce0 assign process. --
    W5_67_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_67_ce0 <= ap_const_logic_1;
        else 
            W5_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_67_d0 <= smWeight_q0;

    -- W5_67_we0 assign process. --
    W5_67_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_43)))) then 
            W5_67_we0 <= ap_const_logic_1;
        else 
            W5_67_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_68_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_68_ce0 assign process. --
    W5_68_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_68_ce0 <= ap_const_logic_1;
        else 
            W5_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_68_d0 <= smWeight_q0;

    -- W5_68_we0 assign process. --
    W5_68_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_44)))) then 
            W5_68_we0 <= ap_const_logic_1;
        else 
            W5_68_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_69_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_69_ce0 assign process. --
    W5_69_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_69_ce0 <= ap_const_logic_1;
        else 
            W5_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_69_d0 <= smWeight_q0;

    -- W5_69_we0 assign process. --
    W5_69_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_45)))) then 
            W5_69_we0 <= ap_const_logic_1;
        else 
            W5_69_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_6_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_6_ce0 assign process. --
    W5_6_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_6_ce0 <= ap_const_logic_1;
        else 
            W5_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_6_d0 <= smWeight_q0;

    -- W5_6_we0 assign process. --
    W5_6_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_6)))) then 
            W5_6_we0 <= ap_const_logic_1;
        else 
            W5_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_70_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_70_ce0 assign process. --
    W5_70_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_70_ce0 <= ap_const_logic_1;
        else 
            W5_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_70_d0 <= smWeight_q0;

    -- W5_70_we0 assign process. --
    W5_70_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_46)))) then 
            W5_70_we0 <= ap_const_logic_1;
        else 
            W5_70_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_71_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_71_ce0 assign process. --
    W5_71_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_71_ce0 <= ap_const_logic_1;
        else 
            W5_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_71_d0 <= smWeight_q0;

    -- W5_71_we0 assign process. --
    W5_71_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_47)))) then 
            W5_71_we0 <= ap_const_logic_1;
        else 
            W5_71_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_72_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_72_ce0 assign process. --
    W5_72_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_72_ce0 <= ap_const_logic_1;
        else 
            W5_72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_72_d0 <= smWeight_q0;

    -- W5_72_we0 assign process. --
    W5_72_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_48)))) then 
            W5_72_we0 <= ap_const_logic_1;
        else 
            W5_72_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_73_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_73_ce0 assign process. --
    W5_73_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_73_ce0 <= ap_const_logic_1;
        else 
            W5_73_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_73_d0 <= smWeight_q0;

    -- W5_73_we0 assign process. --
    W5_73_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_49)))) then 
            W5_73_we0 <= ap_const_logic_1;
        else 
            W5_73_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_74_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_74_ce0 assign process. --
    W5_74_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_74_ce0 <= ap_const_logic_1;
        else 
            W5_74_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_74_d0 <= smWeight_q0;

    -- W5_74_we0 assign process. --
    W5_74_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4A)))) then 
            W5_74_we0 <= ap_const_logic_1;
        else 
            W5_74_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_75_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_75_ce0 assign process. --
    W5_75_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_75_ce0 <= ap_const_logic_1;
        else 
            W5_75_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_75_d0 <= smWeight_q0;

    -- W5_75_we0 assign process. --
    W5_75_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4B)))) then 
            W5_75_we0 <= ap_const_logic_1;
        else 
            W5_75_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_76_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_76_ce0 assign process. --
    W5_76_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_76_ce0 <= ap_const_logic_1;
        else 
            W5_76_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_76_d0 <= smWeight_q0;

    -- W5_76_we0 assign process. --
    W5_76_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4C)))) then 
            W5_76_we0 <= ap_const_logic_1;
        else 
            W5_76_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_77_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_77_ce0 assign process. --
    W5_77_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_77_ce0 <= ap_const_logic_1;
        else 
            W5_77_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_77_d0 <= smWeight_q0;

    -- W5_77_we0 assign process. --
    W5_77_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4D)))) then 
            W5_77_we0 <= ap_const_logic_1;
        else 
            W5_77_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_78_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_78_ce0 assign process. --
    W5_78_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_78_ce0 <= ap_const_logic_1;
        else 
            W5_78_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_78_d0 <= smWeight_q0;

    -- W5_78_we0 assign process. --
    W5_78_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4E)))) then 
            W5_78_we0 <= ap_const_logic_1;
        else 
            W5_78_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_79_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_79_ce0 assign process. --
    W5_79_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_79_ce0 <= ap_const_logic_1;
        else 
            W5_79_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_79_d0 <= smWeight_q0;

    -- W5_79_we0 assign process. --
    W5_79_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_4F)))) then 
            W5_79_we0 <= ap_const_logic_1;
        else 
            W5_79_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_7_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_7_ce0 assign process. --
    W5_7_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_7_ce0 <= ap_const_logic_1;
        else 
            W5_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_7_d0 <= smWeight_q0;

    -- W5_7_we0 assign process. --
    W5_7_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_7)))) then 
            W5_7_we0 <= ap_const_logic_1;
        else 
            W5_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_80_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_80_ce0 assign process. --
    W5_80_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_80_ce0 <= ap_const_logic_1;
        else 
            W5_80_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_80_d0 <= smWeight_q0;

    -- W5_80_we0 assign process. --
    W5_80_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_50)))) then 
            W5_80_we0 <= ap_const_logic_1;
        else 
            W5_80_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_81_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_81_ce0 assign process. --
    W5_81_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_81_ce0 <= ap_const_logic_1;
        else 
            W5_81_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_81_d0 <= smWeight_q0;

    -- W5_81_we0 assign process. --
    W5_81_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_51)))) then 
            W5_81_we0 <= ap_const_logic_1;
        else 
            W5_81_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_82_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_82_ce0 assign process. --
    W5_82_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_82_ce0 <= ap_const_logic_1;
        else 
            W5_82_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_82_d0 <= smWeight_q0;

    -- W5_82_we0 assign process. --
    W5_82_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_52)))) then 
            W5_82_we0 <= ap_const_logic_1;
        else 
            W5_82_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_83_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_83_ce0 assign process. --
    W5_83_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_83_ce0 <= ap_const_logic_1;
        else 
            W5_83_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_83_d0 <= smWeight_q0;

    -- W5_83_we0 assign process. --
    W5_83_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((i_mid2_reg_1715 = ap_const_lv7_52)) and not((i_mid2_reg_1715 = ap_const_lv7_51)) and not((i_mid2_reg_1715 = ap_const_lv7_50)) and not((i_mid2_reg_1715 = ap_const_lv7_4F)) and not((i_mid2_reg_1715 = ap_const_lv7_4E)) and not((i_mid2_reg_1715 = ap_const_lv7_4D)) and not((i_mid2_reg_1715 = ap_const_lv7_4C)) and not((i_mid2_reg_1715 = ap_const_lv7_4B)) and not((i_mid2_reg_1715 = ap_const_lv7_4A)) and not((i_mid2_reg_1715 = ap_const_lv7_49)) and not((i_mid2_reg_1715 = ap_const_lv7_48)) and not((i_mid2_reg_1715 = ap_const_lv7_47)) and not((i_mid2_reg_1715 = ap_const_lv7_46)) and not((i_mid2_reg_1715 = ap_const_lv7_45)) and not((i_mid2_reg_1715 = ap_const_lv7_44)) and not((i_mid2_reg_1715 = ap_const_lv7_43)) and not((i_mid2_reg_1715 = ap_const_lv7_42)) and not((i_mid2_reg_1715 = ap_const_lv7_41)) and not((i_mid2_reg_1715 = ap_const_lv7_40)) and not((i_mid2_reg_1715 = ap_const_lv7_3F)) and not((i_mid2_reg_1715 = ap_const_lv7_3E)) and not((i_mid2_reg_1715 = ap_const_lv7_3D)) and not((i_mid2_reg_1715 = ap_const_lv7_3C)) and not((i_mid2_reg_1715 = ap_const_lv7_3B)) and not((i_mid2_reg_1715 = ap_const_lv7_3A)) and not((i_mid2_reg_1715 = ap_const_lv7_39)) and not((i_mid2_reg_1715 = ap_const_lv7_38)) and not((i_mid2_reg_1715 = ap_const_lv7_37)) and not((i_mid2_reg_1715 = ap_const_lv7_36)) and not((i_mid2_reg_1715 = ap_const_lv7_35)) and not((i_mid2_reg_1715 = ap_const_lv7_34)) and not((i_mid2_reg_1715 = ap_const_lv7_33)) and not((i_mid2_reg_1715 = ap_const_lv7_32)) and not((i_mid2_reg_1715 = ap_const_lv7_31)) and not((i_mid2_reg_1715 = ap_const_lv7_30)) and not((i_mid2_reg_1715 = ap_const_lv7_2F)) and not((i_mid2_reg_1715 = ap_const_lv7_2E)) and not((i_mid2_reg_1715 = ap_const_lv7_2D)) and not((i_mid2_reg_1715 = ap_const_lv7_2C)) and not((i_mid2_reg_1715 = ap_const_lv7_2B)) and not((i_mid2_reg_1715 = ap_const_lv7_2A)) and not((i_mid2_reg_1715 = ap_const_lv7_29)) and not((i_mid2_reg_1715 = ap_const_lv7_28)) and not((i_mid2_reg_1715 = ap_const_lv7_27)) and not((i_mid2_reg_1715 = ap_const_lv7_26)) and not((i_mid2_reg_1715 = ap_const_lv7_25)) and not((i_mid2_reg_1715 = ap_const_lv7_24)) and not((i_mid2_reg_1715 = ap_const_lv7_23)) and not((i_mid2_reg_1715 = ap_const_lv7_22)) and not((i_mid2_reg_1715 = ap_const_lv7_21)) and not((i_mid2_reg_1715 = ap_const_lv7_20)) and not((i_mid2_reg_1715 = ap_const_lv7_1F)) and not((i_mid2_reg_1715 = ap_const_lv7_1E)) and not((i_mid2_reg_1715 = ap_const_lv7_1D)) and not((i_mid2_reg_1715 = ap_const_lv7_1C)) and not((i_mid2_reg_1715 = ap_const_lv7_1B)) and not((i_mid2_reg_1715 = ap_const_lv7_1A)) and not((i_mid2_reg_1715 = ap_const_lv7_19)) and not((i_mid2_reg_1715 = ap_const_lv7_18)) and not((i_mid2_reg_1715 = ap_const_lv7_17)) and not((i_mid2_reg_1715 = ap_const_lv7_16)) and not((i_mid2_reg_1715 = ap_const_lv7_15)) and not((i_mid2_reg_1715 = ap_const_lv7_14)) and not((i_mid2_reg_1715 = ap_const_lv7_13)) and not((i_mid2_reg_1715 = ap_const_lv7_12)) and not((i_mid2_reg_1715 = ap_const_lv7_11)) and not((i_mid2_reg_1715 = ap_const_lv7_10)) and not((i_mid2_reg_1715 = ap_const_lv7_F)) and not((i_mid2_reg_1715 = ap_const_lv7_E)) and not((i_mid2_reg_1715 = ap_const_lv7_D)) and not((i_mid2_reg_1715 = ap_const_lv7_C)) and not((i_mid2_reg_1715 = ap_const_lv7_B)) and not((i_mid2_reg_1715 = ap_const_lv7_A)) and not((i_mid2_reg_1715 = ap_const_lv7_9)) and not((i_mid2_reg_1715 = ap_const_lv7_8)) and not((i_mid2_reg_1715 = ap_const_lv7_7)) and not((i_mid2_reg_1715 = ap_const_lv7_6)) and not((i_mid2_reg_1715 = ap_const_lv7_5)) and not((i_mid2_reg_1715 = ap_const_lv7_4)) and not((i_mid2_reg_1715 = ap_const_lv7_3)) and not((i_mid2_reg_1715 = ap_const_lv7_2)) and not((i_mid2_reg_1715 = ap_const_lv7_1)) and not((i_mid2_reg_1715 = ap_const_lv7_0))))) then 
            W5_83_we0 <= ap_const_logic_1;
        else 
            W5_83_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_8_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_8_ce0 assign process. --
    W5_8_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_8_ce0 <= ap_const_logic_1;
        else 
            W5_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_8_d0 <= smWeight_q0;

    -- W5_8_we0 assign process. --
    W5_8_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_8)))) then 
            W5_8_we0 <= ap_const_logic_1;
        else 
            W5_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_9_address0 <= tmp_23_fu_1614_p1(4 - 1 downto 0);

    -- W5_9_ce0 assign process. --
    W5_9_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            W5_9_ce0 <= ap_const_logic_1;
        else 
            W5_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W5_9_d0 <= smWeight_q0;

    -- W5_9_we0 assign process. --
    W5_9_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (i_mid2_reg_1715 = ap_const_lv7_9)))) then 
            W5_9_we0 <= ap_const_logic_1;
        else 
            W5_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st4_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st4_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1322 assign process. --
    ap_sig_bdd_1322_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1322 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_635 assign process. --
    ap_sig_bdd_635_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_635 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_659 assign process. --
    ap_sig_bdd_659_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_659 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_635)
    begin
        if (ap_sig_bdd_635) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_2 assign process. --
    ap_sig_cseq_ST_st4_fsm_2_assign_proc : process(ap_sig_bdd_1322)
    begin
        if (ap_sig_bdd_1322) then 
            ap_sig_cseq_ST_st4_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_1523_p2 <= "1" when (indvar_flatten_reg_1490 = ap_const_lv10_348) else "0";
    exitcond_fu_1541_p2 <= "1" when (j_reg_1512 = ap_const_lv4_A) else "0";
    i_1_fu_1535_p2 <= std_logic_vector(unsigned(i_phi_fu_1505_p4) + unsigned(ap_const_lv7_1));
    i_mid2_fu_1555_p3 <= 
        i_1_fu_1535_p2 when (exitcond_fu_1541_p2(0) = '1') else 
        i_phi_fu_1505_p4;

    -- i_phi_fu_1505_p4 assign process. --
    i_phi_fu_1505_p4_assign_proc : process(i_reg_1501, exitcond_flatten_reg_1701, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_mid2_reg_1715)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_1701 = ap_const_lv1_0))) then 
            i_phi_fu_1505_p4 <= i_mid2_reg_1715;
        else 
            i_phi_fu_1505_p4 <= i_reg_1501;
        end if; 
    end process;

    indvar_flatten_next_fu_1529_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1490) + unsigned(ap_const_lv10_1));
    j_6_fu_1608_p2 <= std_logic_vector(unsigned(j_mid2_fu_1547_p3) + unsigned(ap_const_lv4_1));
    j_mid2_fu_1547_p3 <= 
        ap_const_lv4_0 when (exitcond_fu_1541_p2(0) = '1') else 
        j_reg_1512;
    p_shl1_cast_fu_1583_p1 <= std_logic_vector(resize(unsigned(tmp_773_fu_1575_p3),11));
    p_shl_cast_fu_1571_p1 <= std_logic_vector(resize(unsigned(tmp_fu_1563_p3),11));
    smWeight_address0 <= tmp_813_cast_fu_1603_p1(10 - 1 downto 0);

    -- smWeight_ce0 assign process. --
    smWeight_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            smWeight_ce0 <= ap_const_logic_1;
        else 
            smWeight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_23_cast_fu_1593_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_1547_p3),11));
    tmp_23_fu_1614_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1710),64));
    tmp_773_fu_1575_p3 <= (i_mid2_fu_1555_p3 & ap_const_lv1_0);
    tmp_774_fu_1587_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_1583_p1) + unsigned(p_shl_cast_fu_1571_p1));
    tmp_775_fu_1597_p2 <= std_logic_vector(unsigned(tmp_774_fu_1587_p2) + unsigned(tmp_23_cast_fu_1593_p1));
    tmp_813_cast_fu_1603_p1 <= std_logic_vector(resize(unsigned(tmp_775_fu_1597_p2),64));
    tmp_fu_1563_p3 <= (i_mid2_fu_1555_p3 & ap_const_lv3_0);
end behav;
