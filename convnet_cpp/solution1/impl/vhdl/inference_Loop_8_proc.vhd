-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inference_Loop_8_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fcWeight_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    fcWeight_ce0 : OUT STD_LOGIC;
    fcWeight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W4_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_0_ce0 : OUT STD_LOGIC;
    W4_0_we0 : OUT STD_LOGIC;
    W4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_1_ce0 : OUT STD_LOGIC;
    W4_1_we0 : OUT STD_LOGIC;
    W4_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_2_ce0 : OUT STD_LOGIC;
    W4_2_we0 : OUT STD_LOGIC;
    W4_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_3_ce0 : OUT STD_LOGIC;
    W4_3_we0 : OUT STD_LOGIC;
    W4_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_4_ce0 : OUT STD_LOGIC;
    W4_4_we0 : OUT STD_LOGIC;
    W4_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_5_ce0 : OUT STD_LOGIC;
    W4_5_we0 : OUT STD_LOGIC;
    W4_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_6_ce0 : OUT STD_LOGIC;
    W4_6_we0 : OUT STD_LOGIC;
    W4_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_7_ce0 : OUT STD_LOGIC;
    W4_7_we0 : OUT STD_LOGIC;
    W4_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_8_ce0 : OUT STD_LOGIC;
    W4_8_we0 : OUT STD_LOGIC;
    W4_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_9_ce0 : OUT STD_LOGIC;
    W4_9_we0 : OUT STD_LOGIC;
    W4_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_10_ce0 : OUT STD_LOGIC;
    W4_10_we0 : OUT STD_LOGIC;
    W4_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_11_ce0 : OUT STD_LOGIC;
    W4_11_we0 : OUT STD_LOGIC;
    W4_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_12_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_12_ce0 : OUT STD_LOGIC;
    W4_12_we0 : OUT STD_LOGIC;
    W4_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_13_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_13_ce0 : OUT STD_LOGIC;
    W4_13_we0 : OUT STD_LOGIC;
    W4_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_14_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_14_ce0 : OUT STD_LOGIC;
    W4_14_we0 : OUT STD_LOGIC;
    W4_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_15_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_15_ce0 : OUT STD_LOGIC;
    W4_15_we0 : OUT STD_LOGIC;
    W4_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_16_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_16_ce0 : OUT STD_LOGIC;
    W4_16_we0 : OUT STD_LOGIC;
    W4_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_17_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_17_ce0 : OUT STD_LOGIC;
    W4_17_we0 : OUT STD_LOGIC;
    W4_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_18_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_18_ce0 : OUT STD_LOGIC;
    W4_18_we0 : OUT STD_LOGIC;
    W4_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_19_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_19_ce0 : OUT STD_LOGIC;
    W4_19_we0 : OUT STD_LOGIC;
    W4_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_20_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_20_ce0 : OUT STD_LOGIC;
    W4_20_we0 : OUT STD_LOGIC;
    W4_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_21_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_21_ce0 : OUT STD_LOGIC;
    W4_21_we0 : OUT STD_LOGIC;
    W4_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_22_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_22_ce0 : OUT STD_LOGIC;
    W4_22_we0 : OUT STD_LOGIC;
    W4_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_23_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_23_ce0 : OUT STD_LOGIC;
    W4_23_we0 : OUT STD_LOGIC;
    W4_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_24_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_24_ce0 : OUT STD_LOGIC;
    W4_24_we0 : OUT STD_LOGIC;
    W4_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_25_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_25_ce0 : OUT STD_LOGIC;
    W4_25_we0 : OUT STD_LOGIC;
    W4_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_26_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_26_ce0 : OUT STD_LOGIC;
    W4_26_we0 : OUT STD_LOGIC;
    W4_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_27_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_27_ce0 : OUT STD_LOGIC;
    W4_27_we0 : OUT STD_LOGIC;
    W4_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_28_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_28_ce0 : OUT STD_LOGIC;
    W4_28_we0 : OUT STD_LOGIC;
    W4_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_29_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_29_ce0 : OUT STD_LOGIC;
    W4_29_we0 : OUT STD_LOGIC;
    W4_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_30_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_30_ce0 : OUT STD_LOGIC;
    W4_30_we0 : OUT STD_LOGIC;
    W4_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_31_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_31_ce0 : OUT STD_LOGIC;
    W4_31_we0 : OUT STD_LOGIC;
    W4_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_32_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_32_ce0 : OUT STD_LOGIC;
    W4_32_we0 : OUT STD_LOGIC;
    W4_32_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_33_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_33_ce0 : OUT STD_LOGIC;
    W4_33_we0 : OUT STD_LOGIC;
    W4_33_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_34_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_34_ce0 : OUT STD_LOGIC;
    W4_34_we0 : OUT STD_LOGIC;
    W4_34_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_35_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_35_ce0 : OUT STD_LOGIC;
    W4_35_we0 : OUT STD_LOGIC;
    W4_35_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_36_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_36_ce0 : OUT STD_LOGIC;
    W4_36_we0 : OUT STD_LOGIC;
    W4_36_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_37_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_37_ce0 : OUT STD_LOGIC;
    W4_37_we0 : OUT STD_LOGIC;
    W4_37_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_38_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_38_ce0 : OUT STD_LOGIC;
    W4_38_we0 : OUT STD_LOGIC;
    W4_38_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_39_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_39_ce0 : OUT STD_LOGIC;
    W4_39_we0 : OUT STD_LOGIC;
    W4_39_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_40_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_40_ce0 : OUT STD_LOGIC;
    W4_40_we0 : OUT STD_LOGIC;
    W4_40_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_41_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_41_ce0 : OUT STD_LOGIC;
    W4_41_we0 : OUT STD_LOGIC;
    W4_41_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_42_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_42_ce0 : OUT STD_LOGIC;
    W4_42_we0 : OUT STD_LOGIC;
    W4_42_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_43_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_43_ce0 : OUT STD_LOGIC;
    W4_43_we0 : OUT STD_LOGIC;
    W4_43_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_44_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_44_ce0 : OUT STD_LOGIC;
    W4_44_we0 : OUT STD_LOGIC;
    W4_44_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_45_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_45_ce0 : OUT STD_LOGIC;
    W4_45_we0 : OUT STD_LOGIC;
    W4_45_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_46_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_46_ce0 : OUT STD_LOGIC;
    W4_46_we0 : OUT STD_LOGIC;
    W4_46_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_47_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_47_ce0 : OUT STD_LOGIC;
    W4_47_we0 : OUT STD_LOGIC;
    W4_47_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_48_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_48_ce0 : OUT STD_LOGIC;
    W4_48_we0 : OUT STD_LOGIC;
    W4_48_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_49_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_49_ce0 : OUT STD_LOGIC;
    W4_49_we0 : OUT STD_LOGIC;
    W4_49_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_50_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_50_ce0 : OUT STD_LOGIC;
    W4_50_we0 : OUT STD_LOGIC;
    W4_50_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_51_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_51_ce0 : OUT STD_LOGIC;
    W4_51_we0 : OUT STD_LOGIC;
    W4_51_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_52_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_52_ce0 : OUT STD_LOGIC;
    W4_52_we0 : OUT STD_LOGIC;
    W4_52_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_53_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_53_ce0 : OUT STD_LOGIC;
    W4_53_we0 : OUT STD_LOGIC;
    W4_53_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_54_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_54_ce0 : OUT STD_LOGIC;
    W4_54_we0 : OUT STD_LOGIC;
    W4_54_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_55_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_55_ce0 : OUT STD_LOGIC;
    W4_55_we0 : OUT STD_LOGIC;
    W4_55_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_56_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_56_ce0 : OUT STD_LOGIC;
    W4_56_we0 : OUT STD_LOGIC;
    W4_56_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_57_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_57_ce0 : OUT STD_LOGIC;
    W4_57_we0 : OUT STD_LOGIC;
    W4_57_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_58_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_58_ce0 : OUT STD_LOGIC;
    W4_58_we0 : OUT STD_LOGIC;
    W4_58_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_59_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_59_ce0 : OUT STD_LOGIC;
    W4_59_we0 : OUT STD_LOGIC;
    W4_59_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_60_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_60_ce0 : OUT STD_LOGIC;
    W4_60_we0 : OUT STD_LOGIC;
    W4_60_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_61_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_61_ce0 : OUT STD_LOGIC;
    W4_61_we0 : OUT STD_LOGIC;
    W4_61_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_62_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_62_ce0 : OUT STD_LOGIC;
    W4_62_we0 : OUT STD_LOGIC;
    W4_62_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_63_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_63_ce0 : OUT STD_LOGIC;
    W4_63_we0 : OUT STD_LOGIC;
    W4_63_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_64_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_64_ce0 : OUT STD_LOGIC;
    W4_64_we0 : OUT STD_LOGIC;
    W4_64_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_65_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_65_ce0 : OUT STD_LOGIC;
    W4_65_we0 : OUT STD_LOGIC;
    W4_65_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_66_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_66_ce0 : OUT STD_LOGIC;
    W4_66_we0 : OUT STD_LOGIC;
    W4_66_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_67_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_67_ce0 : OUT STD_LOGIC;
    W4_67_we0 : OUT STD_LOGIC;
    W4_67_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_68_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_68_ce0 : OUT STD_LOGIC;
    W4_68_we0 : OUT STD_LOGIC;
    W4_68_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_69_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_69_ce0 : OUT STD_LOGIC;
    W4_69_we0 : OUT STD_LOGIC;
    W4_69_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_70_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_70_ce0 : OUT STD_LOGIC;
    W4_70_we0 : OUT STD_LOGIC;
    W4_70_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_71_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_71_ce0 : OUT STD_LOGIC;
    W4_71_we0 : OUT STD_LOGIC;
    W4_71_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_72_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_72_ce0 : OUT STD_LOGIC;
    W4_72_we0 : OUT STD_LOGIC;
    W4_72_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_73_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_73_ce0 : OUT STD_LOGIC;
    W4_73_we0 : OUT STD_LOGIC;
    W4_73_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_74_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_74_ce0 : OUT STD_LOGIC;
    W4_74_we0 : OUT STD_LOGIC;
    W4_74_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_75_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_75_ce0 : OUT STD_LOGIC;
    W4_75_we0 : OUT STD_LOGIC;
    W4_75_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_76_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_76_ce0 : OUT STD_LOGIC;
    W4_76_we0 : OUT STD_LOGIC;
    W4_76_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_77_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_77_ce0 : OUT STD_LOGIC;
    W4_77_we0 : OUT STD_LOGIC;
    W4_77_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_78_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_78_ce0 : OUT STD_LOGIC;
    W4_78_we0 : OUT STD_LOGIC;
    W4_78_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_79_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_79_ce0 : OUT STD_LOGIC;
    W4_79_we0 : OUT STD_LOGIC;
    W4_79_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_80_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_80_ce0 : OUT STD_LOGIC;
    W4_80_we0 : OUT STD_LOGIC;
    W4_80_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_81_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_81_ce0 : OUT STD_LOGIC;
    W4_81_we0 : OUT STD_LOGIC;
    W4_81_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_82_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_82_ce0 : OUT STD_LOGIC;
    W4_82_we0 : OUT STD_LOGIC;
    W4_82_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_83_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_83_ce0 : OUT STD_LOGIC;
    W4_83_we0 : OUT STD_LOGIC;
    W4_83_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_84_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_84_ce0 : OUT STD_LOGIC;
    W4_84_we0 : OUT STD_LOGIC;
    W4_84_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_85_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_85_ce0 : OUT STD_LOGIC;
    W4_85_we0 : OUT STD_LOGIC;
    W4_85_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_86_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_86_ce0 : OUT STD_LOGIC;
    W4_86_we0 : OUT STD_LOGIC;
    W4_86_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_87_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_87_ce0 : OUT STD_LOGIC;
    W4_87_we0 : OUT STD_LOGIC;
    W4_87_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_88_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_88_ce0 : OUT STD_LOGIC;
    W4_88_we0 : OUT STD_LOGIC;
    W4_88_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_89_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_89_ce0 : OUT STD_LOGIC;
    W4_89_we0 : OUT STD_LOGIC;
    W4_89_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_90_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_90_ce0 : OUT STD_LOGIC;
    W4_90_we0 : OUT STD_LOGIC;
    W4_90_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_91_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_91_ce0 : OUT STD_LOGIC;
    W4_91_we0 : OUT STD_LOGIC;
    W4_91_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_92_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_92_ce0 : OUT STD_LOGIC;
    W4_92_we0 : OUT STD_LOGIC;
    W4_92_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_93_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_93_ce0 : OUT STD_LOGIC;
    W4_93_we0 : OUT STD_LOGIC;
    W4_93_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_94_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_94_ce0 : OUT STD_LOGIC;
    W4_94_we0 : OUT STD_LOGIC;
    W4_94_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_95_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_95_ce0 : OUT STD_LOGIC;
    W4_95_we0 : OUT STD_LOGIC;
    W4_95_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_96_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_96_ce0 : OUT STD_LOGIC;
    W4_96_we0 : OUT STD_LOGIC;
    W4_96_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_97_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_97_ce0 : OUT STD_LOGIC;
    W4_97_we0 : OUT STD_LOGIC;
    W4_97_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_98_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_98_ce0 : OUT STD_LOGIC;
    W4_98_we0 : OUT STD_LOGIC;
    W4_98_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_99_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_99_ce0 : OUT STD_LOGIC;
    W4_99_we0 : OUT STD_LOGIC;
    W4_99_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_100_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_100_ce0 : OUT STD_LOGIC;
    W4_100_we0 : OUT STD_LOGIC;
    W4_100_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_101_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_101_ce0 : OUT STD_LOGIC;
    W4_101_we0 : OUT STD_LOGIC;
    W4_101_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_102_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_102_ce0 : OUT STD_LOGIC;
    W4_102_we0 : OUT STD_LOGIC;
    W4_102_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_103_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_103_ce0 : OUT STD_LOGIC;
    W4_103_we0 : OUT STD_LOGIC;
    W4_103_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_104_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_104_ce0 : OUT STD_LOGIC;
    W4_104_we0 : OUT STD_LOGIC;
    W4_104_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_105_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_105_ce0 : OUT STD_LOGIC;
    W4_105_we0 : OUT STD_LOGIC;
    W4_105_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_106_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_106_ce0 : OUT STD_LOGIC;
    W4_106_we0 : OUT STD_LOGIC;
    W4_106_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_107_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_107_ce0 : OUT STD_LOGIC;
    W4_107_we0 : OUT STD_LOGIC;
    W4_107_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_108_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_108_ce0 : OUT STD_LOGIC;
    W4_108_we0 : OUT STD_LOGIC;
    W4_108_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_109_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_109_ce0 : OUT STD_LOGIC;
    W4_109_we0 : OUT STD_LOGIC;
    W4_109_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_110_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_110_ce0 : OUT STD_LOGIC;
    W4_110_we0 : OUT STD_LOGIC;
    W4_110_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_111_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_111_ce0 : OUT STD_LOGIC;
    W4_111_we0 : OUT STD_LOGIC;
    W4_111_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_112_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_112_ce0 : OUT STD_LOGIC;
    W4_112_we0 : OUT STD_LOGIC;
    W4_112_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_113_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_113_ce0 : OUT STD_LOGIC;
    W4_113_we0 : OUT STD_LOGIC;
    W4_113_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_114_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_114_ce0 : OUT STD_LOGIC;
    W4_114_we0 : OUT STD_LOGIC;
    W4_114_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_115_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_115_ce0 : OUT STD_LOGIC;
    W4_115_we0 : OUT STD_LOGIC;
    W4_115_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_116_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_116_ce0 : OUT STD_LOGIC;
    W4_116_we0 : OUT STD_LOGIC;
    W4_116_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_117_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_117_ce0 : OUT STD_LOGIC;
    W4_117_we0 : OUT STD_LOGIC;
    W4_117_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_118_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_118_ce0 : OUT STD_LOGIC;
    W4_118_we0 : OUT STD_LOGIC;
    W4_118_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W4_119_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W4_119_ce0 : OUT STD_LOGIC;
    W4_119_we0 : OUT STD_LOGIC;
    W4_119_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of inference_Loop_8_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st5_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_76 : STD_LOGIC_VECTOR (6 downto 0) := "1110110";
    constant ap_const_lv7_75 : STD_LOGIC_VECTOR (6 downto 0) := "1110101";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_6E : STD_LOGIC_VECTOR (6 downto 0) := "1101110";
    constant ap_const_lv7_6D : STD_LOGIC_VECTOR (6 downto 0) := "1101101";
    constant ap_const_lv7_6C : STD_LOGIC_VECTOR (6 downto 0) := "1101100";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv7_69 : STD_LOGIC_VECTOR (6 downto 0) := "1101001";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_66 : STD_LOGIC_VECTOR (6 downto 0) := "1100110";
    constant ap_const_lv7_65 : STD_LOGIC_VECTOR (6 downto 0) := "1100101";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv7_5E : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_const_lv7_5D : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_59 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_53 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv14_2760 : STD_LOGIC_VECTOR (13 downto 0) := "10011101100000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_54 : STD_LOGIC_VECTOR (13 downto 0) := "00000001010100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal indvar_flatten_reg_2090 : STD_LOGIC_VECTOR (13 downto 0);
    signal i8_reg_2101 : STD_LOGIC_VECTOR (6 downto 0);
    signal j8_reg_2112 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_flatten_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_2315 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_887 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal indvar_flatten_next_fu_2129_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal j8_mid2_fu_2147_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal j8_mid2_reg_2324 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_j8_mid2_reg_2324_pp0_it1 : STD_LOGIC_VECTOR (6 downto 0);
    signal i8_mid2_fu_2155_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i8_mid2_reg_2330 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_fu_2163_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_bdd_921 : BOOLEAN;
    signal i8_phi_fu_2105_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_752_cast_fu_2187_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_2192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_2135_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_2172_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_2172_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_cast_fu_2178_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_2181_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1823 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_2172_p00 : STD_LOGIC_VECTOR (13 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond_flatten_fu_2123_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_921))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_921)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end if;
        end if;
    end process;


    -- i8_reg_2101 assign process. --
    i8_reg_2101_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_2315 = ap_const_lv1_0))) then 
                i8_reg_2101 <= i8_mid2_reg_2330;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_921))) then 
                i8_reg_2101 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_2090 assign process. --
    indvar_flatten_reg_2090_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_2090 <= indvar_flatten_next_fu_2129_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_921))) then 
                indvar_flatten_reg_2090 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    -- j8_reg_2112 assign process. --
    j8_reg_2112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))) then 
                j8_reg_2112 <= j_fu_2163_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_921))) then 
                j8_reg_2112 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1)) then
                ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 <= i8_mid2_reg_2330;
                ap_reg_ppstg_j8_mid2_reg_2324_pp0_it1 <= j8_mid2_reg_2324;
                exitcond_flatten_reg_2315 <= exitcond_flatten_fu_2123_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))) then
                i8_mid2_reg_2330 <= i8_mid2_fu_2155_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_2123_p2 = ap_const_lv1_0))) then
                j8_mid2_reg_2324 <= j8_mid2_fu_2147_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond_flatten_fu_2123_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_bdd_921)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_921)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_2123_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_2123_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_2;
                end if;
            when ap_ST_st5_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    W4_0_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_0_ce0 assign process. --
    W4_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_0_ce0 <= ap_const_logic_1;
        else 
            W4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_0_d0 <= fcWeight_q0;

    -- W4_0_we0 assign process. --
    W4_0_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_0)))) then 
            W4_0_we0 <= ap_const_logic_1;
        else 
            W4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_100_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_100_ce0 assign process. --
    W4_100_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_100_ce0 <= ap_const_logic_1;
        else 
            W4_100_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_100_d0 <= fcWeight_q0;

    -- W4_100_we0 assign process. --
    W4_100_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_64)))) then 
            W4_100_we0 <= ap_const_logic_1;
        else 
            W4_100_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_101_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_101_ce0 assign process. --
    W4_101_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_101_ce0 <= ap_const_logic_1;
        else 
            W4_101_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_101_d0 <= fcWeight_q0;

    -- W4_101_we0 assign process. --
    W4_101_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_65)))) then 
            W4_101_we0 <= ap_const_logic_1;
        else 
            W4_101_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_102_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_102_ce0 assign process. --
    W4_102_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_102_ce0 <= ap_const_logic_1;
        else 
            W4_102_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_102_d0 <= fcWeight_q0;

    -- W4_102_we0 assign process. --
    W4_102_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_66)))) then 
            W4_102_we0 <= ap_const_logic_1;
        else 
            W4_102_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_103_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_103_ce0 assign process. --
    W4_103_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_103_ce0 <= ap_const_logic_1;
        else 
            W4_103_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_103_d0 <= fcWeight_q0;

    -- W4_103_we0 assign process. --
    W4_103_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_67)))) then 
            W4_103_we0 <= ap_const_logic_1;
        else 
            W4_103_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_104_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_104_ce0 assign process. --
    W4_104_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_104_ce0 <= ap_const_logic_1;
        else 
            W4_104_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_104_d0 <= fcWeight_q0;

    -- W4_104_we0 assign process. --
    W4_104_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_68)))) then 
            W4_104_we0 <= ap_const_logic_1;
        else 
            W4_104_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_105_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_105_ce0 assign process. --
    W4_105_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_105_ce0 <= ap_const_logic_1;
        else 
            W4_105_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_105_d0 <= fcWeight_q0;

    -- W4_105_we0 assign process. --
    W4_105_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_69)))) then 
            W4_105_we0 <= ap_const_logic_1;
        else 
            W4_105_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_106_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_106_ce0 assign process. --
    W4_106_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_106_ce0 <= ap_const_logic_1;
        else 
            W4_106_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_106_d0 <= fcWeight_q0;

    -- W4_106_we0 assign process. --
    W4_106_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6A)))) then 
            W4_106_we0 <= ap_const_logic_1;
        else 
            W4_106_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_107_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_107_ce0 assign process. --
    W4_107_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_107_ce0 <= ap_const_logic_1;
        else 
            W4_107_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_107_d0 <= fcWeight_q0;

    -- W4_107_we0 assign process. --
    W4_107_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6B)))) then 
            W4_107_we0 <= ap_const_logic_1;
        else 
            W4_107_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_108_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_108_ce0 assign process. --
    W4_108_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_108_ce0 <= ap_const_logic_1;
        else 
            W4_108_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_108_d0 <= fcWeight_q0;

    -- W4_108_we0 assign process. --
    W4_108_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6C)))) then 
            W4_108_we0 <= ap_const_logic_1;
        else 
            W4_108_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_109_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_109_ce0 assign process. --
    W4_109_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_109_ce0 <= ap_const_logic_1;
        else 
            W4_109_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_109_d0 <= fcWeight_q0;

    -- W4_109_we0 assign process. --
    W4_109_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6D)))) then 
            W4_109_we0 <= ap_const_logic_1;
        else 
            W4_109_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_10_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_10_ce0 assign process. --
    W4_10_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_10_ce0 <= ap_const_logic_1;
        else 
            W4_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_10_d0 <= fcWeight_q0;

    -- W4_10_we0 assign process. --
    W4_10_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_A)))) then 
            W4_10_we0 <= ap_const_logic_1;
        else 
            W4_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_110_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_110_ce0 assign process. --
    W4_110_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_110_ce0 <= ap_const_logic_1;
        else 
            W4_110_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_110_d0 <= fcWeight_q0;

    -- W4_110_we0 assign process. --
    W4_110_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6E)))) then 
            W4_110_we0 <= ap_const_logic_1;
        else 
            W4_110_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_111_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_111_ce0 assign process. --
    W4_111_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_111_ce0 <= ap_const_logic_1;
        else 
            W4_111_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_111_d0 <= fcWeight_q0;

    -- W4_111_we0 assign process. --
    W4_111_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6F)))) then 
            W4_111_we0 <= ap_const_logic_1;
        else 
            W4_111_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_112_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_112_ce0 assign process. --
    W4_112_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_112_ce0 <= ap_const_logic_1;
        else 
            W4_112_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_112_d0 <= fcWeight_q0;

    -- W4_112_we0 assign process. --
    W4_112_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_70)))) then 
            W4_112_we0 <= ap_const_logic_1;
        else 
            W4_112_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_113_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_113_ce0 assign process. --
    W4_113_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_113_ce0 <= ap_const_logic_1;
        else 
            W4_113_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_113_d0 <= fcWeight_q0;

    -- W4_113_we0 assign process. --
    W4_113_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_71)))) then 
            W4_113_we0 <= ap_const_logic_1;
        else 
            W4_113_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_114_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_114_ce0 assign process. --
    W4_114_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_114_ce0 <= ap_const_logic_1;
        else 
            W4_114_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_114_d0 <= fcWeight_q0;

    -- W4_114_we0 assign process. --
    W4_114_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_72)))) then 
            W4_114_we0 <= ap_const_logic_1;
        else 
            W4_114_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_115_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_115_ce0 assign process. --
    W4_115_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_115_ce0 <= ap_const_logic_1;
        else 
            W4_115_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_115_d0 <= fcWeight_q0;

    -- W4_115_we0 assign process. --
    W4_115_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_73)))) then 
            W4_115_we0 <= ap_const_logic_1;
        else 
            W4_115_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_116_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_116_ce0 assign process. --
    W4_116_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_116_ce0 <= ap_const_logic_1;
        else 
            W4_116_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_116_d0 <= fcWeight_q0;

    -- W4_116_we0 assign process. --
    W4_116_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_74)))) then 
            W4_116_we0 <= ap_const_logic_1;
        else 
            W4_116_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_117_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_117_ce0 assign process. --
    W4_117_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_117_ce0 <= ap_const_logic_1;
        else 
            W4_117_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_117_d0 <= fcWeight_q0;

    -- W4_117_we0 assign process. --
    W4_117_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_75)))) then 
            W4_117_we0 <= ap_const_logic_1;
        else 
            W4_117_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_118_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_118_ce0 assign process. --
    W4_118_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_118_ce0 <= ap_const_logic_1;
        else 
            W4_118_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_118_d0 <= fcWeight_q0;

    -- W4_118_we0 assign process. --
    W4_118_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_76)))) then 
            W4_118_we0 <= ap_const_logic_1;
        else 
            W4_118_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_119_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_119_ce0 assign process. --
    W4_119_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_119_ce0 <= ap_const_logic_1;
        else 
            W4_119_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_119_d0 <= fcWeight_q0;

    -- W4_119_we0 assign process. --
    W4_119_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_76)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_75)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_74)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_73)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_72)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_71)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_70)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_69)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_68)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_67)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_66)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_65)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_64)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_63)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_62)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_61)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_60)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_59)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_58)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_57)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_56)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_55)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_54)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_53)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_52)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_51)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_50)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_49)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_48)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_47)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_46)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_45)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_44)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_43)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_42)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_41)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_40)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_39)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_38)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_37)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_36)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_35)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_34)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_33)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_32)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_31)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_30)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_29)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_28)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_27)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_26)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_25)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_24)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_23)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_22)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_21)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_20)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_19)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_18)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_17)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_16)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_15)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_14)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_13)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_12)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_11)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_10)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_F)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_E)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_D)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_C)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_B)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_A)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_9)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_8)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_7)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1)) and not((ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_0))))) then 
            W4_119_we0 <= ap_const_logic_1;
        else 
            W4_119_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_11_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_11_ce0 assign process. --
    W4_11_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_11_ce0 <= ap_const_logic_1;
        else 
            W4_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_11_d0 <= fcWeight_q0;

    -- W4_11_we0 assign process. --
    W4_11_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_B)))) then 
            W4_11_we0 <= ap_const_logic_1;
        else 
            W4_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_12_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_12_ce0 assign process. --
    W4_12_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_12_ce0 <= ap_const_logic_1;
        else 
            W4_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_12_d0 <= fcWeight_q0;

    -- W4_12_we0 assign process. --
    W4_12_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_C)))) then 
            W4_12_we0 <= ap_const_logic_1;
        else 
            W4_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_13_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_13_ce0 assign process. --
    W4_13_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_13_ce0 <= ap_const_logic_1;
        else 
            W4_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_13_d0 <= fcWeight_q0;

    -- W4_13_we0 assign process. --
    W4_13_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_D)))) then 
            W4_13_we0 <= ap_const_logic_1;
        else 
            W4_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_14_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_14_ce0 assign process. --
    W4_14_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_14_ce0 <= ap_const_logic_1;
        else 
            W4_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_14_d0 <= fcWeight_q0;

    -- W4_14_we0 assign process. --
    W4_14_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_E)))) then 
            W4_14_we0 <= ap_const_logic_1;
        else 
            W4_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_15_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_15_ce0 assign process. --
    W4_15_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_15_ce0 <= ap_const_logic_1;
        else 
            W4_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_15_d0 <= fcWeight_q0;

    -- W4_15_we0 assign process. --
    W4_15_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_F)))) then 
            W4_15_we0 <= ap_const_logic_1;
        else 
            W4_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_16_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_16_ce0 assign process. --
    W4_16_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_16_ce0 <= ap_const_logic_1;
        else 
            W4_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_16_d0 <= fcWeight_q0;

    -- W4_16_we0 assign process. --
    W4_16_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_10)))) then 
            W4_16_we0 <= ap_const_logic_1;
        else 
            W4_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_17_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_17_ce0 assign process. --
    W4_17_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_17_ce0 <= ap_const_logic_1;
        else 
            W4_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_17_d0 <= fcWeight_q0;

    -- W4_17_we0 assign process. --
    W4_17_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_11)))) then 
            W4_17_we0 <= ap_const_logic_1;
        else 
            W4_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_18_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_18_ce0 assign process. --
    W4_18_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_18_ce0 <= ap_const_logic_1;
        else 
            W4_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_18_d0 <= fcWeight_q0;

    -- W4_18_we0 assign process. --
    W4_18_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_12)))) then 
            W4_18_we0 <= ap_const_logic_1;
        else 
            W4_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_19_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_19_ce0 assign process. --
    W4_19_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_19_ce0 <= ap_const_logic_1;
        else 
            W4_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_19_d0 <= fcWeight_q0;

    -- W4_19_we0 assign process. --
    W4_19_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_13)))) then 
            W4_19_we0 <= ap_const_logic_1;
        else 
            W4_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_1_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_1_ce0 assign process. --
    W4_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_1_ce0 <= ap_const_logic_1;
        else 
            W4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_1_d0 <= fcWeight_q0;

    -- W4_1_we0 assign process. --
    W4_1_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1)))) then 
            W4_1_we0 <= ap_const_logic_1;
        else 
            W4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_20_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_20_ce0 assign process. --
    W4_20_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_20_ce0 <= ap_const_logic_1;
        else 
            W4_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_20_d0 <= fcWeight_q0;

    -- W4_20_we0 assign process. --
    W4_20_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_14)))) then 
            W4_20_we0 <= ap_const_logic_1;
        else 
            W4_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_21_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_21_ce0 assign process. --
    W4_21_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_21_ce0 <= ap_const_logic_1;
        else 
            W4_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_21_d0 <= fcWeight_q0;

    -- W4_21_we0 assign process. --
    W4_21_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_15)))) then 
            W4_21_we0 <= ap_const_logic_1;
        else 
            W4_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_22_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_22_ce0 assign process. --
    W4_22_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_22_ce0 <= ap_const_logic_1;
        else 
            W4_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_22_d0 <= fcWeight_q0;

    -- W4_22_we0 assign process. --
    W4_22_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_16)))) then 
            W4_22_we0 <= ap_const_logic_1;
        else 
            W4_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_23_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_23_ce0 assign process. --
    W4_23_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_23_ce0 <= ap_const_logic_1;
        else 
            W4_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_23_d0 <= fcWeight_q0;

    -- W4_23_we0 assign process. --
    W4_23_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_17)))) then 
            W4_23_we0 <= ap_const_logic_1;
        else 
            W4_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_24_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_24_ce0 assign process. --
    W4_24_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_24_ce0 <= ap_const_logic_1;
        else 
            W4_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_24_d0 <= fcWeight_q0;

    -- W4_24_we0 assign process. --
    W4_24_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_18)))) then 
            W4_24_we0 <= ap_const_logic_1;
        else 
            W4_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_25_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_25_ce0 assign process. --
    W4_25_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_25_ce0 <= ap_const_logic_1;
        else 
            W4_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_25_d0 <= fcWeight_q0;

    -- W4_25_we0 assign process. --
    W4_25_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_19)))) then 
            W4_25_we0 <= ap_const_logic_1;
        else 
            W4_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_26_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_26_ce0 assign process. --
    W4_26_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_26_ce0 <= ap_const_logic_1;
        else 
            W4_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_26_d0 <= fcWeight_q0;

    -- W4_26_we0 assign process. --
    W4_26_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1A)))) then 
            W4_26_we0 <= ap_const_logic_1;
        else 
            W4_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_27_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_27_ce0 assign process. --
    W4_27_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_27_ce0 <= ap_const_logic_1;
        else 
            W4_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_27_d0 <= fcWeight_q0;

    -- W4_27_we0 assign process. --
    W4_27_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1B)))) then 
            W4_27_we0 <= ap_const_logic_1;
        else 
            W4_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_28_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_28_ce0 assign process. --
    W4_28_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_28_ce0 <= ap_const_logic_1;
        else 
            W4_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_28_d0 <= fcWeight_q0;

    -- W4_28_we0 assign process. --
    W4_28_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1C)))) then 
            W4_28_we0 <= ap_const_logic_1;
        else 
            W4_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_29_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_29_ce0 assign process. --
    W4_29_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_29_ce0 <= ap_const_logic_1;
        else 
            W4_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_29_d0 <= fcWeight_q0;

    -- W4_29_we0 assign process. --
    W4_29_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1D)))) then 
            W4_29_we0 <= ap_const_logic_1;
        else 
            W4_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_2_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_2_ce0 assign process. --
    W4_2_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_2_ce0 <= ap_const_logic_1;
        else 
            W4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_2_d0 <= fcWeight_q0;

    -- W4_2_we0 assign process. --
    W4_2_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2)))) then 
            W4_2_we0 <= ap_const_logic_1;
        else 
            W4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_30_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_30_ce0 assign process. --
    W4_30_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_30_ce0 <= ap_const_logic_1;
        else 
            W4_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_30_d0 <= fcWeight_q0;

    -- W4_30_we0 assign process. --
    W4_30_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1E)))) then 
            W4_30_we0 <= ap_const_logic_1;
        else 
            W4_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_31_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_31_ce0 assign process. --
    W4_31_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_31_ce0 <= ap_const_logic_1;
        else 
            W4_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_31_d0 <= fcWeight_q0;

    -- W4_31_we0 assign process. --
    W4_31_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_1F)))) then 
            W4_31_we0 <= ap_const_logic_1;
        else 
            W4_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_32_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_32_ce0 assign process. --
    W4_32_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_32_ce0 <= ap_const_logic_1;
        else 
            W4_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_32_d0 <= fcWeight_q0;

    -- W4_32_we0 assign process. --
    W4_32_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_20)))) then 
            W4_32_we0 <= ap_const_logic_1;
        else 
            W4_32_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_33_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_33_ce0 assign process. --
    W4_33_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_33_ce0 <= ap_const_logic_1;
        else 
            W4_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_33_d0 <= fcWeight_q0;

    -- W4_33_we0 assign process. --
    W4_33_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_21)))) then 
            W4_33_we0 <= ap_const_logic_1;
        else 
            W4_33_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_34_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_34_ce0 assign process. --
    W4_34_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_34_ce0 <= ap_const_logic_1;
        else 
            W4_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_34_d0 <= fcWeight_q0;

    -- W4_34_we0 assign process. --
    W4_34_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_22)))) then 
            W4_34_we0 <= ap_const_logic_1;
        else 
            W4_34_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_35_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_35_ce0 assign process. --
    W4_35_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_35_ce0 <= ap_const_logic_1;
        else 
            W4_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_35_d0 <= fcWeight_q0;

    -- W4_35_we0 assign process. --
    W4_35_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_23)))) then 
            W4_35_we0 <= ap_const_logic_1;
        else 
            W4_35_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_36_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_36_ce0 assign process. --
    W4_36_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_36_ce0 <= ap_const_logic_1;
        else 
            W4_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_36_d0 <= fcWeight_q0;

    -- W4_36_we0 assign process. --
    W4_36_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_24)))) then 
            W4_36_we0 <= ap_const_logic_1;
        else 
            W4_36_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_37_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_37_ce0 assign process. --
    W4_37_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_37_ce0 <= ap_const_logic_1;
        else 
            W4_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_37_d0 <= fcWeight_q0;

    -- W4_37_we0 assign process. --
    W4_37_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_25)))) then 
            W4_37_we0 <= ap_const_logic_1;
        else 
            W4_37_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_38_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_38_ce0 assign process. --
    W4_38_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_38_ce0 <= ap_const_logic_1;
        else 
            W4_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_38_d0 <= fcWeight_q0;

    -- W4_38_we0 assign process. --
    W4_38_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_26)))) then 
            W4_38_we0 <= ap_const_logic_1;
        else 
            W4_38_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_39_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_39_ce0 assign process. --
    W4_39_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_39_ce0 <= ap_const_logic_1;
        else 
            W4_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_39_d0 <= fcWeight_q0;

    -- W4_39_we0 assign process. --
    W4_39_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_27)))) then 
            W4_39_we0 <= ap_const_logic_1;
        else 
            W4_39_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_3_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_3_ce0 assign process. --
    W4_3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_3_ce0 <= ap_const_logic_1;
        else 
            W4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_3_d0 <= fcWeight_q0;

    -- W4_3_we0 assign process. --
    W4_3_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3)))) then 
            W4_3_we0 <= ap_const_logic_1;
        else 
            W4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_40_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_40_ce0 assign process. --
    W4_40_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_40_ce0 <= ap_const_logic_1;
        else 
            W4_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_40_d0 <= fcWeight_q0;

    -- W4_40_we0 assign process. --
    W4_40_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_28)))) then 
            W4_40_we0 <= ap_const_logic_1;
        else 
            W4_40_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_41_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_41_ce0 assign process. --
    W4_41_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_41_ce0 <= ap_const_logic_1;
        else 
            W4_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_41_d0 <= fcWeight_q0;

    -- W4_41_we0 assign process. --
    W4_41_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_29)))) then 
            W4_41_we0 <= ap_const_logic_1;
        else 
            W4_41_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_42_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_42_ce0 assign process. --
    W4_42_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_42_ce0 <= ap_const_logic_1;
        else 
            W4_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_42_d0 <= fcWeight_q0;

    -- W4_42_we0 assign process. --
    W4_42_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2A)))) then 
            W4_42_we0 <= ap_const_logic_1;
        else 
            W4_42_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_43_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_43_ce0 assign process. --
    W4_43_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_43_ce0 <= ap_const_logic_1;
        else 
            W4_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_43_d0 <= fcWeight_q0;

    -- W4_43_we0 assign process. --
    W4_43_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2B)))) then 
            W4_43_we0 <= ap_const_logic_1;
        else 
            W4_43_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_44_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_44_ce0 assign process. --
    W4_44_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_44_ce0 <= ap_const_logic_1;
        else 
            W4_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_44_d0 <= fcWeight_q0;

    -- W4_44_we0 assign process. --
    W4_44_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2C)))) then 
            W4_44_we0 <= ap_const_logic_1;
        else 
            W4_44_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_45_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_45_ce0 assign process. --
    W4_45_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_45_ce0 <= ap_const_logic_1;
        else 
            W4_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_45_d0 <= fcWeight_q0;

    -- W4_45_we0 assign process. --
    W4_45_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2D)))) then 
            W4_45_we0 <= ap_const_logic_1;
        else 
            W4_45_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_46_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_46_ce0 assign process. --
    W4_46_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_46_ce0 <= ap_const_logic_1;
        else 
            W4_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_46_d0 <= fcWeight_q0;

    -- W4_46_we0 assign process. --
    W4_46_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2E)))) then 
            W4_46_we0 <= ap_const_logic_1;
        else 
            W4_46_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_47_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_47_ce0 assign process. --
    W4_47_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_47_ce0 <= ap_const_logic_1;
        else 
            W4_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_47_d0 <= fcWeight_q0;

    -- W4_47_we0 assign process. --
    W4_47_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_2F)))) then 
            W4_47_we0 <= ap_const_logic_1;
        else 
            W4_47_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_48_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_48_ce0 assign process. --
    W4_48_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_48_ce0 <= ap_const_logic_1;
        else 
            W4_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_48_d0 <= fcWeight_q0;

    -- W4_48_we0 assign process. --
    W4_48_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_30)))) then 
            W4_48_we0 <= ap_const_logic_1;
        else 
            W4_48_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_49_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_49_ce0 assign process. --
    W4_49_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_49_ce0 <= ap_const_logic_1;
        else 
            W4_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_49_d0 <= fcWeight_q0;

    -- W4_49_we0 assign process. --
    W4_49_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_31)))) then 
            W4_49_we0 <= ap_const_logic_1;
        else 
            W4_49_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_4_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_4_ce0 assign process. --
    W4_4_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_4_ce0 <= ap_const_logic_1;
        else 
            W4_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_4_d0 <= fcWeight_q0;

    -- W4_4_we0 assign process. --
    W4_4_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4)))) then 
            W4_4_we0 <= ap_const_logic_1;
        else 
            W4_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_50_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_50_ce0 assign process. --
    W4_50_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_50_ce0 <= ap_const_logic_1;
        else 
            W4_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_50_d0 <= fcWeight_q0;

    -- W4_50_we0 assign process. --
    W4_50_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_32)))) then 
            W4_50_we0 <= ap_const_logic_1;
        else 
            W4_50_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_51_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_51_ce0 assign process. --
    W4_51_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_51_ce0 <= ap_const_logic_1;
        else 
            W4_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_51_d0 <= fcWeight_q0;

    -- W4_51_we0 assign process. --
    W4_51_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_33)))) then 
            W4_51_we0 <= ap_const_logic_1;
        else 
            W4_51_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_52_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_52_ce0 assign process. --
    W4_52_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_52_ce0 <= ap_const_logic_1;
        else 
            W4_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_52_d0 <= fcWeight_q0;

    -- W4_52_we0 assign process. --
    W4_52_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_34)))) then 
            W4_52_we0 <= ap_const_logic_1;
        else 
            W4_52_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_53_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_53_ce0 assign process. --
    W4_53_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_53_ce0 <= ap_const_logic_1;
        else 
            W4_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_53_d0 <= fcWeight_q0;

    -- W4_53_we0 assign process. --
    W4_53_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_35)))) then 
            W4_53_we0 <= ap_const_logic_1;
        else 
            W4_53_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_54_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_54_ce0 assign process. --
    W4_54_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_54_ce0 <= ap_const_logic_1;
        else 
            W4_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_54_d0 <= fcWeight_q0;

    -- W4_54_we0 assign process. --
    W4_54_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_36)))) then 
            W4_54_we0 <= ap_const_logic_1;
        else 
            W4_54_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_55_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_55_ce0 assign process. --
    W4_55_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_55_ce0 <= ap_const_logic_1;
        else 
            W4_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_55_d0 <= fcWeight_q0;

    -- W4_55_we0 assign process. --
    W4_55_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_37)))) then 
            W4_55_we0 <= ap_const_logic_1;
        else 
            W4_55_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_56_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_56_ce0 assign process. --
    W4_56_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_56_ce0 <= ap_const_logic_1;
        else 
            W4_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_56_d0 <= fcWeight_q0;

    -- W4_56_we0 assign process. --
    W4_56_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_38)))) then 
            W4_56_we0 <= ap_const_logic_1;
        else 
            W4_56_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_57_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_57_ce0 assign process. --
    W4_57_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_57_ce0 <= ap_const_logic_1;
        else 
            W4_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_57_d0 <= fcWeight_q0;

    -- W4_57_we0 assign process. --
    W4_57_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_39)))) then 
            W4_57_we0 <= ap_const_logic_1;
        else 
            W4_57_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_58_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_58_ce0 assign process. --
    W4_58_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_58_ce0 <= ap_const_logic_1;
        else 
            W4_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_58_d0 <= fcWeight_q0;

    -- W4_58_we0 assign process. --
    W4_58_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3A)))) then 
            W4_58_we0 <= ap_const_logic_1;
        else 
            W4_58_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_59_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_59_ce0 assign process. --
    W4_59_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_59_ce0 <= ap_const_logic_1;
        else 
            W4_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_59_d0 <= fcWeight_q0;

    -- W4_59_we0 assign process. --
    W4_59_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3B)))) then 
            W4_59_we0 <= ap_const_logic_1;
        else 
            W4_59_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_5_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_5_ce0 assign process. --
    W4_5_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_5_ce0 <= ap_const_logic_1;
        else 
            W4_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_5_d0 <= fcWeight_q0;

    -- W4_5_we0 assign process. --
    W4_5_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5)))) then 
            W4_5_we0 <= ap_const_logic_1;
        else 
            W4_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_60_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_60_ce0 assign process. --
    W4_60_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_60_ce0 <= ap_const_logic_1;
        else 
            W4_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_60_d0 <= fcWeight_q0;

    -- W4_60_we0 assign process. --
    W4_60_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3C)))) then 
            W4_60_we0 <= ap_const_logic_1;
        else 
            W4_60_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_61_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_61_ce0 assign process. --
    W4_61_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_61_ce0 <= ap_const_logic_1;
        else 
            W4_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_61_d0 <= fcWeight_q0;

    -- W4_61_we0 assign process. --
    W4_61_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3D)))) then 
            W4_61_we0 <= ap_const_logic_1;
        else 
            W4_61_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_62_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_62_ce0 assign process. --
    W4_62_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_62_ce0 <= ap_const_logic_1;
        else 
            W4_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_62_d0 <= fcWeight_q0;

    -- W4_62_we0 assign process. --
    W4_62_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3E)))) then 
            W4_62_we0 <= ap_const_logic_1;
        else 
            W4_62_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_63_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_63_ce0 assign process. --
    W4_63_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_63_ce0 <= ap_const_logic_1;
        else 
            W4_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_63_d0 <= fcWeight_q0;

    -- W4_63_we0 assign process. --
    W4_63_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_3F)))) then 
            W4_63_we0 <= ap_const_logic_1;
        else 
            W4_63_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_64_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_64_ce0 assign process. --
    W4_64_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_64_ce0 <= ap_const_logic_1;
        else 
            W4_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_64_d0 <= fcWeight_q0;

    -- W4_64_we0 assign process. --
    W4_64_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_40)))) then 
            W4_64_we0 <= ap_const_logic_1;
        else 
            W4_64_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_65_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_65_ce0 assign process. --
    W4_65_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_65_ce0 <= ap_const_logic_1;
        else 
            W4_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_65_d0 <= fcWeight_q0;

    -- W4_65_we0 assign process. --
    W4_65_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_41)))) then 
            W4_65_we0 <= ap_const_logic_1;
        else 
            W4_65_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_66_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_66_ce0 assign process. --
    W4_66_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_66_ce0 <= ap_const_logic_1;
        else 
            W4_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_66_d0 <= fcWeight_q0;

    -- W4_66_we0 assign process. --
    W4_66_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_42)))) then 
            W4_66_we0 <= ap_const_logic_1;
        else 
            W4_66_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_67_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_67_ce0 assign process. --
    W4_67_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_67_ce0 <= ap_const_logic_1;
        else 
            W4_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_67_d0 <= fcWeight_q0;

    -- W4_67_we0 assign process. --
    W4_67_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_43)))) then 
            W4_67_we0 <= ap_const_logic_1;
        else 
            W4_67_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_68_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_68_ce0 assign process. --
    W4_68_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_68_ce0 <= ap_const_logic_1;
        else 
            W4_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_68_d0 <= fcWeight_q0;

    -- W4_68_we0 assign process. --
    W4_68_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_44)))) then 
            W4_68_we0 <= ap_const_logic_1;
        else 
            W4_68_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_69_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_69_ce0 assign process. --
    W4_69_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_69_ce0 <= ap_const_logic_1;
        else 
            W4_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_69_d0 <= fcWeight_q0;

    -- W4_69_we0 assign process. --
    W4_69_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_45)))) then 
            W4_69_we0 <= ap_const_logic_1;
        else 
            W4_69_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_6_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_6_ce0 assign process. --
    W4_6_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_6_ce0 <= ap_const_logic_1;
        else 
            W4_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_6_d0 <= fcWeight_q0;

    -- W4_6_we0 assign process. --
    W4_6_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_6)))) then 
            W4_6_we0 <= ap_const_logic_1;
        else 
            W4_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_70_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_70_ce0 assign process. --
    W4_70_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_70_ce0 <= ap_const_logic_1;
        else 
            W4_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_70_d0 <= fcWeight_q0;

    -- W4_70_we0 assign process. --
    W4_70_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_46)))) then 
            W4_70_we0 <= ap_const_logic_1;
        else 
            W4_70_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_71_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_71_ce0 assign process. --
    W4_71_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_71_ce0 <= ap_const_logic_1;
        else 
            W4_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_71_d0 <= fcWeight_q0;

    -- W4_71_we0 assign process. --
    W4_71_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_47)))) then 
            W4_71_we0 <= ap_const_logic_1;
        else 
            W4_71_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_72_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_72_ce0 assign process. --
    W4_72_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_72_ce0 <= ap_const_logic_1;
        else 
            W4_72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_72_d0 <= fcWeight_q0;

    -- W4_72_we0 assign process. --
    W4_72_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_48)))) then 
            W4_72_we0 <= ap_const_logic_1;
        else 
            W4_72_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_73_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_73_ce0 assign process. --
    W4_73_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_73_ce0 <= ap_const_logic_1;
        else 
            W4_73_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_73_d0 <= fcWeight_q0;

    -- W4_73_we0 assign process. --
    W4_73_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_49)))) then 
            W4_73_we0 <= ap_const_logic_1;
        else 
            W4_73_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_74_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_74_ce0 assign process. --
    W4_74_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_74_ce0 <= ap_const_logic_1;
        else 
            W4_74_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_74_d0 <= fcWeight_q0;

    -- W4_74_we0 assign process. --
    W4_74_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4A)))) then 
            W4_74_we0 <= ap_const_logic_1;
        else 
            W4_74_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_75_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_75_ce0 assign process. --
    W4_75_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_75_ce0 <= ap_const_logic_1;
        else 
            W4_75_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_75_d0 <= fcWeight_q0;

    -- W4_75_we0 assign process. --
    W4_75_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4B)))) then 
            W4_75_we0 <= ap_const_logic_1;
        else 
            W4_75_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_76_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_76_ce0 assign process. --
    W4_76_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_76_ce0 <= ap_const_logic_1;
        else 
            W4_76_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_76_d0 <= fcWeight_q0;

    -- W4_76_we0 assign process. --
    W4_76_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4C)))) then 
            W4_76_we0 <= ap_const_logic_1;
        else 
            W4_76_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_77_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_77_ce0 assign process. --
    W4_77_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_77_ce0 <= ap_const_logic_1;
        else 
            W4_77_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_77_d0 <= fcWeight_q0;

    -- W4_77_we0 assign process. --
    W4_77_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4D)))) then 
            W4_77_we0 <= ap_const_logic_1;
        else 
            W4_77_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_78_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_78_ce0 assign process. --
    W4_78_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_78_ce0 <= ap_const_logic_1;
        else 
            W4_78_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_78_d0 <= fcWeight_q0;

    -- W4_78_we0 assign process. --
    W4_78_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4E)))) then 
            W4_78_we0 <= ap_const_logic_1;
        else 
            W4_78_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_79_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_79_ce0 assign process. --
    W4_79_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_79_ce0 <= ap_const_logic_1;
        else 
            W4_79_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_79_d0 <= fcWeight_q0;

    -- W4_79_we0 assign process. --
    W4_79_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_4F)))) then 
            W4_79_we0 <= ap_const_logic_1;
        else 
            W4_79_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_7_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_7_ce0 assign process. --
    W4_7_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_7_ce0 <= ap_const_logic_1;
        else 
            W4_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_7_d0 <= fcWeight_q0;

    -- W4_7_we0 assign process. --
    W4_7_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_7)))) then 
            W4_7_we0 <= ap_const_logic_1;
        else 
            W4_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_80_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_80_ce0 assign process. --
    W4_80_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_80_ce0 <= ap_const_logic_1;
        else 
            W4_80_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_80_d0 <= fcWeight_q0;

    -- W4_80_we0 assign process. --
    W4_80_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_50)))) then 
            W4_80_we0 <= ap_const_logic_1;
        else 
            W4_80_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_81_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_81_ce0 assign process. --
    W4_81_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_81_ce0 <= ap_const_logic_1;
        else 
            W4_81_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_81_d0 <= fcWeight_q0;

    -- W4_81_we0 assign process. --
    W4_81_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_51)))) then 
            W4_81_we0 <= ap_const_logic_1;
        else 
            W4_81_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_82_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_82_ce0 assign process. --
    W4_82_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_82_ce0 <= ap_const_logic_1;
        else 
            W4_82_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_82_d0 <= fcWeight_q0;

    -- W4_82_we0 assign process. --
    W4_82_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_52)))) then 
            W4_82_we0 <= ap_const_logic_1;
        else 
            W4_82_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_83_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_83_ce0 assign process. --
    W4_83_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_83_ce0 <= ap_const_logic_1;
        else 
            W4_83_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_83_d0 <= fcWeight_q0;

    -- W4_83_we0 assign process. --
    W4_83_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_53)))) then 
            W4_83_we0 <= ap_const_logic_1;
        else 
            W4_83_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_84_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_84_ce0 assign process. --
    W4_84_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_84_ce0 <= ap_const_logic_1;
        else 
            W4_84_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_84_d0 <= fcWeight_q0;

    -- W4_84_we0 assign process. --
    W4_84_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_54)))) then 
            W4_84_we0 <= ap_const_logic_1;
        else 
            W4_84_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_85_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_85_ce0 assign process. --
    W4_85_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_85_ce0 <= ap_const_logic_1;
        else 
            W4_85_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_85_d0 <= fcWeight_q0;

    -- W4_85_we0 assign process. --
    W4_85_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_55)))) then 
            W4_85_we0 <= ap_const_logic_1;
        else 
            W4_85_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_86_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_86_ce0 assign process. --
    W4_86_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_86_ce0 <= ap_const_logic_1;
        else 
            W4_86_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_86_d0 <= fcWeight_q0;

    -- W4_86_we0 assign process. --
    W4_86_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_56)))) then 
            W4_86_we0 <= ap_const_logic_1;
        else 
            W4_86_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_87_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_87_ce0 assign process. --
    W4_87_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_87_ce0 <= ap_const_logic_1;
        else 
            W4_87_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_87_d0 <= fcWeight_q0;

    -- W4_87_we0 assign process. --
    W4_87_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_57)))) then 
            W4_87_we0 <= ap_const_logic_1;
        else 
            W4_87_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_88_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_88_ce0 assign process. --
    W4_88_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_88_ce0 <= ap_const_logic_1;
        else 
            W4_88_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_88_d0 <= fcWeight_q0;

    -- W4_88_we0 assign process. --
    W4_88_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_58)))) then 
            W4_88_we0 <= ap_const_logic_1;
        else 
            W4_88_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_89_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_89_ce0 assign process. --
    W4_89_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_89_ce0 <= ap_const_logic_1;
        else 
            W4_89_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_89_d0 <= fcWeight_q0;

    -- W4_89_we0 assign process. --
    W4_89_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_59)))) then 
            W4_89_we0 <= ap_const_logic_1;
        else 
            W4_89_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_8_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_8_ce0 assign process. --
    W4_8_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_8_ce0 <= ap_const_logic_1;
        else 
            W4_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_8_d0 <= fcWeight_q0;

    -- W4_8_we0 assign process. --
    W4_8_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_8)))) then 
            W4_8_we0 <= ap_const_logic_1;
        else 
            W4_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_90_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_90_ce0 assign process. --
    W4_90_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_90_ce0 <= ap_const_logic_1;
        else 
            W4_90_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_90_d0 <= fcWeight_q0;

    -- W4_90_we0 assign process. --
    W4_90_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5A)))) then 
            W4_90_we0 <= ap_const_logic_1;
        else 
            W4_90_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_91_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_91_ce0 assign process. --
    W4_91_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_91_ce0 <= ap_const_logic_1;
        else 
            W4_91_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_91_d0 <= fcWeight_q0;

    -- W4_91_we0 assign process. --
    W4_91_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5B)))) then 
            W4_91_we0 <= ap_const_logic_1;
        else 
            W4_91_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_92_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_92_ce0 assign process. --
    W4_92_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_92_ce0 <= ap_const_logic_1;
        else 
            W4_92_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_92_d0 <= fcWeight_q0;

    -- W4_92_we0 assign process. --
    W4_92_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5C)))) then 
            W4_92_we0 <= ap_const_logic_1;
        else 
            W4_92_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_93_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_93_ce0 assign process. --
    W4_93_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_93_ce0 <= ap_const_logic_1;
        else 
            W4_93_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_93_d0 <= fcWeight_q0;

    -- W4_93_we0 assign process. --
    W4_93_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5D)))) then 
            W4_93_we0 <= ap_const_logic_1;
        else 
            W4_93_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_94_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_94_ce0 assign process. --
    W4_94_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_94_ce0 <= ap_const_logic_1;
        else 
            W4_94_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_94_d0 <= fcWeight_q0;

    -- W4_94_we0 assign process. --
    W4_94_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5E)))) then 
            W4_94_we0 <= ap_const_logic_1;
        else 
            W4_94_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_95_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_95_ce0 assign process. --
    W4_95_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_95_ce0 <= ap_const_logic_1;
        else 
            W4_95_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_95_d0 <= fcWeight_q0;

    -- W4_95_we0 assign process. --
    W4_95_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_5F)))) then 
            W4_95_we0 <= ap_const_logic_1;
        else 
            W4_95_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_96_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_96_ce0 assign process. --
    W4_96_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_96_ce0 <= ap_const_logic_1;
        else 
            W4_96_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_96_d0 <= fcWeight_q0;

    -- W4_96_we0 assign process. --
    W4_96_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_60)))) then 
            W4_96_we0 <= ap_const_logic_1;
        else 
            W4_96_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_97_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_97_ce0 assign process. --
    W4_97_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_97_ce0 <= ap_const_logic_1;
        else 
            W4_97_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_97_d0 <= fcWeight_q0;

    -- W4_97_we0 assign process. --
    W4_97_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_61)))) then 
            W4_97_we0 <= ap_const_logic_1;
        else 
            W4_97_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_98_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_98_ce0 assign process. --
    W4_98_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_98_ce0 <= ap_const_logic_1;
        else 
            W4_98_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_98_d0 <= fcWeight_q0;

    -- W4_98_we0 assign process. --
    W4_98_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_62)))) then 
            W4_98_we0 <= ap_const_logic_1;
        else 
            W4_98_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_99_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_99_ce0 assign process. --
    W4_99_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_99_ce0 <= ap_const_logic_1;
        else 
            W4_99_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_99_d0 <= fcWeight_q0;

    -- W4_99_we0 assign process. --
    W4_99_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_63)))) then 
            W4_99_we0 <= ap_const_logic_1;
        else 
            W4_99_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_9_address0 <= tmp_15_fu_2192_p1(7 - 1 downto 0);

    -- W4_9_ce0 assign process. --
    W4_9_ce0_assign_proc : process(ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            W4_9_ce0 <= ap_const_logic_1;
        else 
            W4_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W4_9_d0 <= fcWeight_q0;

    -- W4_9_we0 assign process. --
    W4_9_we0_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_reg_ppstg_i8_mid2_reg_2330_pp0_it1 = ap_const_lv7_9)))) then 
            W4_9_we0 <= ap_const_logic_1;
        else 
            W4_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st5_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st5_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1823 assign process. --
    ap_sig_bdd_1823_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1823 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_887 assign process. --
    ap_sig_bdd_887_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_887 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_921 assign process. --
    ap_sig_bdd_921_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_921 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_887)
    begin
        if (ap_sig_bdd_887) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_2 assign process. --
    ap_sig_cseq_ST_st5_fsm_2_assign_proc : process(ap_sig_bdd_1823)
    begin
        if (ap_sig_bdd_1823) then 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_2123_p2 <= "1" when (indvar_flatten_reg_2090 = ap_const_lv14_2760) else "0";
    exitcond_fu_2141_p2 <= "1" when (j8_reg_2112 = ap_const_lv7_54) else "0";
    fcWeight_address0 <= tmp_752_cast_fu_2187_p1(14 - 1 downto 0);

    -- fcWeight_ce0 assign process. --
    fcWeight_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            fcWeight_ce0 <= ap_const_logic_1;
        else 
            fcWeight_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i8_mid2_fu_2155_p3 <= 
        i_fu_2135_p2 when (exitcond_fu_2141_p2(0) = '1') else 
        i8_phi_fu_2105_p4;

    -- i8_phi_fu_2105_p4 assign process. --
    i8_phi_fu_2105_p4_assign_proc : process(i8_reg_2101, exitcond_flatten_reg_2315, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i8_mid2_reg_2330)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_2315 = ap_const_lv1_0))) then 
            i8_phi_fu_2105_p4 <= i8_mid2_reg_2330;
        else 
            i8_phi_fu_2105_p4 <= i8_reg_2101;
        end if; 
    end process;

    i_fu_2135_p2 <= std_logic_vector(unsigned(i8_phi_fu_2105_p4) + unsigned(ap_const_lv7_1));
    indvar_flatten_next_fu_2129_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_2090) + unsigned(ap_const_lv14_1));
    j8_mid2_fu_2147_p3 <= 
        ap_const_lv7_0 when (exitcond_fu_2141_p2(0) = '1') else 
        j8_reg_2112;
    j_fu_2163_p2 <= std_logic_vector(unsigned(j8_mid2_fu_2147_p3) + unsigned(ap_const_lv7_1));
    tmp_15_cast_fu_2178_p1 <= std_logic_vector(resize(unsigned(j8_mid2_reg_2324),14));
    tmp_15_fu_2192_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_j8_mid2_reg_2324_pp0_it1),64));
    tmp_752_cast_fu_2187_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_2181_p2),64));
    tmp_fu_2172_p0 <= tmp_fu_2172_p00(7 - 1 downto 0);
    tmp_fu_2172_p00 <= std_logic_vector(resize(unsigned(i8_mid2_reg_2330),14));
    tmp_fu_2172_p2 <= std_logic_vector(resize(unsigned(tmp_fu_2172_p0) * unsigned(ap_const_lv14_54), 14));
    tmp_s_fu_2181_p2 <= std_logic_vector(unsigned(tmp_fu_2172_p2) + unsigned(tmp_15_cast_fu_2178_p1));
end behav;
