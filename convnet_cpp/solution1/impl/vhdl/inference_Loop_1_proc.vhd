-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inference_Loop_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inputImage_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inputImage_TVALID : IN STD_LOGIC;
    inputImage_TREADY : OUT STD_LOGIC;
    x_in_0_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_0_0_0_ce0 : OUT STD_LOGIC;
    x_in_0_0_0_we0 : OUT STD_LOGIC;
    x_in_0_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_0_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_0_1_0_ce0 : OUT STD_LOGIC;
    x_in_0_1_0_we0 : OUT STD_LOGIC;
    x_in_0_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_0_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_0_2_0_ce0 : OUT STD_LOGIC;
    x_in_0_2_0_we0 : OUT STD_LOGIC;
    x_in_0_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_0_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_0_3_0_ce0 : OUT STD_LOGIC;
    x_in_0_3_0_we0 : OUT STD_LOGIC;
    x_in_0_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_0_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_0_4_0_ce0 : OUT STD_LOGIC;
    x_in_0_4_0_we0 : OUT STD_LOGIC;
    x_in_0_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_1_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_1_0_0_ce0 : OUT STD_LOGIC;
    x_in_1_0_0_we0 : OUT STD_LOGIC;
    x_in_1_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_1_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_1_1_0_ce0 : OUT STD_LOGIC;
    x_in_1_1_0_we0 : OUT STD_LOGIC;
    x_in_1_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_1_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_1_2_0_ce0 : OUT STD_LOGIC;
    x_in_1_2_0_we0 : OUT STD_LOGIC;
    x_in_1_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_1_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_1_3_0_ce0 : OUT STD_LOGIC;
    x_in_1_3_0_we0 : OUT STD_LOGIC;
    x_in_1_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_1_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_1_4_0_ce0 : OUT STD_LOGIC;
    x_in_1_4_0_we0 : OUT STD_LOGIC;
    x_in_1_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_2_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_2_0_0_ce0 : OUT STD_LOGIC;
    x_in_2_0_0_we0 : OUT STD_LOGIC;
    x_in_2_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_2_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_2_1_0_ce0 : OUT STD_LOGIC;
    x_in_2_1_0_we0 : OUT STD_LOGIC;
    x_in_2_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_2_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_in_2_2_0_ce0 : OUT STD_LOGIC;
    x_in_2_2_0_we0 : OUT STD_LOGIC;
    x_in_2_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_2_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_2_3_0_ce0 : OUT STD_LOGIC;
    x_in_2_3_0_we0 : OUT STD_LOGIC;
    x_in_2_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_2_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_2_4_0_ce0 : OUT STD_LOGIC;
    x_in_2_4_0_we0 : OUT STD_LOGIC;
    x_in_2_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_3_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_3_0_0_ce0 : OUT STD_LOGIC;
    x_in_3_0_0_we0 : OUT STD_LOGIC;
    x_in_3_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_3_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_3_1_0_ce0 : OUT STD_LOGIC;
    x_in_3_1_0_we0 : OUT STD_LOGIC;
    x_in_3_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_3_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_3_2_0_ce0 : OUT STD_LOGIC;
    x_in_3_2_0_we0 : OUT STD_LOGIC;
    x_in_3_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_3_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_3_3_0_ce0 : OUT STD_LOGIC;
    x_in_3_3_0_we0 : OUT STD_LOGIC;
    x_in_3_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_3_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_3_4_0_ce0 : OUT STD_LOGIC;
    x_in_3_4_0_we0 : OUT STD_LOGIC;
    x_in_3_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_4_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_4_0_0_ce0 : OUT STD_LOGIC;
    x_in_4_0_0_we0 : OUT STD_LOGIC;
    x_in_4_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_4_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_4_1_0_ce0 : OUT STD_LOGIC;
    x_in_4_1_0_we0 : OUT STD_LOGIC;
    x_in_4_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_4_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_4_2_0_ce0 : OUT STD_LOGIC;
    x_in_4_2_0_we0 : OUT STD_LOGIC;
    x_in_4_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_4_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_4_3_0_ce0 : OUT STD_LOGIC;
    x_in_4_3_0_we0 : OUT STD_LOGIC;
    x_in_4_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_in_4_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    x_in_4_4_0_ce0 : OUT STD_LOGIC;
    x_in_4_4_0_we0 : OUT STD_LOGIC;
    x_in_4_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of inference_Loop_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st11_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv12_34 : STD_LOGIC_VECTOR (11 downto 0) := "000000110100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal indvar_flatten_reg_430 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_i_i_reg_441 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_i_i_reg_452 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_flatten_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_220 : BOOLEAN;
    signal ap_sig_bdd_226 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal indvar_flatten_next_fu_469_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_0_i_i_mid2_fu_487_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_mid2_fu_495_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_mid2_reg_687 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1112_reg_693 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1112_reg_693_pp0_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal inputImage_read_reg_701 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_inputImage_read_reg_701_pp0_it7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1117_reg_730 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it5 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_1117_reg_730_pp0_it7 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_555_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_bdd_317 : BOOLEAN;
    signal i_0_i_i_phi_fu_445_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1139_cast_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1140_cast_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1111_fu_561_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1116_fu_613_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond4_i_i_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_475_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_503_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul4_fu_513_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul4_fu_513_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_529_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_fu_539_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_fu_539_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_503_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex_fu_565_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1114_fu_579_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_586_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1113_fu_572_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_590_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal newIndex2_cast_fu_568_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1115_fu_600_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_529_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex8_fu_617_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1109_fu_594_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal newIndex9_cast_fu_624_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1118_fu_628_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1110_fu_607_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal newIndex9_cast2_fu_620_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1119_fu_653_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_503_ce : STD_LOGIC;
    signal grp_fu_529_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st11_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_622 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal mul4_fu_513_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_fu_539_p10 : STD_LOGIC_VECTOR (11 downto 0);

    component inference_urem_5ns_4ns_5_9 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    inference_urem_5ns_4ns_5_9_U0 : component inference_urem_5ns_4ns_5_9
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => i_0_i_i_mid2_fu_495_p3,
        din1 => grp_fu_503_p1,
        ce => grp_fu_503_ce,
        dout => grp_fu_503_p2);

    inference_urem_5ns_4ns_5_9_U1 : component inference_urem_5ns_4ns_5_9
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 5,
        din1_WIDTH => 4,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => j_0_i_i_mid2_fu_487_p3,
        din1 => grp_fu_529_p1,
        ce => grp_fu_529_ce,
        dout => grp_fu_529_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((exitcond_flatten_fu_463_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((exitcond_flatten_fu_463_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_0_i_i_reg_441 assign process. --
    i_0_i_i_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (exitcond_flatten_reg_673 = ap_const_lv1_0))) then 
                i_0_i_i_reg_441 <= i_0_i_i_mid2_reg_687;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317))) then 
                i_0_i_i_reg_441 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- indvar_flatten_reg_430 assign process. --
    indvar_flatten_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
                indvar_flatten_reg_430 <= indvar_flatten_next_fu_469_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317))) then 
                indvar_flatten_reg_430 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- j_0_i_i_reg_452 assign process. --
    j_0_i_i_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
                j_0_i_i_reg_452 <= j_fu_555_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_317))) then 
                j_0_i_i_reg_452 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it1 <= inputImage_read_reg_701;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it1 <= tmp_1112_reg_693;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it1 <= tmp_1117_reg_730;
                exitcond_flatten_reg_673 <= exitcond_flatten_fu_463_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it2 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it1;
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it3 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it2;
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it4 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it3;
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it5 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it4;
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it6 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it5;
                ap_reg_ppstg_inputImage_read_reg_701_pp0_it7 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it6;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it2 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it1;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it3 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it2;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it4 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it3;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it5 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it4;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it6 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it5;
                ap_reg_ppstg_tmp_1112_reg_693_pp0_it7 <= ap_reg_ppstg_tmp_1112_reg_693_pp0_it6;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it2 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it1;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it3 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it2;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it4 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it3;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it5 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it4;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it6 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it5;
                ap_reg_ppstg_tmp_1117_reg_730_pp0_it7 <= ap_reg_ppstg_tmp_1117_reg_730_pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then
                i_0_i_i_mid2_reg_687 <= i_0_i_i_mid2_fu_495_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then
                inputImage_read_reg_701 <= inputImage_TDATA;
                tmp_1112_reg_693 <= mul4_fu_513_p2(11 downto 8);
                tmp_1117_reg_730 <= mul_fu_539_p2(11 downto 8);
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond_flatten_fu_463_p2, ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_sig_bdd_317)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_317)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((exitcond_flatten_fu_463_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((exitcond_flatten_fu_463_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st11_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st11_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st11_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_220 assign process. --
    ap_sig_bdd_220_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_220 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_226 assign process. --
    ap_sig_bdd_226_assign_proc : process(inputImage_TVALID, exitcond_flatten_fu_463_p2)
    begin
                ap_sig_bdd_226 <= ((inputImage_TVALID = ap_const_logic_0) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_317 assign process. --
    ap_sig_bdd_317_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_317 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_622 assign process. --
    ap_sig_bdd_622_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_622 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_220)
    begin
        if (ap_sig_bdd_220) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_2 assign process. --
    ap_sig_cseq_ST_st11_fsm_2_assign_proc : process(ap_sig_bdd_622)
    begin
        if (ap_sig_bdd_622) then 
            ap_sig_cseq_ST_st11_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_i_fu_481_p2 <= "1" when (j_0_i_i_reg_452 = ap_const_lv5_1C) else "0";
    exitcond_flatten_fu_463_p2 <= "1" when (indvar_flatten_reg_430 = ap_const_lv10_310) else "0";

    -- grp_fu_503_ce assign process. --
    grp_fu_503_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_226, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            grp_fu_503_ce <= ap_const_logic_1;
        else 
            grp_fu_503_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_503_p1 <= ap_const_lv5_5(4 - 1 downto 0);

    -- grp_fu_529_ce assign process. --
    grp_fu_529_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_226, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            grp_fu_529_ce <= ap_const_logic_1;
        else 
            grp_fu_529_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_529_p1 <= ap_const_lv5_5(4 - 1 downto 0);
    i_0_i_i_mid2_fu_495_p3 <= 
        i_fu_475_p2 when (exitcond4_i_i_fu_481_p2(0) = '1') else 
        i_0_i_i_phi_fu_445_p4;

    -- i_0_i_i_phi_fu_445_p4 assign process. --
    i_0_i_i_phi_fu_445_p4_assign_proc : process(i_0_i_i_reg_441, exitcond_flatten_reg_673, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_0_i_i_mid2_reg_687)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_673 = ap_const_lv1_0))) then 
            i_0_i_i_phi_fu_445_p4 <= i_0_i_i_mid2_reg_687;
        else 
            i_0_i_i_phi_fu_445_p4 <= i_0_i_i_reg_441;
        end if; 
    end process;

    i_fu_475_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(i_0_i_i_phi_fu_445_p4));
    indvar_flatten_next_fu_469_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_430) + unsigned(ap_const_lv10_1));

    -- inputImage_TREADY assign process. --
    inputImage_TREADY_assign_proc : process(exitcond_flatten_fu_463_p2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_226, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond_flatten_fu_463_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            inputImage_TREADY <= ap_const_logic_1;
        else 
            inputImage_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    j_0_i_i_mid2_fu_487_p3 <= 
        ap_const_lv5_0 when (exitcond4_i_i_fu_481_p2(0) = '1') else 
        j_0_i_i_reg_452;
    j_fu_555_p2 <= std_logic_vector(unsigned(j_0_i_i_mid2_fu_487_p3) + unsigned(ap_const_lv5_1));
    mul4_fu_513_p1 <= mul4_fu_513_p10(5 - 1 downto 0);
    mul4_fu_513_p10 <= std_logic_vector(resize(unsigned(i_0_i_i_mid2_fu_495_p3),12));
    mul4_fu_513_p2 <= std_logic_vector(resize(unsigned(ap_const_lv12_34) * unsigned(mul4_fu_513_p1), 12));
    mul_fu_539_p1 <= mul_fu_539_p10(5 - 1 downto 0);
    mul_fu_539_p10 <= std_logic_vector(resize(unsigned(j_0_i_i_mid2_fu_487_p3),12));
    mul_fu_539_p2 <= std_logic_vector(resize(unsigned(ap_const_lv12_34) * unsigned(mul_fu_539_p1), 12));
    newIndex2_cast_fu_568_p1 <= std_logic_vector(resize(unsigned(newIndex_fu_565_p1),6));
        newIndex8_fu_617_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_tmp_1117_reg_730_pp0_it7),5));

    newIndex9_cast2_fu_620_p1 <= std_logic_vector(resize(unsigned(newIndex8_fu_617_p1),6));
    newIndex9_cast_fu_624_p1 <= std_logic_vector(resize(unsigned(newIndex8_fu_617_p1),7));
        newIndex_fu_565_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_tmp_1112_reg_693_pp0_it7),5));

    p_shl2_cast_fu_590_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_586_p1),7));
    tmp_1109_fu_594_p2 <= std_logic_vector(unsigned(tmp_1113_fu_572_p3) - unsigned(p_shl2_cast_fu_590_p1));
    tmp_1110_fu_607_p2 <= std_logic_vector(unsigned(newIndex2_cast_fu_568_p1) + unsigned(tmp_1115_fu_600_p3));
    tmp_1111_fu_561_p1 <= grp_fu_503_p2(4 - 1 downto 0);
    tmp_1113_fu_572_p3 <= (ap_reg_ppstg_tmp_1112_reg_693_pp0_it7 & ap_const_lv3_0);
    tmp_1114_fu_579_p3 <= (ap_reg_ppstg_tmp_1112_reg_693_pp0_it7 & ap_const_lv1_0);
    tmp_1115_fu_600_p3 <= (ap_reg_ppstg_tmp_1112_reg_693_pp0_it7 & ap_const_lv2_0);
    tmp_1116_fu_613_p1 <= grp_fu_529_p2(4 - 1 downto 0);
    tmp_1118_fu_628_p2 <= std_logic_vector(unsigned(tmp_1109_fu_594_p2) + unsigned(newIndex9_cast_fu_624_p1));
    tmp_1119_fu_653_p2 <= std_logic_vector(unsigned(tmp_1110_fu_607_p2) + unsigned(newIndex9_cast2_fu_620_p1));
        tmp_1139_cast_fu_634_p1 <= std_logic_vector(resize(signed(tmp_1118_fu_628_p2),64));

    tmp_1140_cast_fu_659_p1 <= std_logic_vector(resize(unsigned(tmp_1119_fu_653_p2),64));
        tmp_s_fu_586_p1 <= std_logic_vector(resize(signed(tmp_1114_fu_579_p3),6));

    x_in_0_0_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_0_0_0_ce0 assign process. --
    x_in_0_0_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_0_0_0_ce0 <= ap_const_logic_1;
        else 
            x_in_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_0_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_0_0_0_we0 assign process. --
    x_in_0_0_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_0) and (tmp_1111_fu_561_p1 = ap_const_lv4_0)))) then 
            x_in_0_0_0_we0 <= ap_const_logic_1;
        else 
            x_in_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_1_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_0_1_0_ce0 assign process. --
    x_in_0_1_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_0_1_0_ce0 <= ap_const_logic_1;
        else 
            x_in_0_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_1_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_0_1_0_we0 assign process. --
    x_in_0_1_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_1) and (tmp_1111_fu_561_p1 = ap_const_lv4_0)))) then 
            x_in_0_1_0_we0 <= ap_const_logic_1;
        else 
            x_in_0_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_2_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_0_2_0_ce0 assign process. --
    x_in_0_2_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_0_2_0_ce0 <= ap_const_logic_1;
        else 
            x_in_0_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_2_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_0_2_0_we0 assign process. --
    x_in_0_2_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_2) and (tmp_1111_fu_561_p1 = ap_const_lv4_0)))) then 
            x_in_0_2_0_we0 <= ap_const_logic_1;
        else 
            x_in_0_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_3_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_0_3_0_ce0 assign process. --
    x_in_0_3_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_0_3_0_ce0 <= ap_const_logic_1;
        else 
            x_in_0_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_3_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_0_3_0_we0 assign process. --
    x_in_0_3_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv4_3 = tmp_1116_fu_613_p1) and (tmp_1111_fu_561_p1 = ap_const_lv4_0)))) then 
            x_in_0_3_0_we0 <= ap_const_logic_1;
        else 
            x_in_0_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_4_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_0_4_0_ce0 assign process. --
    x_in_0_4_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_0_4_0_ce0 <= ap_const_logic_1;
        else 
            x_in_0_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_0_4_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_0_4_0_we0 assign process. --
    x_in_0_4_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv4_3 = tmp_1116_fu_613_p1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_2)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_0)) and (tmp_1111_fu_561_p1 = ap_const_lv4_0)))) then 
            x_in_0_4_0_we0 <= ap_const_logic_1;
        else 
            x_in_0_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_0_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_1_0_0_ce0 assign process. --
    x_in_1_0_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_1_0_0_ce0 <= ap_const_logic_1;
        else 
            x_in_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_0_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_1_0_0_we0 assign process. --
    x_in_1_0_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_0) and (tmp_1111_fu_561_p1 = ap_const_lv4_1)))) then 
            x_in_1_0_0_we0 <= ap_const_logic_1;
        else 
            x_in_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_1_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_1_1_0_ce0 assign process. --
    x_in_1_1_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_1_1_0_ce0 <= ap_const_logic_1;
        else 
            x_in_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_1_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_1_1_0_we0 assign process. --
    x_in_1_1_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_1) and (tmp_1111_fu_561_p1 = ap_const_lv4_1)))) then 
            x_in_1_1_0_we0 <= ap_const_logic_1;
        else 
            x_in_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_2_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_1_2_0_ce0 assign process. --
    x_in_1_2_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_1_2_0_ce0 <= ap_const_logic_1;
        else 
            x_in_1_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_2_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_1_2_0_we0 assign process. --
    x_in_1_2_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_2) and (tmp_1111_fu_561_p1 = ap_const_lv4_1)))) then 
            x_in_1_2_0_we0 <= ap_const_logic_1;
        else 
            x_in_1_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_3_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_1_3_0_ce0 assign process. --
    x_in_1_3_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_1_3_0_ce0 <= ap_const_logic_1;
        else 
            x_in_1_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_3_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_1_3_0_we0 assign process. --
    x_in_1_3_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv4_3 = tmp_1116_fu_613_p1) and (tmp_1111_fu_561_p1 = ap_const_lv4_1)))) then 
            x_in_1_3_0_we0 <= ap_const_logic_1;
        else 
            x_in_1_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_4_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_1_4_0_ce0 assign process. --
    x_in_1_4_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_1_4_0_ce0 <= ap_const_logic_1;
        else 
            x_in_1_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_1_4_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_1_4_0_we0 assign process. --
    x_in_1_4_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv4_3 = tmp_1116_fu_613_p1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_2)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_0)) and (tmp_1111_fu_561_p1 = ap_const_lv4_1)))) then 
            x_in_1_4_0_we0 <= ap_const_logic_1;
        else 
            x_in_1_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_0_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_2_0_0_ce0 assign process. --
    x_in_2_0_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_2_0_0_ce0 <= ap_const_logic_1;
        else 
            x_in_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_0_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_2_0_0_we0 assign process. --
    x_in_2_0_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_0) and (tmp_1111_fu_561_p1 = ap_const_lv4_2)))) then 
            x_in_2_0_0_we0 <= ap_const_logic_1;
        else 
            x_in_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_1_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_2_1_0_ce0 assign process. --
    x_in_2_1_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_2_1_0_ce0 <= ap_const_logic_1;
        else 
            x_in_2_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_1_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_2_1_0_we0 assign process. --
    x_in_2_1_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_1) and (tmp_1111_fu_561_p1 = ap_const_lv4_2)))) then 
            x_in_2_1_0_we0 <= ap_const_logic_1;
        else 
            x_in_2_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_2_0_address0 <= tmp_1139_cast_fu_634_p1(6 - 1 downto 0);

    -- x_in_2_2_0_ce0 assign process. --
    x_in_2_2_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_2_2_0_ce0 <= ap_const_logic_1;
        else 
            x_in_2_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_2_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_2_2_0_we0 assign process. --
    x_in_2_2_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_2) and (tmp_1111_fu_561_p1 = ap_const_lv4_2)))) then 
            x_in_2_2_0_we0 <= ap_const_logic_1;
        else 
            x_in_2_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_3_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_2_3_0_ce0 assign process. --
    x_in_2_3_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_2_3_0_ce0 <= ap_const_logic_1;
        else 
            x_in_2_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_3_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_2_3_0_we0 assign process. --
    x_in_2_3_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv4_3 = tmp_1116_fu_613_p1) and (tmp_1111_fu_561_p1 = ap_const_lv4_2)))) then 
            x_in_2_3_0_we0 <= ap_const_logic_1;
        else 
            x_in_2_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_4_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_2_4_0_ce0 assign process. --
    x_in_2_4_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_2_4_0_ce0 <= ap_const_logic_1;
        else 
            x_in_2_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_2_4_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_2_4_0_we0 assign process. --
    x_in_2_4_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv4_3 = tmp_1116_fu_613_p1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_2)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_0)) and (tmp_1111_fu_561_p1 = ap_const_lv4_2)))) then 
            x_in_2_4_0_we0 <= ap_const_logic_1;
        else 
            x_in_2_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_0_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_3_0_0_ce0 assign process. --
    x_in_3_0_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_3_0_0_ce0 <= ap_const_logic_1;
        else 
            x_in_3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_0_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_3_0_0_we0 assign process. --
    x_in_3_0_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1111_fu_561_p1 = ap_const_lv4_3) and (tmp_1116_fu_613_p1 = ap_const_lv4_0)))) then 
            x_in_3_0_0_we0 <= ap_const_logic_1;
        else 
            x_in_3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_1_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_3_1_0_ce0 assign process. --
    x_in_3_1_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_3_1_0_ce0 <= ap_const_logic_1;
        else 
            x_in_3_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_1_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_3_1_0_we0 assign process. --
    x_in_3_1_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1111_fu_561_p1 = ap_const_lv4_3) and (tmp_1116_fu_613_p1 = ap_const_lv4_1)))) then 
            x_in_3_1_0_we0 <= ap_const_logic_1;
        else 
            x_in_3_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_2_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_3_2_0_ce0 assign process. --
    x_in_3_2_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_3_2_0_ce0 <= ap_const_logic_1;
        else 
            x_in_3_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_2_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_3_2_0_we0 assign process. --
    x_in_3_2_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1111_fu_561_p1 = ap_const_lv4_3) and (tmp_1116_fu_613_p1 = ap_const_lv4_2)))) then 
            x_in_3_2_0_we0 <= ap_const_logic_1;
        else 
            x_in_3_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_3_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_3_3_0_ce0 assign process. --
    x_in_3_3_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_3_3_0_ce0 <= ap_const_logic_1;
        else 
            x_in_3_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_3_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_3_3_0_we0 assign process. --
    x_in_3_3_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1111_fu_561_p1 = ap_const_lv4_3) and (ap_const_lv4_3 = tmp_1116_fu_613_p1)))) then 
            x_in_3_3_0_we0 <= ap_const_logic_1;
        else 
            x_in_3_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_4_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_3_4_0_ce0 assign process. --
    x_in_3_4_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_3_4_0_ce0 <= ap_const_logic_1;
        else 
            x_in_3_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_3_4_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_3_4_0_we0 assign process. --
    x_in_3_4_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1111_fu_561_p1 = ap_const_lv4_3) and not((ap_const_lv4_3 = tmp_1116_fu_613_p1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_2)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_0))))) then 
            x_in_3_4_0_we0 <= ap_const_logic_1;
        else 
            x_in_3_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_0_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_4_0_0_ce0 assign process. --
    x_in_4_0_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_4_0_0_ce0 <= ap_const_logic_1;
        else 
            x_in_4_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_0_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_4_0_0_we0 assign process. --
    x_in_4_0_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_0) and not((tmp_1111_fu_561_p1 = ap_const_lv4_3)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_2)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_1)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_0))))) then 
            x_in_4_0_0_we0 <= ap_const_logic_1;
        else 
            x_in_4_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_1_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_4_1_0_ce0 assign process. --
    x_in_4_1_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_4_1_0_ce0 <= ap_const_logic_1;
        else 
            x_in_4_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_1_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_4_1_0_we0 assign process. --
    x_in_4_1_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_1) and not((tmp_1111_fu_561_p1 = ap_const_lv4_3)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_2)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_1)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_0))))) then 
            x_in_4_1_0_we0 <= ap_const_logic_1;
        else 
            x_in_4_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_2_0_address0 <= tmp_1139_cast_fu_634_p1(5 - 1 downto 0);

    -- x_in_4_2_0_ce0 assign process. --
    x_in_4_2_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_4_2_0_ce0 <= ap_const_logic_1;
        else 
            x_in_4_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_2_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_4_2_0_we0 assign process. --
    x_in_4_2_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (tmp_1116_fu_613_p1 = ap_const_lv4_2) and not((tmp_1111_fu_561_p1 = ap_const_lv4_3)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_2)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_1)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_0))))) then 
            x_in_4_2_0_we0 <= ap_const_logic_1;
        else 
            x_in_4_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_3_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_4_3_0_ce0 assign process. --
    x_in_4_3_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_4_3_0_ce0 <= ap_const_logic_1;
        else 
            x_in_4_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_3_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_4_3_0_we0 assign process. --
    x_in_4_3_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_lv4_3 = tmp_1116_fu_613_p1) and not((tmp_1111_fu_561_p1 = ap_const_lv4_3)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_2)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_1)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_0))))) then 
            x_in_4_3_0_we0 <= ap_const_logic_1;
        else 
            x_in_4_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_4_0_address0 <= tmp_1140_cast_fu_659_p1(5 - 1 downto 0);

    -- x_in_4_4_0_ce0 assign process. --
    x_in_4_4_0_ce0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            x_in_4_4_0_ce0 <= ap_const_logic_1;
        else 
            x_in_4_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_in_4_4_0_d0 <= ap_reg_ppstg_inputImage_read_reg_701_pp0_it7;

    -- x_in_4_4_0_we0 assign process. --
    x_in_4_4_0_we0_assign_proc : process(ap_sig_bdd_226, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it8, tmp_1111_fu_561_p1, tmp_1116_fu_613_p1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not((ap_sig_bdd_226 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and not((ap_const_lv4_3 = tmp_1116_fu_613_p1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_2)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_1)) and not((tmp_1116_fu_613_p1 = ap_const_lv4_0)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_3)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_2)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_1)) and not((tmp_1111_fu_561_p1 = ap_const_lv4_0))))) then 
            x_in_4_4_0_we0 <= ap_const_logic_1;
        else 
            x_in_4_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
