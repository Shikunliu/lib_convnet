-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inference_sm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    X_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_0_0_ce0 : OUT STD_LOGIC;
    X_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_0_0_ce1 : OUT STD_LOGIC;
    X_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_1_0_ce0 : OUT STD_LOGIC;
    X_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_1_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_1_0_ce1 : OUT STD_LOGIC;
    X_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_2_0_ce0 : OUT STD_LOGIC;
    X_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_2_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_2_0_ce1 : OUT STD_LOGIC;
    X_2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_3_0_ce0 : OUT STD_LOGIC;
    X_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    X_3_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    X_3_0_ce1 : OUT STD_LOGIC;
    X_3_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_0_ce0 : OUT STD_LOGIC;
    W_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_1_ce0 : OUT STD_LOGIC;
    W_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_2_ce0 : OUT STD_LOGIC;
    W_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_3_ce0 : OUT STD_LOGIC;
    W_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_4_ce0 : OUT STD_LOGIC;
    W_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_5_ce0 : OUT STD_LOGIC;
    W_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_6_ce0 : OUT STD_LOGIC;
    W_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_7_ce0 : OUT STD_LOGIC;
    W_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_8_ce0 : OUT STD_LOGIC;
    W_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_9_ce0 : OUT STD_LOGIC;
    W_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_10_ce0 : OUT STD_LOGIC;
    W_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_11_ce0 : OUT STD_LOGIC;
    W_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_12_ce0 : OUT STD_LOGIC;
    W_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_13_ce0 : OUT STD_LOGIC;
    W_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_14_ce0 : OUT STD_LOGIC;
    W_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_15_ce0 : OUT STD_LOGIC;
    W_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_16_ce0 : OUT STD_LOGIC;
    W_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_17_ce0 : OUT STD_LOGIC;
    W_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_18_ce0 : OUT STD_LOGIC;
    W_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_19_ce0 : OUT STD_LOGIC;
    W_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_20_ce0 : OUT STD_LOGIC;
    W_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_21_ce0 : OUT STD_LOGIC;
    W_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_22_ce0 : OUT STD_LOGIC;
    W_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_23_ce0 : OUT STD_LOGIC;
    W_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_24_ce0 : OUT STD_LOGIC;
    W_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_25_ce0 : OUT STD_LOGIC;
    W_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_26_ce0 : OUT STD_LOGIC;
    W_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_27_ce0 : OUT STD_LOGIC;
    W_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_28_ce0 : OUT STD_LOGIC;
    W_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_29_ce0 : OUT STD_LOGIC;
    W_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_30_ce0 : OUT STD_LOGIC;
    W_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_31_ce0 : OUT STD_LOGIC;
    W_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_32_ce0 : OUT STD_LOGIC;
    W_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_33_ce0 : OUT STD_LOGIC;
    W_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_34_ce0 : OUT STD_LOGIC;
    W_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_35_ce0 : OUT STD_LOGIC;
    W_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_36_ce0 : OUT STD_LOGIC;
    W_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_37_ce0 : OUT STD_LOGIC;
    W_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_38_ce0 : OUT STD_LOGIC;
    W_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_39_ce0 : OUT STD_LOGIC;
    W_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_40_ce0 : OUT STD_LOGIC;
    W_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_41_ce0 : OUT STD_LOGIC;
    W_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_42_ce0 : OUT STD_LOGIC;
    W_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_43_ce0 : OUT STD_LOGIC;
    W_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_44_ce0 : OUT STD_LOGIC;
    W_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_45_ce0 : OUT STD_LOGIC;
    W_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_46_ce0 : OUT STD_LOGIC;
    W_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_47_ce0 : OUT STD_LOGIC;
    W_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_48_ce0 : OUT STD_LOGIC;
    W_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_49_ce0 : OUT STD_LOGIC;
    W_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_50_ce0 : OUT STD_LOGIC;
    W_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_51_ce0 : OUT STD_LOGIC;
    W_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_52_ce0 : OUT STD_LOGIC;
    W_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_53_ce0 : OUT STD_LOGIC;
    W_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_54_ce0 : OUT STD_LOGIC;
    W_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_55_ce0 : OUT STD_LOGIC;
    W_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_56_ce0 : OUT STD_LOGIC;
    W_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_57_ce0 : OUT STD_LOGIC;
    W_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_58_ce0 : OUT STD_LOGIC;
    W_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_59_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_59_ce0 : OUT STD_LOGIC;
    W_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_60_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_60_ce0 : OUT STD_LOGIC;
    W_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_61_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_61_ce0 : OUT STD_LOGIC;
    W_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_62_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_62_ce0 : OUT STD_LOGIC;
    W_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_63_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_63_ce0 : OUT STD_LOGIC;
    W_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_64_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_64_ce0 : OUT STD_LOGIC;
    W_64_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_65_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_65_ce0 : OUT STD_LOGIC;
    W_65_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_66_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_66_ce0 : OUT STD_LOGIC;
    W_66_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_67_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_67_ce0 : OUT STD_LOGIC;
    W_67_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_68_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_68_ce0 : OUT STD_LOGIC;
    W_68_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_69_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_69_ce0 : OUT STD_LOGIC;
    W_69_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_70_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_70_ce0 : OUT STD_LOGIC;
    W_70_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_71_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_71_ce0 : OUT STD_LOGIC;
    W_71_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_72_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_72_ce0 : OUT STD_LOGIC;
    W_72_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_73_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_73_ce0 : OUT STD_LOGIC;
    W_73_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_74_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_74_ce0 : OUT STD_LOGIC;
    W_74_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_75_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_75_ce0 : OUT STD_LOGIC;
    W_75_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_76_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_76_ce0 : OUT STD_LOGIC;
    W_76_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_77_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_77_ce0 : OUT STD_LOGIC;
    W_77_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_78_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_78_ce0 : OUT STD_LOGIC;
    W_78_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_79_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_79_ce0 : OUT STD_LOGIC;
    W_79_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_80_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_80_ce0 : OUT STD_LOGIC;
    W_80_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_81_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_81_ce0 : OUT STD_LOGIC;
    W_81_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_82_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_82_ce0 : OUT STD_LOGIC;
    W_82_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_83_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    W_83_ce0 : OUT STD_LOGIC;
    W_83_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    argmax_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    argmax_TVALID : OUT STD_LOGIC;
    argmax_TREADY : IN STD_LOGIC );
end;


architecture behav of inference_sm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal T_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal T_0_0_ce0 : STD_LOGIC;
    signal T_0_0_we0 : STD_LOGIC;
    signal T_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal T_1_0_ce0 : STD_LOGIC;
    signal T_1_0_we0 : STD_LOGIC;
    signal T_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal T_2_0_ce0 : STD_LOGIC;
    signal T_2_0_we0 : STD_LOGIC;
    signal T_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal T_3_0_ce0 : STD_LOGIC;
    signal T_3_0_we0 : STD_LOGIC;
    signal T_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal S_0_0_ce0 : STD_LOGIC;
    signal S_0_0_we0 : STD_LOGIC;
    signal S_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal S_1_0_ce0 : STD_LOGIC;
    signal S_1_0_we0 : STD_LOGIC;
    signal S_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal S_2_0_ce0 : STD_LOGIC;
    signal S_2_0_we0 : STD_LOGIC;
    signal S_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal S_3_0_ce0 : STD_LOGIC;
    signal S_3_0_we0 : STD_LOGIC;
    signal S_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_ap_start : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_ap_done : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_ap_idle : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_ap_ready : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_1_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_2_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_3_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_4_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_5_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_6_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_7_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_8_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_9_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_10_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_11_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_11_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_12_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_12_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_13_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_13_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_14_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_14_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_15_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_15_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_16_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_17_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_18_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_18_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_19_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_19_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_20_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_20_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_21_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_21_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_22_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_22_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_23_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_23_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_24_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_24_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_25_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_25_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_26_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_26_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_27_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_27_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_28_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_28_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_29_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_29_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_30_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_31_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_31_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_32_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_32_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_32_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_33_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_33_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_33_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_34_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_34_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_34_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_35_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_35_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_35_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_36_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_36_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_36_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_37_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_37_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_37_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_38_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_38_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_38_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_39_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_39_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_39_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_40_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_40_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_40_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_41_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_41_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_41_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_42_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_42_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_42_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_43_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_43_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_43_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_44_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_44_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_44_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_45_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_45_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_45_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_46_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_46_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_46_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_47_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_47_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_47_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_48_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_48_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_48_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_49_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_49_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_49_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_50_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_50_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_50_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_51_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_51_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_51_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_52_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_52_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_52_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_53_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_53_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_53_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_54_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_54_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_54_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_55_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_55_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_55_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_56_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_56_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_56_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_57_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_57_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_57_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_58_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_58_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_58_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_59_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_59_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_59_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_60_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_60_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_60_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_61_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_61_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_61_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_62_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_62_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_62_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_63_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_63_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_63_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_64_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_64_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_64_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_65_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_65_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_65_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_66_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_66_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_66_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_67_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_67_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_67_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_68_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_68_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_68_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_69_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_69_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_69_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_70_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_70_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_70_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_71_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_71_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_71_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_72_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_72_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_72_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_73_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_73_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_73_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_74_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_74_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_74_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_75_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_75_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_75_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_76_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_76_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_76_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_77_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_77_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_77_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_78_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_78_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_78_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_79_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_79_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_79_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_80_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_80_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_80_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_81_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_81_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_81_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_82_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_82_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_82_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_83_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_83_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_B_83_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0 : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_ap_start : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_ap_done : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_ap_idle : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_ap_ready : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_A_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_0_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_A_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_1_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_A_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_2_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_A_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_add_1_10_s_fu_416_A_3_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_A_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_B_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_inference_add_1_10_s_fu_416_B_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_0_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_0_0_we0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_1_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_1_0_we0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_2_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_2_0_we0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_add_1_10_s_fu_416_C_3_0_ce0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_3_0_we0 : STD_LOGIC;
    signal grp_inference_add_1_10_s_fu_416_C_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_ap_start : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_ap_done : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_ap_idle : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_ap_ready : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_A_0_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0 : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_A_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_1_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0 : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_A_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_2_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0 : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_A_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_3_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0 : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_A_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_argmax_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inference_softmax_1_10_s_fu_430_argmax_TVALID : STD_LOGIC;
    signal grp_inference_softmax_1_10_s_fu_430_argmax_TREADY : STD_LOGIC;
    signal grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_bdd_1016 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_1024 : BOOLEAN;
    signal grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1033 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_1040 : BOOLEAN;
    signal grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_1049 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1056 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component inference_mult_1_84_84_10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_0_0_ce0 : OUT STD_LOGIC;
        A_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_0_0_ce1 : OUT STD_LOGIC;
        A_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_1_0_ce0 : OUT STD_LOGIC;
        A_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_1_0_ce1 : OUT STD_LOGIC;
        A_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_2_0_ce0 : OUT STD_LOGIC;
        A_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_2_0_ce1 : OUT STD_LOGIC;
        A_2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_3_0_ce0 : OUT STD_LOGIC;
        A_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        A_3_0_ce1 : OUT STD_LOGIC;
        A_3_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_4_ce0 : OUT STD_LOGIC;
        B_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_5_ce0 : OUT STD_LOGIC;
        B_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_6_ce0 : OUT STD_LOGIC;
        B_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_7_ce0 : OUT STD_LOGIC;
        B_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_8_ce0 : OUT STD_LOGIC;
        B_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_9_ce0 : OUT STD_LOGIC;
        B_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_10_ce0 : OUT STD_LOGIC;
        B_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_11_ce0 : OUT STD_LOGIC;
        B_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_12_ce0 : OUT STD_LOGIC;
        B_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_13_ce0 : OUT STD_LOGIC;
        B_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_14_ce0 : OUT STD_LOGIC;
        B_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_15_ce0 : OUT STD_LOGIC;
        B_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_16_ce0 : OUT STD_LOGIC;
        B_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_17_ce0 : OUT STD_LOGIC;
        B_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_18_ce0 : OUT STD_LOGIC;
        B_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_19_ce0 : OUT STD_LOGIC;
        B_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_20_ce0 : OUT STD_LOGIC;
        B_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_21_ce0 : OUT STD_LOGIC;
        B_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_22_ce0 : OUT STD_LOGIC;
        B_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_23_ce0 : OUT STD_LOGIC;
        B_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_24_ce0 : OUT STD_LOGIC;
        B_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_25_ce0 : OUT STD_LOGIC;
        B_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_26_ce0 : OUT STD_LOGIC;
        B_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_27_ce0 : OUT STD_LOGIC;
        B_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_28_ce0 : OUT STD_LOGIC;
        B_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_29_ce0 : OUT STD_LOGIC;
        B_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_30_ce0 : OUT STD_LOGIC;
        B_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_31_ce0 : OUT STD_LOGIC;
        B_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_32_ce0 : OUT STD_LOGIC;
        B_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_33_ce0 : OUT STD_LOGIC;
        B_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_34_ce0 : OUT STD_LOGIC;
        B_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_35_ce0 : OUT STD_LOGIC;
        B_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_36_ce0 : OUT STD_LOGIC;
        B_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_37_ce0 : OUT STD_LOGIC;
        B_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_38_ce0 : OUT STD_LOGIC;
        B_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_39_ce0 : OUT STD_LOGIC;
        B_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_40_ce0 : OUT STD_LOGIC;
        B_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_41_ce0 : OUT STD_LOGIC;
        B_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_42_ce0 : OUT STD_LOGIC;
        B_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_43_ce0 : OUT STD_LOGIC;
        B_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_44_ce0 : OUT STD_LOGIC;
        B_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_45_ce0 : OUT STD_LOGIC;
        B_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_46_ce0 : OUT STD_LOGIC;
        B_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_47_ce0 : OUT STD_LOGIC;
        B_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_48_ce0 : OUT STD_LOGIC;
        B_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_49_ce0 : OUT STD_LOGIC;
        B_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_50_ce0 : OUT STD_LOGIC;
        B_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_51_ce0 : OUT STD_LOGIC;
        B_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_52_ce0 : OUT STD_LOGIC;
        B_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_53_ce0 : OUT STD_LOGIC;
        B_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_54_ce0 : OUT STD_LOGIC;
        B_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_55_ce0 : OUT STD_LOGIC;
        B_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_56_ce0 : OUT STD_LOGIC;
        B_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_57_ce0 : OUT STD_LOGIC;
        B_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_58_ce0 : OUT STD_LOGIC;
        B_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_59_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_59_ce0 : OUT STD_LOGIC;
        B_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_60_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_60_ce0 : OUT STD_LOGIC;
        B_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_61_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_61_ce0 : OUT STD_LOGIC;
        B_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_62_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_62_ce0 : OUT STD_LOGIC;
        B_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_63_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_63_ce0 : OUT STD_LOGIC;
        B_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_64_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_64_ce0 : OUT STD_LOGIC;
        B_64_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_65_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_65_ce0 : OUT STD_LOGIC;
        B_65_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_66_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_66_ce0 : OUT STD_LOGIC;
        B_66_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_67_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_67_ce0 : OUT STD_LOGIC;
        B_67_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_68_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_68_ce0 : OUT STD_LOGIC;
        B_68_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_69_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_69_ce0 : OUT STD_LOGIC;
        B_69_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_70_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_70_ce0 : OUT STD_LOGIC;
        B_70_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_71_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_71_ce0 : OUT STD_LOGIC;
        B_71_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_72_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_72_ce0 : OUT STD_LOGIC;
        B_72_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_73_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_73_ce0 : OUT STD_LOGIC;
        B_73_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_74_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_74_ce0 : OUT STD_LOGIC;
        B_74_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_75_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_75_ce0 : OUT STD_LOGIC;
        B_75_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_76_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_76_ce0 : OUT STD_LOGIC;
        B_76_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_77_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_77_ce0 : OUT STD_LOGIC;
        B_77_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_78_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_78_ce0 : OUT STD_LOGIC;
        B_78_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_79_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_79_ce0 : OUT STD_LOGIC;
        B_79_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_80_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_80_ce0 : OUT STD_LOGIC;
        B_80_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_81_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_81_ce0 : OUT STD_LOGIC;
        B_81_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_82_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_82_ce0 : OUT STD_LOGIC;
        B_82_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_83_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_83_ce0 : OUT STD_LOGIC;
        B_83_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        C_0_0_ce0 : OUT STD_LOGIC;
        C_0_0_we0 : OUT STD_LOGIC;
        C_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        C_1_0_ce0 : OUT STD_LOGIC;
        C_1_0_we0 : OUT STD_LOGIC;
        C_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_2_0_ce0 : OUT STD_LOGIC;
        C_2_0_we0 : OUT STD_LOGIC;
        C_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_3_0_ce0 : OUT STD_LOGIC;
        C_3_0_we0 : OUT STD_LOGIC;
        C_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component inference_add_1_10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_0_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        A_0_0_ce0 : OUT STD_LOGIC;
        A_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        A_1_0_ce0 : OUT STD_LOGIC;
        A_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        A_2_0_ce0 : OUT STD_LOGIC;
        A_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        A_3_0_ce0 : OUT STD_LOGIC;
        A_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        C_0_0_ce0 : OUT STD_LOGIC;
        C_0_0_we0 : OUT STD_LOGIC;
        C_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        C_1_0_ce0 : OUT STD_LOGIC;
        C_1_0_we0 : OUT STD_LOGIC;
        C_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_2_0_ce0 : OUT STD_LOGIC;
        C_2_0_we0 : OUT STD_LOGIC;
        C_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_3_0_ce0 : OUT STD_LOGIC;
        C_3_0_we0 : OUT STD_LOGIC;
        C_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component inference_softmax_1_10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_0_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        A_0_0_ce0 : OUT STD_LOGIC;
        A_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        A_1_0_ce0 : OUT STD_LOGIC;
        A_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        A_2_0_ce0 : OUT STD_LOGIC;
        A_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        A_3_0_ce0 : OUT STD_LOGIC;
        A_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        argmax_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        argmax_TVALID : OUT STD_LOGIC;
        argmax_TREADY : IN STD_LOGIC );
    end component;


    component inference_sm_T_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component inference_sm_T_2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    T_0_0_U : component inference_sm_T_0_0
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_0_0_address0,
        ce0 => T_0_0_ce0,
        we0 => T_0_0_we0,
        d0 => T_0_0_d0,
        q0 => T_0_0_q0);

    T_1_0_U : component inference_sm_T_0_0
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_1_0_address0,
        ce0 => T_1_0_ce0,
        we0 => T_1_0_we0,
        d0 => T_1_0_d0,
        q0 => T_1_0_q0);

    T_2_0_U : component inference_sm_T_2_0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_2_0_address0,
        ce0 => T_2_0_ce0,
        we0 => T_2_0_we0,
        d0 => T_2_0_d0,
        q0 => T_2_0_q0);

    T_3_0_U : component inference_sm_T_2_0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_3_0_address0,
        ce0 => T_3_0_ce0,
        we0 => T_3_0_we0,
        d0 => T_3_0_d0,
        q0 => T_3_0_q0);

    S_0_0_U : component inference_sm_T_0_0
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_0_0_address0,
        ce0 => S_0_0_ce0,
        we0 => S_0_0_we0,
        d0 => S_0_0_d0,
        q0 => S_0_0_q0);

    S_1_0_U : component inference_sm_T_0_0
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_1_0_address0,
        ce0 => S_1_0_ce0,
        we0 => S_1_0_we0,
        d0 => S_1_0_d0,
        q0 => S_1_0_q0);

    S_2_0_U : component inference_sm_T_2_0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_2_0_address0,
        ce0 => S_2_0_ce0,
        we0 => S_2_0_we0,
        d0 => S_2_0_d0,
        q0 => S_2_0_q0);

    S_3_0_U : component inference_sm_T_2_0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_3_0_address0,
        ce0 => S_3_0_ce0,
        we0 => S_3_0_we0,
        d0 => S_3_0_d0,
        q0 => S_3_0_q0);

    grp_inference_mult_1_84_84_10_s_fu_228 : component inference_mult_1_84_84_10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inference_mult_1_84_84_10_s_fu_228_ap_start,
        ap_done => grp_inference_mult_1_84_84_10_s_fu_228_ap_done,
        ap_idle => grp_inference_mult_1_84_84_10_s_fu_228_ap_idle,
        ap_ready => grp_inference_mult_1_84_84_10_s_fu_228_ap_ready,
        A_0_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0,
        A_0_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0,
        A_0_0_q0 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0,
        A_0_0_address1 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1,
        A_0_0_ce1 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1,
        A_0_0_q1 => grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1,
        A_1_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0,
        A_1_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0,
        A_1_0_q0 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0,
        A_1_0_address1 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1,
        A_1_0_ce1 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1,
        A_1_0_q1 => grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1,
        A_2_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0,
        A_2_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0,
        A_2_0_q0 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0,
        A_2_0_address1 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1,
        A_2_0_ce1 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1,
        A_2_0_q1 => grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1,
        A_3_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0,
        A_3_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0,
        A_3_0_q0 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0,
        A_3_0_address1 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1,
        A_3_0_ce1 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1,
        A_3_0_q1 => grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1,
        B_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_0_address0,
        B_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_0_ce0,
        B_0_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_0_q0,
        B_1_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_1_address0,
        B_1_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_1_ce0,
        B_1_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_1_q0,
        B_2_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_2_address0,
        B_2_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_2_ce0,
        B_2_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_2_q0,
        B_3_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_3_address0,
        B_3_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_3_ce0,
        B_3_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_3_q0,
        B_4_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_4_address0,
        B_4_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_4_ce0,
        B_4_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_4_q0,
        B_5_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_5_address0,
        B_5_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_5_ce0,
        B_5_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_5_q0,
        B_6_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_6_address0,
        B_6_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_6_ce0,
        B_6_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_6_q0,
        B_7_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_7_address0,
        B_7_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_7_ce0,
        B_7_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_7_q0,
        B_8_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_8_address0,
        B_8_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_8_ce0,
        B_8_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_8_q0,
        B_9_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_9_address0,
        B_9_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_9_ce0,
        B_9_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_9_q0,
        B_10_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_10_address0,
        B_10_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_10_ce0,
        B_10_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_10_q0,
        B_11_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_11_address0,
        B_11_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_11_ce0,
        B_11_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_11_q0,
        B_12_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_12_address0,
        B_12_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_12_ce0,
        B_12_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_12_q0,
        B_13_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_13_address0,
        B_13_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_13_ce0,
        B_13_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_13_q0,
        B_14_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_14_address0,
        B_14_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_14_ce0,
        B_14_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_14_q0,
        B_15_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_15_address0,
        B_15_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_15_ce0,
        B_15_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_15_q0,
        B_16_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_16_address0,
        B_16_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_16_ce0,
        B_16_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_16_q0,
        B_17_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_17_address0,
        B_17_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_17_ce0,
        B_17_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_17_q0,
        B_18_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_18_address0,
        B_18_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_18_ce0,
        B_18_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_18_q0,
        B_19_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_19_address0,
        B_19_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_19_ce0,
        B_19_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_19_q0,
        B_20_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_20_address0,
        B_20_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_20_ce0,
        B_20_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_20_q0,
        B_21_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_21_address0,
        B_21_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_21_ce0,
        B_21_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_21_q0,
        B_22_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_22_address0,
        B_22_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_22_ce0,
        B_22_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_22_q0,
        B_23_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_23_address0,
        B_23_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_23_ce0,
        B_23_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_23_q0,
        B_24_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_24_address0,
        B_24_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_24_ce0,
        B_24_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_24_q0,
        B_25_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_25_address0,
        B_25_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_25_ce0,
        B_25_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_25_q0,
        B_26_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_26_address0,
        B_26_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_26_ce0,
        B_26_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_26_q0,
        B_27_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_27_address0,
        B_27_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_27_ce0,
        B_27_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_27_q0,
        B_28_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_28_address0,
        B_28_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_28_ce0,
        B_28_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_28_q0,
        B_29_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_29_address0,
        B_29_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_29_ce0,
        B_29_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_29_q0,
        B_30_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_30_address0,
        B_30_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_30_ce0,
        B_30_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_30_q0,
        B_31_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_31_address0,
        B_31_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_31_ce0,
        B_31_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_31_q0,
        B_32_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_32_address0,
        B_32_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_32_ce0,
        B_32_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_32_q0,
        B_33_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_33_address0,
        B_33_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_33_ce0,
        B_33_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_33_q0,
        B_34_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_34_address0,
        B_34_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_34_ce0,
        B_34_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_34_q0,
        B_35_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_35_address0,
        B_35_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_35_ce0,
        B_35_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_35_q0,
        B_36_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_36_address0,
        B_36_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_36_ce0,
        B_36_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_36_q0,
        B_37_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_37_address0,
        B_37_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_37_ce0,
        B_37_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_37_q0,
        B_38_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_38_address0,
        B_38_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_38_ce0,
        B_38_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_38_q0,
        B_39_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_39_address0,
        B_39_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_39_ce0,
        B_39_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_39_q0,
        B_40_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_40_address0,
        B_40_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_40_ce0,
        B_40_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_40_q0,
        B_41_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_41_address0,
        B_41_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_41_ce0,
        B_41_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_41_q0,
        B_42_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_42_address0,
        B_42_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_42_ce0,
        B_42_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_42_q0,
        B_43_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_43_address0,
        B_43_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_43_ce0,
        B_43_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_43_q0,
        B_44_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_44_address0,
        B_44_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_44_ce0,
        B_44_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_44_q0,
        B_45_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_45_address0,
        B_45_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_45_ce0,
        B_45_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_45_q0,
        B_46_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_46_address0,
        B_46_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_46_ce0,
        B_46_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_46_q0,
        B_47_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_47_address0,
        B_47_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_47_ce0,
        B_47_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_47_q0,
        B_48_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_48_address0,
        B_48_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_48_ce0,
        B_48_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_48_q0,
        B_49_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_49_address0,
        B_49_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_49_ce0,
        B_49_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_49_q0,
        B_50_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_50_address0,
        B_50_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_50_ce0,
        B_50_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_50_q0,
        B_51_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_51_address0,
        B_51_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_51_ce0,
        B_51_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_51_q0,
        B_52_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_52_address0,
        B_52_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_52_ce0,
        B_52_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_52_q0,
        B_53_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_53_address0,
        B_53_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_53_ce0,
        B_53_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_53_q0,
        B_54_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_54_address0,
        B_54_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_54_ce0,
        B_54_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_54_q0,
        B_55_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_55_address0,
        B_55_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_55_ce0,
        B_55_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_55_q0,
        B_56_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_56_address0,
        B_56_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_56_ce0,
        B_56_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_56_q0,
        B_57_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_57_address0,
        B_57_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_57_ce0,
        B_57_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_57_q0,
        B_58_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_58_address0,
        B_58_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_58_ce0,
        B_58_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_58_q0,
        B_59_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_59_address0,
        B_59_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_59_ce0,
        B_59_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_59_q0,
        B_60_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_60_address0,
        B_60_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_60_ce0,
        B_60_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_60_q0,
        B_61_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_61_address0,
        B_61_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_61_ce0,
        B_61_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_61_q0,
        B_62_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_62_address0,
        B_62_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_62_ce0,
        B_62_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_62_q0,
        B_63_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_63_address0,
        B_63_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_63_ce0,
        B_63_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_63_q0,
        B_64_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_64_address0,
        B_64_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_64_ce0,
        B_64_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_64_q0,
        B_65_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_65_address0,
        B_65_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_65_ce0,
        B_65_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_65_q0,
        B_66_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_66_address0,
        B_66_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_66_ce0,
        B_66_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_66_q0,
        B_67_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_67_address0,
        B_67_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_67_ce0,
        B_67_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_67_q0,
        B_68_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_68_address0,
        B_68_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_68_ce0,
        B_68_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_68_q0,
        B_69_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_69_address0,
        B_69_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_69_ce0,
        B_69_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_69_q0,
        B_70_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_70_address0,
        B_70_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_70_ce0,
        B_70_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_70_q0,
        B_71_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_71_address0,
        B_71_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_71_ce0,
        B_71_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_71_q0,
        B_72_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_72_address0,
        B_72_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_72_ce0,
        B_72_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_72_q0,
        B_73_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_73_address0,
        B_73_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_73_ce0,
        B_73_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_73_q0,
        B_74_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_74_address0,
        B_74_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_74_ce0,
        B_74_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_74_q0,
        B_75_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_75_address0,
        B_75_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_75_ce0,
        B_75_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_75_q0,
        B_76_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_76_address0,
        B_76_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_76_ce0,
        B_76_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_76_q0,
        B_77_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_77_address0,
        B_77_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_77_ce0,
        B_77_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_77_q0,
        B_78_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_78_address0,
        B_78_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_78_ce0,
        B_78_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_78_q0,
        B_79_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_79_address0,
        B_79_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_79_ce0,
        B_79_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_79_q0,
        B_80_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_80_address0,
        B_80_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_80_ce0,
        B_80_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_80_q0,
        B_81_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_81_address0,
        B_81_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_81_ce0,
        B_81_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_81_q0,
        B_82_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_82_address0,
        B_82_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_82_ce0,
        B_82_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_82_q0,
        B_83_address0 => grp_inference_mult_1_84_84_10_s_fu_228_B_83_address0,
        B_83_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_B_83_ce0,
        B_83_q0 => grp_inference_mult_1_84_84_10_s_fu_228_B_83_q0,
        C_0_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0,
        C_0_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0,
        C_0_0_we0 => grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0,
        C_0_0_d0 => grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0,
        C_1_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0,
        C_1_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0,
        C_1_0_we0 => grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0,
        C_1_0_d0 => grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0,
        C_2_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0,
        C_2_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0,
        C_2_0_we0 => grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0,
        C_2_0_d0 => grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0,
        C_3_0_address0 => grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0,
        C_3_0_ce0 => grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0,
        C_3_0_we0 => grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0,
        C_3_0_d0 => grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0);

    grp_inference_add_1_10_s_fu_416 : component inference_add_1_10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inference_add_1_10_s_fu_416_ap_start,
        ap_done => grp_inference_add_1_10_s_fu_416_ap_done,
        ap_idle => grp_inference_add_1_10_s_fu_416_ap_idle,
        ap_ready => grp_inference_add_1_10_s_fu_416_ap_ready,
        A_0_0_address0 => grp_inference_add_1_10_s_fu_416_A_0_0_address0,
        A_0_0_ce0 => grp_inference_add_1_10_s_fu_416_A_0_0_ce0,
        A_0_0_q0 => grp_inference_add_1_10_s_fu_416_A_0_0_q0,
        A_1_0_address0 => grp_inference_add_1_10_s_fu_416_A_1_0_address0,
        A_1_0_ce0 => grp_inference_add_1_10_s_fu_416_A_1_0_ce0,
        A_1_0_q0 => grp_inference_add_1_10_s_fu_416_A_1_0_q0,
        A_2_0_address0 => grp_inference_add_1_10_s_fu_416_A_2_0_address0,
        A_2_0_ce0 => grp_inference_add_1_10_s_fu_416_A_2_0_ce0,
        A_2_0_q0 => grp_inference_add_1_10_s_fu_416_A_2_0_q0,
        A_3_0_address0 => grp_inference_add_1_10_s_fu_416_A_3_0_address0,
        A_3_0_ce0 => grp_inference_add_1_10_s_fu_416_A_3_0_ce0,
        A_3_0_q0 => grp_inference_add_1_10_s_fu_416_A_3_0_q0,
        B_0_address0 => grp_inference_add_1_10_s_fu_416_B_0_address0,
        B_0_ce0 => grp_inference_add_1_10_s_fu_416_B_0_ce0,
        B_0_q0 => grp_inference_add_1_10_s_fu_416_B_0_q0,
        C_0_0_address0 => grp_inference_add_1_10_s_fu_416_C_0_0_address0,
        C_0_0_ce0 => grp_inference_add_1_10_s_fu_416_C_0_0_ce0,
        C_0_0_we0 => grp_inference_add_1_10_s_fu_416_C_0_0_we0,
        C_0_0_d0 => grp_inference_add_1_10_s_fu_416_C_0_0_d0,
        C_1_0_address0 => grp_inference_add_1_10_s_fu_416_C_1_0_address0,
        C_1_0_ce0 => grp_inference_add_1_10_s_fu_416_C_1_0_ce0,
        C_1_0_we0 => grp_inference_add_1_10_s_fu_416_C_1_0_we0,
        C_1_0_d0 => grp_inference_add_1_10_s_fu_416_C_1_0_d0,
        C_2_0_address0 => grp_inference_add_1_10_s_fu_416_C_2_0_address0,
        C_2_0_ce0 => grp_inference_add_1_10_s_fu_416_C_2_0_ce0,
        C_2_0_we0 => grp_inference_add_1_10_s_fu_416_C_2_0_we0,
        C_2_0_d0 => grp_inference_add_1_10_s_fu_416_C_2_0_d0,
        C_3_0_address0 => grp_inference_add_1_10_s_fu_416_C_3_0_address0,
        C_3_0_ce0 => grp_inference_add_1_10_s_fu_416_C_3_0_ce0,
        C_3_0_we0 => grp_inference_add_1_10_s_fu_416_C_3_0_we0,
        C_3_0_d0 => grp_inference_add_1_10_s_fu_416_C_3_0_d0);

    grp_inference_softmax_1_10_s_fu_430 : component inference_softmax_1_10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inference_softmax_1_10_s_fu_430_ap_start,
        ap_done => grp_inference_softmax_1_10_s_fu_430_ap_done,
        ap_idle => grp_inference_softmax_1_10_s_fu_430_ap_idle,
        ap_ready => grp_inference_softmax_1_10_s_fu_430_ap_ready,
        A_0_0_address0 => grp_inference_softmax_1_10_s_fu_430_A_0_0_address0,
        A_0_0_ce0 => grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0,
        A_0_0_q0 => grp_inference_softmax_1_10_s_fu_430_A_0_0_q0,
        A_1_0_address0 => grp_inference_softmax_1_10_s_fu_430_A_1_0_address0,
        A_1_0_ce0 => grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0,
        A_1_0_q0 => grp_inference_softmax_1_10_s_fu_430_A_1_0_q0,
        A_2_0_address0 => grp_inference_softmax_1_10_s_fu_430_A_2_0_address0,
        A_2_0_ce0 => grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0,
        A_2_0_q0 => grp_inference_softmax_1_10_s_fu_430_A_2_0_q0,
        A_3_0_address0 => grp_inference_softmax_1_10_s_fu_430_A_3_0_address0,
        A_3_0_ce0 => grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0,
        A_3_0_q0 => grp_inference_softmax_1_10_s_fu_430_A_3_0_q0,
        argmax_TDATA => grp_inference_softmax_1_10_s_fu_430_argmax_TDATA,
        argmax_TVALID => grp_inference_softmax_1_10_s_fu_430_argmax_TVALID,
        argmax_TREADY => grp_inference_softmax_1_10_s_fu_430_argmax_TREADY);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_inference_softmax_1_10_s_fu_430_ap_done)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg assign process. --
    grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                    grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_inference_add_1_10_s_fu_416_ap_ready)) then 
                    grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg assign process. --
    grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_1016))) then 
                    grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_inference_mult_1_84_84_10_s_fu_228_ap_ready)) then 
                    grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg assign process. --
    grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_inference_softmax_1_10_s_fu_430_ap_ready)) then 
                    grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, grp_inference_mult_1_84_84_10_s_fu_228_ap_done, grp_inference_add_1_10_s_fu_416_ap_done, grp_inference_softmax_1_10_s_fu_430_ap_done, ap_sig_bdd_1016)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_1016)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_inference_mult_1_84_84_10_s_fu_228_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_inference_add_1_10_s_fu_416_ap_done))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_inference_softmax_1_10_s_fu_430_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    B_0_address0 <= grp_inference_add_1_10_s_fu_416_B_0_address0;

    -- B_0_ce0 assign process. --
    B_0_ce0_assign_proc : process(grp_inference_add_1_10_s_fu_416_B_0_ce0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            B_0_ce0 <= grp_inference_add_1_10_s_fu_416_B_0_ce0;
        else 
            B_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S_0_0_address0 assign process. --
    S_0_0_address0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_0_0_address0, grp_inference_softmax_1_10_s_fu_430_A_0_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_0_0_address0 <= grp_inference_softmax_1_10_s_fu_430_A_0_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_0_0_address0 <= grp_inference_add_1_10_s_fu_416_C_0_0_address0;
        else 
            S_0_0_address0 <= "XX";
        end if; 
    end process;


    -- S_0_0_ce0 assign process. --
    S_0_0_ce0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_0_0_ce0, grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_0_0_ce0 <= grp_inference_softmax_1_10_s_fu_430_A_0_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_0_0_ce0 <= grp_inference_add_1_10_s_fu_416_C_0_0_ce0;
        else 
            S_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S_0_0_d0 <= grp_inference_add_1_10_s_fu_416_C_0_0_d0;

    -- S_0_0_we0 assign process. --
    S_0_0_we0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_0_0_we0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_0_0_we0 <= grp_inference_add_1_10_s_fu_416_C_0_0_we0;
        else 
            S_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S_1_0_address0 assign process. --
    S_1_0_address0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_1_0_address0, grp_inference_softmax_1_10_s_fu_430_A_1_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_1_0_address0 <= grp_inference_softmax_1_10_s_fu_430_A_1_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_1_0_address0 <= grp_inference_add_1_10_s_fu_416_C_1_0_address0;
        else 
            S_1_0_address0 <= "XX";
        end if; 
    end process;


    -- S_1_0_ce0 assign process. --
    S_1_0_ce0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_1_0_ce0, grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_1_0_ce0 <= grp_inference_softmax_1_10_s_fu_430_A_1_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_1_0_ce0 <= grp_inference_add_1_10_s_fu_416_C_1_0_ce0;
        else 
            S_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S_1_0_d0 <= grp_inference_add_1_10_s_fu_416_C_1_0_d0;

    -- S_1_0_we0 assign process. --
    S_1_0_we0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_1_0_we0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_1_0_we0 <= grp_inference_add_1_10_s_fu_416_C_1_0_we0;
        else 
            S_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S_2_0_address0 assign process. --
    S_2_0_address0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_2_0_address0, grp_inference_softmax_1_10_s_fu_430_A_2_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_2_0_address0 <= grp_inference_softmax_1_10_s_fu_430_A_2_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_2_0_address0 <= grp_inference_add_1_10_s_fu_416_C_2_0_address0;
        else 
            S_2_0_address0 <= "X";
        end if; 
    end process;


    -- S_2_0_ce0 assign process. --
    S_2_0_ce0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_2_0_ce0, grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_2_0_ce0 <= grp_inference_softmax_1_10_s_fu_430_A_2_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_2_0_ce0 <= grp_inference_add_1_10_s_fu_416_C_2_0_ce0;
        else 
            S_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S_2_0_d0 <= grp_inference_add_1_10_s_fu_416_C_2_0_d0;

    -- S_2_0_we0 assign process. --
    S_2_0_we0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_2_0_we0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_2_0_we0 <= grp_inference_add_1_10_s_fu_416_C_2_0_we0;
        else 
            S_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S_3_0_address0 assign process. --
    S_3_0_address0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_3_0_address0, grp_inference_softmax_1_10_s_fu_430_A_3_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_3_0_address0 <= grp_inference_softmax_1_10_s_fu_430_A_3_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_3_0_address0 <= grp_inference_add_1_10_s_fu_416_C_3_0_address0;
        else 
            S_3_0_address0 <= "X";
        end if; 
    end process;


    -- S_3_0_ce0 assign process. --
    S_3_0_ce0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_3_0_ce0, grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            S_3_0_ce0 <= grp_inference_softmax_1_10_s_fu_430_A_3_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_3_0_ce0 <= grp_inference_add_1_10_s_fu_416_C_3_0_ce0;
        else 
            S_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S_3_0_d0 <= grp_inference_add_1_10_s_fu_416_C_3_0_d0;

    -- S_3_0_we0 assign process. --
    S_3_0_we0_assign_proc : process(grp_inference_add_1_10_s_fu_416_C_3_0_we0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            S_3_0_we0 <= grp_inference_add_1_10_s_fu_416_C_3_0_we0;
        else 
            S_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_0_0_address0 assign process. --
    T_0_0_address0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0, grp_inference_add_1_10_s_fu_416_A_0_0_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_0_0_address0 <= grp_inference_add_1_10_s_fu_416_A_0_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_0_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_address0;
        else 
            T_0_0_address0 <= "XX";
        end if; 
    end process;


    -- T_0_0_ce0 assign process. --
    T_0_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0, grp_inference_add_1_10_s_fu_416_A_0_0_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_0_0_ce0 <= grp_inference_add_1_10_s_fu_416_A_0_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_0_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_ce0;
        else 
            T_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    T_0_0_d0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_d0;

    -- T_0_0_we0 assign process. --
    T_0_0_we0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_0_0_we0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_0_0_we0;
        else 
            T_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_1_0_address0 assign process. --
    T_1_0_address0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0, grp_inference_add_1_10_s_fu_416_A_1_0_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_1_0_address0 <= grp_inference_add_1_10_s_fu_416_A_1_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_1_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_address0;
        else 
            T_1_0_address0 <= "XX";
        end if; 
    end process;


    -- T_1_0_ce0 assign process. --
    T_1_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0, grp_inference_add_1_10_s_fu_416_A_1_0_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_1_0_ce0 <= grp_inference_add_1_10_s_fu_416_A_1_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_1_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_ce0;
        else 
            T_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    T_1_0_d0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_d0;

    -- T_1_0_we0 assign process. --
    T_1_0_we0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_1_0_we0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_1_0_we0;
        else 
            T_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_2_0_address0 assign process. --
    T_2_0_address0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0, grp_inference_add_1_10_s_fu_416_A_2_0_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_2_0_address0 <= grp_inference_add_1_10_s_fu_416_A_2_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_2_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_address0;
        else 
            T_2_0_address0 <= "X";
        end if; 
    end process;


    -- T_2_0_ce0 assign process. --
    T_2_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0, grp_inference_add_1_10_s_fu_416_A_2_0_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_2_0_ce0 <= grp_inference_add_1_10_s_fu_416_A_2_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_2_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_ce0;
        else 
            T_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    T_2_0_d0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_d0;

    -- T_2_0_we0 assign process. --
    T_2_0_we0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_2_0_we0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_2_0_we0;
        else 
            T_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_3_0_address0 assign process. --
    T_3_0_address0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0, grp_inference_add_1_10_s_fu_416_A_3_0_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_3_0_address0 <= grp_inference_add_1_10_s_fu_416_A_3_0_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_3_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_address0;
        else 
            T_3_0_address0 <= "X";
        end if; 
    end process;


    -- T_3_0_ce0 assign process. --
    T_3_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0, grp_inference_add_1_10_s_fu_416_A_3_0_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            T_3_0_ce0 <= grp_inference_add_1_10_s_fu_416_A_3_0_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_3_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_ce0;
        else 
            T_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    T_3_0_d0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_d0;

    -- T_3_0_we0 assign process. --
    T_3_0_we0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            T_3_0_we0 <= grp_inference_mult_1_84_84_10_s_fu_228_C_3_0_we0;
        else 
            T_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    W_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_0_address0;

    -- W_0_ce0 assign process. --
    W_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_0_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_0_ce0;
        else 
            W_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_10_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_10_address0;

    -- W_10_ce0 assign process. --
    W_10_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_10_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_10_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_10_ce0;
        else 
            W_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_11_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_11_address0;

    -- W_11_ce0 assign process. --
    W_11_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_11_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_11_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_11_ce0;
        else 
            W_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_12_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_12_address0;

    -- W_12_ce0 assign process. --
    W_12_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_12_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_12_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_12_ce0;
        else 
            W_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_13_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_13_address0;

    -- W_13_ce0 assign process. --
    W_13_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_13_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_13_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_13_ce0;
        else 
            W_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_14_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_14_address0;

    -- W_14_ce0 assign process. --
    W_14_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_14_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_14_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_14_ce0;
        else 
            W_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_15_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_15_address0;

    -- W_15_ce0 assign process. --
    W_15_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_15_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_15_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_15_ce0;
        else 
            W_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_16_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_16_address0;

    -- W_16_ce0 assign process. --
    W_16_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_16_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_16_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_16_ce0;
        else 
            W_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_17_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_17_address0;

    -- W_17_ce0 assign process. --
    W_17_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_17_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_17_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_17_ce0;
        else 
            W_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_18_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_18_address0;

    -- W_18_ce0 assign process. --
    W_18_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_18_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_18_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_18_ce0;
        else 
            W_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_19_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_19_address0;

    -- W_19_ce0 assign process. --
    W_19_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_19_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_19_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_19_ce0;
        else 
            W_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_1_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_1_address0;

    -- W_1_ce0 assign process. --
    W_1_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_1_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_1_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_1_ce0;
        else 
            W_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_20_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_20_address0;

    -- W_20_ce0 assign process. --
    W_20_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_20_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_20_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_20_ce0;
        else 
            W_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_21_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_21_address0;

    -- W_21_ce0 assign process. --
    W_21_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_21_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_21_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_21_ce0;
        else 
            W_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_22_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_22_address0;

    -- W_22_ce0 assign process. --
    W_22_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_22_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_22_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_22_ce0;
        else 
            W_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_23_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_23_address0;

    -- W_23_ce0 assign process. --
    W_23_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_23_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_23_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_23_ce0;
        else 
            W_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_24_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_24_address0;

    -- W_24_ce0 assign process. --
    W_24_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_24_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_24_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_24_ce0;
        else 
            W_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_25_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_25_address0;

    -- W_25_ce0 assign process. --
    W_25_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_25_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_25_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_25_ce0;
        else 
            W_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_26_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_26_address0;

    -- W_26_ce0 assign process. --
    W_26_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_26_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_26_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_26_ce0;
        else 
            W_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_27_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_27_address0;

    -- W_27_ce0 assign process. --
    W_27_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_27_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_27_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_27_ce0;
        else 
            W_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_28_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_28_address0;

    -- W_28_ce0 assign process. --
    W_28_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_28_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_28_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_28_ce0;
        else 
            W_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_29_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_29_address0;

    -- W_29_ce0 assign process. --
    W_29_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_29_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_29_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_29_ce0;
        else 
            W_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_2_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_2_address0;

    -- W_2_ce0 assign process. --
    W_2_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_2_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_2_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_2_ce0;
        else 
            W_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_30_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_30_address0;

    -- W_30_ce0 assign process. --
    W_30_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_30_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_30_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_30_ce0;
        else 
            W_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_31_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_31_address0;

    -- W_31_ce0 assign process. --
    W_31_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_31_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_31_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_31_ce0;
        else 
            W_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_32_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_32_address0;

    -- W_32_ce0 assign process. --
    W_32_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_32_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_32_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_32_ce0;
        else 
            W_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_33_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_33_address0;

    -- W_33_ce0 assign process. --
    W_33_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_33_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_33_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_33_ce0;
        else 
            W_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_34_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_34_address0;

    -- W_34_ce0 assign process. --
    W_34_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_34_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_34_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_34_ce0;
        else 
            W_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_35_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_35_address0;

    -- W_35_ce0 assign process. --
    W_35_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_35_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_35_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_35_ce0;
        else 
            W_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_36_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_36_address0;

    -- W_36_ce0 assign process. --
    W_36_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_36_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_36_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_36_ce0;
        else 
            W_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_37_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_37_address0;

    -- W_37_ce0 assign process. --
    W_37_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_37_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_37_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_37_ce0;
        else 
            W_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_38_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_38_address0;

    -- W_38_ce0 assign process. --
    W_38_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_38_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_38_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_38_ce0;
        else 
            W_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_39_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_39_address0;

    -- W_39_ce0 assign process. --
    W_39_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_39_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_39_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_39_ce0;
        else 
            W_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_3_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_3_address0;

    -- W_3_ce0 assign process. --
    W_3_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_3_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_3_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_3_ce0;
        else 
            W_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_40_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_40_address0;

    -- W_40_ce0 assign process. --
    W_40_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_40_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_40_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_40_ce0;
        else 
            W_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_41_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_41_address0;

    -- W_41_ce0 assign process. --
    W_41_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_41_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_41_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_41_ce0;
        else 
            W_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_42_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_42_address0;

    -- W_42_ce0 assign process. --
    W_42_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_42_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_42_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_42_ce0;
        else 
            W_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_43_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_43_address0;

    -- W_43_ce0 assign process. --
    W_43_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_43_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_43_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_43_ce0;
        else 
            W_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_44_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_44_address0;

    -- W_44_ce0 assign process. --
    W_44_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_44_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_44_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_44_ce0;
        else 
            W_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_45_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_45_address0;

    -- W_45_ce0 assign process. --
    W_45_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_45_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_45_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_45_ce0;
        else 
            W_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_46_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_46_address0;

    -- W_46_ce0 assign process. --
    W_46_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_46_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_46_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_46_ce0;
        else 
            W_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_47_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_47_address0;

    -- W_47_ce0 assign process. --
    W_47_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_47_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_47_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_47_ce0;
        else 
            W_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_48_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_48_address0;

    -- W_48_ce0 assign process. --
    W_48_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_48_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_48_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_48_ce0;
        else 
            W_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_49_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_49_address0;

    -- W_49_ce0 assign process. --
    W_49_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_49_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_49_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_49_ce0;
        else 
            W_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_4_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_4_address0;

    -- W_4_ce0 assign process. --
    W_4_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_4_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_4_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_4_ce0;
        else 
            W_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_50_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_50_address0;

    -- W_50_ce0 assign process. --
    W_50_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_50_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_50_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_50_ce0;
        else 
            W_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_51_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_51_address0;

    -- W_51_ce0 assign process. --
    W_51_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_51_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_51_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_51_ce0;
        else 
            W_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_52_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_52_address0;

    -- W_52_ce0 assign process. --
    W_52_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_52_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_52_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_52_ce0;
        else 
            W_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_53_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_53_address0;

    -- W_53_ce0 assign process. --
    W_53_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_53_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_53_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_53_ce0;
        else 
            W_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_54_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_54_address0;

    -- W_54_ce0 assign process. --
    W_54_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_54_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_54_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_54_ce0;
        else 
            W_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_55_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_55_address0;

    -- W_55_ce0 assign process. --
    W_55_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_55_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_55_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_55_ce0;
        else 
            W_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_56_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_56_address0;

    -- W_56_ce0 assign process. --
    W_56_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_56_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_56_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_56_ce0;
        else 
            W_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_57_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_57_address0;

    -- W_57_ce0 assign process. --
    W_57_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_57_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_57_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_57_ce0;
        else 
            W_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_58_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_58_address0;

    -- W_58_ce0 assign process. --
    W_58_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_58_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_58_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_58_ce0;
        else 
            W_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_59_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_59_address0;

    -- W_59_ce0 assign process. --
    W_59_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_59_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_59_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_59_ce0;
        else 
            W_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_5_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_5_address0;

    -- W_5_ce0 assign process. --
    W_5_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_5_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_5_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_5_ce0;
        else 
            W_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_60_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_60_address0;

    -- W_60_ce0 assign process. --
    W_60_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_60_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_60_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_60_ce0;
        else 
            W_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_61_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_61_address0;

    -- W_61_ce0 assign process. --
    W_61_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_61_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_61_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_61_ce0;
        else 
            W_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_62_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_62_address0;

    -- W_62_ce0 assign process. --
    W_62_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_62_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_62_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_62_ce0;
        else 
            W_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_63_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_63_address0;

    -- W_63_ce0 assign process. --
    W_63_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_63_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_63_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_63_ce0;
        else 
            W_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_64_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_64_address0;

    -- W_64_ce0 assign process. --
    W_64_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_64_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_64_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_64_ce0;
        else 
            W_64_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_65_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_65_address0;

    -- W_65_ce0 assign process. --
    W_65_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_65_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_65_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_65_ce0;
        else 
            W_65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_66_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_66_address0;

    -- W_66_ce0 assign process. --
    W_66_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_66_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_66_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_66_ce0;
        else 
            W_66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_67_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_67_address0;

    -- W_67_ce0 assign process. --
    W_67_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_67_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_67_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_67_ce0;
        else 
            W_67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_68_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_68_address0;

    -- W_68_ce0 assign process. --
    W_68_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_68_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_68_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_68_ce0;
        else 
            W_68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_69_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_69_address0;

    -- W_69_ce0 assign process. --
    W_69_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_69_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_69_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_69_ce0;
        else 
            W_69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_6_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_6_address0;

    -- W_6_ce0 assign process. --
    W_6_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_6_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_6_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_6_ce0;
        else 
            W_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_70_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_70_address0;

    -- W_70_ce0 assign process. --
    W_70_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_70_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_70_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_70_ce0;
        else 
            W_70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_71_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_71_address0;

    -- W_71_ce0 assign process. --
    W_71_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_71_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_71_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_71_ce0;
        else 
            W_71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_72_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_72_address0;

    -- W_72_ce0 assign process. --
    W_72_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_72_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_72_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_72_ce0;
        else 
            W_72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_73_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_73_address0;

    -- W_73_ce0 assign process. --
    W_73_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_73_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_73_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_73_ce0;
        else 
            W_73_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_74_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_74_address0;

    -- W_74_ce0 assign process. --
    W_74_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_74_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_74_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_74_ce0;
        else 
            W_74_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_75_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_75_address0;

    -- W_75_ce0 assign process. --
    W_75_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_75_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_75_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_75_ce0;
        else 
            W_75_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_76_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_76_address0;

    -- W_76_ce0 assign process. --
    W_76_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_76_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_76_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_76_ce0;
        else 
            W_76_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_77_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_77_address0;

    -- W_77_ce0 assign process. --
    W_77_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_77_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_77_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_77_ce0;
        else 
            W_77_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_78_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_78_address0;

    -- W_78_ce0 assign process. --
    W_78_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_78_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_78_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_78_ce0;
        else 
            W_78_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_79_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_79_address0;

    -- W_79_ce0 assign process. --
    W_79_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_79_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_79_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_79_ce0;
        else 
            W_79_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_7_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_7_address0;

    -- W_7_ce0 assign process. --
    W_7_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_7_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_7_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_7_ce0;
        else 
            W_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_80_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_80_address0;

    -- W_80_ce0 assign process. --
    W_80_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_80_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_80_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_80_ce0;
        else 
            W_80_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_81_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_81_address0;

    -- W_81_ce0 assign process. --
    W_81_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_81_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_81_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_81_ce0;
        else 
            W_81_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_82_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_82_address0;

    -- W_82_ce0 assign process. --
    W_82_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_82_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_82_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_82_ce0;
        else 
            W_82_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_83_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_83_address0;

    -- W_83_ce0 assign process. --
    W_83_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_83_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_83_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_83_ce0;
        else 
            W_83_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_8_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_8_address0;

    -- W_8_ce0 assign process. --
    W_8_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_8_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_8_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_8_ce0;
        else 
            W_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    W_9_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_9_address0;

    -- W_9_ce0 assign process. --
    W_9_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_B_9_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            W_9_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_B_9_ce0;
        else 
            W_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_0_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address0;
    X_0_0_address1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_address1;

    -- X_0_0_ce0 assign process. --
    X_0_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_0_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce0;
        else 
            X_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- X_0_0_ce1 assign process. --
    X_0_0_ce1_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_0_0_ce1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_ce1;
        else 
            X_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    X_1_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address0;
    X_1_0_address1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_address1;

    -- X_1_0_ce0 assign process. --
    X_1_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_1_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce0;
        else 
            X_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- X_1_0_ce1 assign process. --
    X_1_0_ce1_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_1_0_ce1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_ce1;
        else 
            X_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    X_2_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address0;
    X_2_0_address1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_address1;

    -- X_2_0_ce0 assign process. --
    X_2_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_2_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce0;
        else 
            X_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- X_2_0_ce1 assign process. --
    X_2_0_ce1_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_2_0_ce1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_ce1;
        else 
            X_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    X_3_0_address0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address0;
    X_3_0_address1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_address1;

    -- X_3_0_ce0 assign process. --
    X_3_0_ce0_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_3_0_ce0 <= grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce0;
        else 
            X_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- X_3_0_ce1 assign process. --
    X_3_0_ce1_assign_proc : process(grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            X_3_0_ce1 <= grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_ce1;
        else 
            X_3_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, grp_inference_softmax_1_10_s_fu_430_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_inference_softmax_1_10_s_fu_430_ap_done))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(grp_inference_softmax_1_10_s_fu_430_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_inference_softmax_1_10_s_fu_430_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1016 assign process. --
    ap_sig_bdd_1016_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_1016 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_1024 assign process. --
    ap_sig_bdd_1024_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1024 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_1033 assign process. --
    ap_sig_bdd_1033_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1033 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1040 assign process. --
    ap_sig_bdd_1040_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1040 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_1049 assign process. --
    ap_sig_bdd_1049_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1049 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_1056 assign process. --
    ap_sig_bdd_1056_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1056 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_1024)
    begin
        if (ap_sig_bdd_1024) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_1033)
    begin
        if (ap_sig_bdd_1033) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_1040)
    begin
        if (ap_sig_bdd_1040) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_1049)
    begin
        if (ap_sig_bdd_1049) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_1056)
    begin
        if (ap_sig_bdd_1056) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;

    argmax_TDATA <= grp_inference_softmax_1_10_s_fu_430_argmax_TDATA;
    argmax_TVALID <= grp_inference_softmax_1_10_s_fu_430_argmax_TVALID;
    grp_inference_add_1_10_s_fu_416_A_0_0_q0 <= T_0_0_q0;
    grp_inference_add_1_10_s_fu_416_A_1_0_q0 <= T_1_0_q0;
    grp_inference_add_1_10_s_fu_416_A_2_0_q0 <= T_2_0_q0;
    grp_inference_add_1_10_s_fu_416_A_3_0_q0 <= T_3_0_q0;
    grp_inference_add_1_10_s_fu_416_B_0_q0 <= B_0_q0;
    grp_inference_add_1_10_s_fu_416_ap_start <= grp_inference_add_1_10_s_fu_416_ap_start_ap_start_reg;
    grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q0 <= X_0_0_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_A_0_0_q1 <= X_0_0_q1;
    grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q0 <= X_1_0_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_A_1_0_q1 <= X_1_0_q1;
    grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q0 <= X_2_0_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_A_2_0_q1 <= X_2_0_q1;
    grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q0 <= X_3_0_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_A_3_0_q1 <= X_3_0_q1;
    grp_inference_mult_1_84_84_10_s_fu_228_B_0_q0 <= W_0_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_10_q0 <= W_10_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_11_q0 <= W_11_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_12_q0 <= W_12_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_13_q0 <= W_13_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_14_q0 <= W_14_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_15_q0 <= W_15_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_16_q0 <= W_16_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_17_q0 <= W_17_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_18_q0 <= W_18_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_19_q0 <= W_19_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_1_q0 <= W_1_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_20_q0 <= W_20_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_21_q0 <= W_21_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_22_q0 <= W_22_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_23_q0 <= W_23_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_24_q0 <= W_24_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_25_q0 <= W_25_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_26_q0 <= W_26_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_27_q0 <= W_27_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_28_q0 <= W_28_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_29_q0 <= W_29_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_2_q0 <= W_2_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_30_q0 <= W_30_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_31_q0 <= W_31_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_32_q0 <= W_32_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_33_q0 <= W_33_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_34_q0 <= W_34_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_35_q0 <= W_35_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_36_q0 <= W_36_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_37_q0 <= W_37_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_38_q0 <= W_38_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_39_q0 <= W_39_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_3_q0 <= W_3_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_40_q0 <= W_40_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_41_q0 <= W_41_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_42_q0 <= W_42_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_43_q0 <= W_43_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_44_q0 <= W_44_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_45_q0 <= W_45_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_46_q0 <= W_46_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_47_q0 <= W_47_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_48_q0 <= W_48_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_49_q0 <= W_49_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_4_q0 <= W_4_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_50_q0 <= W_50_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_51_q0 <= W_51_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_52_q0 <= W_52_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_53_q0 <= W_53_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_54_q0 <= W_54_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_55_q0 <= W_55_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_56_q0 <= W_56_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_57_q0 <= W_57_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_58_q0 <= W_58_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_59_q0 <= W_59_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_5_q0 <= W_5_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_60_q0 <= W_60_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_61_q0 <= W_61_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_62_q0 <= W_62_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_63_q0 <= W_63_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_64_q0 <= W_64_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_65_q0 <= W_65_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_66_q0 <= W_66_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_67_q0 <= W_67_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_68_q0 <= W_68_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_69_q0 <= W_69_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_6_q0 <= W_6_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_70_q0 <= W_70_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_71_q0 <= W_71_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_72_q0 <= W_72_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_73_q0 <= W_73_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_74_q0 <= W_74_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_75_q0 <= W_75_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_76_q0 <= W_76_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_77_q0 <= W_77_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_78_q0 <= W_78_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_79_q0 <= W_79_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_7_q0 <= W_7_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_80_q0 <= W_80_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_81_q0 <= W_81_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_82_q0 <= W_82_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_83_q0 <= W_83_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_8_q0 <= W_8_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_B_9_q0 <= W_9_q0;
    grp_inference_mult_1_84_84_10_s_fu_228_ap_start <= grp_inference_mult_1_84_84_10_s_fu_228_ap_start_ap_start_reg;
    grp_inference_softmax_1_10_s_fu_430_A_0_0_q0 <= S_0_0_q0;
    grp_inference_softmax_1_10_s_fu_430_A_1_0_q0 <= S_1_0_q0;
    grp_inference_softmax_1_10_s_fu_430_A_2_0_q0 <= S_2_0_q0;
    grp_inference_softmax_1_10_s_fu_430_A_3_0_q0 <= S_3_0_q0;
    grp_inference_softmax_1_10_s_fu_430_ap_start <= grp_inference_softmax_1_10_s_fu_430_ap_start_ap_start_reg;
    grp_inference_softmax_1_10_s_fu_430_argmax_TREADY <= argmax_TREADY;
end behav;
