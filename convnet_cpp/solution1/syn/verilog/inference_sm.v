// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inference_sm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        X_0_0_address0,
        X_0_0_ce0,
        X_0_0_q0,
        X_0_0_address1,
        X_0_0_ce1,
        X_0_0_q1,
        X_1_0_address0,
        X_1_0_ce0,
        X_1_0_q0,
        X_1_0_address1,
        X_1_0_ce1,
        X_1_0_q1,
        X_2_0_address0,
        X_2_0_ce0,
        X_2_0_q0,
        X_2_0_address1,
        X_2_0_ce1,
        X_2_0_q1,
        X_3_0_address0,
        X_3_0_ce0,
        X_3_0_q0,
        X_3_0_address1,
        X_3_0_ce1,
        X_3_0_q1,
        argmax,
        argmax_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 6'b10000;
parameter    ap_ST_st8_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_CF000000 = 32'b11001111000000000000000000000000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv32_5 = 32'b101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] X_0_0_address0;
output   X_0_0_ce0;
input  [31:0] X_0_0_q0;
output  [4:0] X_0_0_address1;
output   X_0_0_ce1;
input  [31:0] X_0_0_q1;
output  [4:0] X_1_0_address0;
output   X_1_0_ce0;
input  [31:0] X_1_0_q0;
output  [4:0] X_1_0_address1;
output   X_1_0_ce1;
input  [31:0] X_1_0_q1;
output  [4:0] X_2_0_address0;
output   X_2_0_ce0;
input  [31:0] X_2_0_q0;
output  [4:0] X_2_0_address1;
output   X_2_0_ce1;
input  [31:0] X_2_0_q1;
output  [4:0] X_3_0_address0;
output   X_3_0_ce0;
input  [31:0] X_3_0_q0;
output  [4:0] X_3_0_address1;
output   X_3_0_ce1;
input  [31:0] X_3_0_q1;
output  [31:0] argmax;
output   argmax_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_0_0_ce0;
reg X_0_0_ce1;
reg X_1_0_ce0;
reg X_1_0_ce1;
reg X_2_0_ce0;
reg X_2_0_ce1;
reg X_3_0_ce0;
reg X_3_0_ce1;
reg argmax_ap_vld;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
reg   [3:0] indvar_flatten_reg_331;
reg   [0:0] i_i_reg_342;
reg   [3:0] j_i_reg_353;
wire   [0:0] exitcond_flatten_fu_575_p2;
reg   [0:0] exitcond_flatten_reg_785;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_83;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_785_pp0_it1;
wire   [3:0] indvar_flatten_next_fu_581_p2;
wire   [3:0] j_i_mid2_fu_593_p3;
reg   [3:0] j_i_mid2_reg_794;
reg   [3:0] ap_reg_ppstg_j_i_mid2_reg_794_pp0_it1;
wire   [0:0] i_i_mid2_fu_601_p2;
reg   [0:0] i_i_mid2_reg_799;
reg   [0:0] ap_reg_ppstg_i_i_mid2_reg_799_pp0_it1;
wire   [1:0] tmp_1_fu_607_p1;
reg   [1:0] tmp_1_reg_805;
wire   [3:0] j_fu_629_p2;
wire   [31:0] max_val_fu_666_p3;
reg   [31:0] max_val_reg_837;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_129;
wire    grp_inference_add_1_10_s_fu_552_ap_done;
reg   [1:0] T_0_0_address0;
reg    T_0_0_ce0;
reg    T_0_0_we0;
wire   [31:0] T_0_0_d0;
wire   [31:0] T_0_0_q0;
reg   [1:0] T_1_0_address0;
reg    T_1_0_ce0;
reg    T_1_0_we0;
wire   [31:0] T_1_0_d0;
wire   [31:0] T_1_0_q0;
reg   [0:0] T_2_0_address0;
reg    T_2_0_ce0;
reg    T_2_0_we0;
wire   [31:0] T_2_0_d0;
wire   [31:0] T_2_0_q0;
reg   [0:0] T_3_0_address0;
reg    T_3_0_ce0;
reg    T_3_0_we0;
wire   [31:0] T_3_0_d0;
wire   [31:0] T_3_0_q0;
reg   [1:0] S_0_0_address0;
reg    S_0_0_ce0;
reg    S_0_0_we0;
wire   [31:0] S_0_0_d0;
wire   [31:0] S_0_0_q0;
reg   [1:0] S_1_0_address0;
reg    S_1_0_ce0;
reg    S_1_0_we0;
wire   [31:0] S_1_0_d0;
wire   [31:0] S_1_0_q0;
reg   [0:0] S_2_0_address0;
reg    S_2_0_ce0;
reg    S_2_0_we0;
wire   [31:0] S_2_0_d0;
wire   [31:0] S_2_0_q0;
reg   [0:0] S_3_0_address0;
reg    S_3_0_ce0;
reg    S_3_0_we0;
wire   [31:0] S_3_0_d0;
wire   [31:0] S_3_0_q0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_ap_start;
wire    grp_inference_mult_1_84_84_10_s_fu_364_ap_done;
wire    grp_inference_mult_1_84_84_10_s_fu_364_ap_idle;
wire    grp_inference_mult_1_84_84_10_s_fu_364_ap_ready;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q1;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q0;
wire   [4:0] grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address1;
wire    grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce1;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q1;
wire   [1:0] grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_d0;
wire   [1:0] grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_d0;
wire   [0:0] grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_d0;
wire   [0:0] grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_address0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_ce0;
wire    grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_we0;
wire   [31:0] grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_d0;
wire    grp_inference_add_1_10_s_fu_552_ap_start;
wire    grp_inference_add_1_10_s_fu_552_ap_idle;
wire    grp_inference_add_1_10_s_fu_552_ap_ready;
wire   [1:0] grp_inference_add_1_10_s_fu_552_A_0_0_address0;
wire    grp_inference_add_1_10_s_fu_552_A_0_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_A_0_0_q0;
wire   [1:0] grp_inference_add_1_10_s_fu_552_A_1_0_address0;
wire    grp_inference_add_1_10_s_fu_552_A_1_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_A_1_0_q0;
wire   [0:0] grp_inference_add_1_10_s_fu_552_A_2_0_address0;
wire    grp_inference_add_1_10_s_fu_552_A_2_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_A_2_0_q0;
wire   [0:0] grp_inference_add_1_10_s_fu_552_A_3_0_address0;
wire    grp_inference_add_1_10_s_fu_552_A_3_0_ce0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_A_3_0_q0;
wire   [1:0] grp_inference_add_1_10_s_fu_552_C_0_0_address0;
wire    grp_inference_add_1_10_s_fu_552_C_0_0_ce0;
wire    grp_inference_add_1_10_s_fu_552_C_0_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_C_0_0_d0;
wire   [1:0] grp_inference_add_1_10_s_fu_552_C_1_0_address0;
wire    grp_inference_add_1_10_s_fu_552_C_1_0_ce0;
wire    grp_inference_add_1_10_s_fu_552_C_1_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_C_1_0_d0;
wire   [0:0] grp_inference_add_1_10_s_fu_552_C_2_0_address0;
wire    grp_inference_add_1_10_s_fu_552_C_2_0_ce0;
wire    grp_inference_add_1_10_s_fu_552_C_2_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_C_2_0_d0;
wire   [0:0] grp_inference_add_1_10_s_fu_552_C_3_0_address0;
wire    grp_inference_add_1_10_s_fu_552_C_3_0_ce0;
wire    grp_inference_add_1_10_s_fu_552_C_3_0_we0;
wire   [31:0] grp_inference_add_1_10_s_fu_552_C_3_0_d0;
reg   [0:0] i_i_phi_fu_346_p4;
reg    grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_bdd_302;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_310;
reg    grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_991;
wire   [63:0] newIndex4_i_fu_621_p1;
reg   [31:0] max_val_1_fu_244;
wire   [0:0] tmp_8_fu_758_p2;
wire   [0:0] exitcond_i_fu_587_p2;
wire   [1:0] newIndex_i_fu_611_p4;
wire   [0:0] sel_tmp_i_fu_635_p2;
wire   [0:0] sel_tmp2_i_fu_648_p2;
wire   [31:0] sel_tmp1_i_fu_640_p3;
wire   [0:0] sel_tmp4_i_fu_661_p2;
wire   [31:0] sel_tmp3_i_fu_653_p3;
wire   [31:0] max_val_3_i_to_int_fu_681_p1;
wire   [31:0] max_val_1_i_to_int_fu_698_p1;
wire   [7:0] tmp_fu_684_p4;
wire   [22:0] tmp_3_fu_694_p1;
wire   [0:0] notrhs_fu_722_p2;
wire   [0:0] notlhs_fu_716_p2;
wire   [7:0] tmp_2_fu_702_p4;
wire   [22:0] tmp_9_fu_712_p1;
wire   [0:0] notrhs2_fu_740_p2;
wire   [0:0] notlhs1_fu_734_p2;
wire   [0:0] tmp_4_fu_728_p2;
wire   [0:0] tmp_5_fu_746_p2;
wire   [0:0] tmp_6_fu_752_p2;
wire   [0:0] tmp_7_fu_566_p2;
wire   [3:0] i_cast6_i_fu_678_p1;
wire   [3:0] tmp_4_i_fu_764_p2;
wire   [4:0] tmp_7_fu_566_opcode;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_bdd_1152;
reg   [5:0] ap_NS_fsm;


inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
T_0_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_0_0_address0 ),
    .ce0( T_0_0_ce0 ),
    .we0( T_0_0_we0 ),
    .d0( T_0_0_d0 ),
    .q0( T_0_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
T_1_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_1_0_address0 ),
    .ce0( T_1_0_ce0 ),
    .we0( T_1_0_we0 ),
    .d0( T_1_0_d0 ),
    .q0( T_1_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
T_2_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_2_0_address0 ),
    .ce0( T_2_0_ce0 ),
    .we0( T_2_0_we0 ),
    .d0( T_2_0_d0 ),
    .q0( T_2_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
T_3_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( T_3_0_address0 ),
    .ce0( T_3_0_ce0 ),
    .we0( T_3_0_we0 ),
    .d0( T_3_0_d0 ),
    .q0( T_3_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
S_0_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_0_0_address0 ),
    .ce0( S_0_0_ce0 ),
    .we0( S_0_0_we0 ),
    .d0( S_0_0_d0 ),
    .q0( S_0_0_q0 )
);

inference_sm_T_0_0 #(
    .DataWidth( 32 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
S_1_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_1_0_address0 ),
    .ce0( S_1_0_ce0 ),
    .we0( S_1_0_we0 ),
    .d0( S_1_0_d0 ),
    .q0( S_1_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
S_2_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_2_0_address0 ),
    .ce0( S_2_0_ce0 ),
    .we0( S_2_0_we0 ),
    .d0( S_2_0_d0 ),
    .q0( S_2_0_q0 )
);

inference_sm_T_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
S_3_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( S_3_0_address0 ),
    .ce0( S_3_0_ce0 ),
    .we0( S_3_0_we0 ),
    .d0( S_3_0_d0 ),
    .q0( S_3_0_q0 )
);

inference_mult_1_84_84_10_s grp_inference_mult_1_84_84_10_s_fu_364(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_inference_mult_1_84_84_10_s_fu_364_ap_start ),
    .ap_done( grp_inference_mult_1_84_84_10_s_fu_364_ap_done ),
    .ap_idle( grp_inference_mult_1_84_84_10_s_fu_364_ap_idle ),
    .ap_ready( grp_inference_mult_1_84_84_10_s_fu_364_ap_ready ),
    .A_0_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address0 ),
    .A_0_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce0 ),
    .A_0_0_q0( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q0 ),
    .A_0_0_address1( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address1 ),
    .A_0_0_ce1( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce1 ),
    .A_0_0_q1( grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q1 ),
    .A_1_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address0 ),
    .A_1_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce0 ),
    .A_1_0_q0( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q0 ),
    .A_1_0_address1( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address1 ),
    .A_1_0_ce1( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce1 ),
    .A_1_0_q1( grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q1 ),
    .A_2_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address0 ),
    .A_2_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce0 ),
    .A_2_0_q0( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q0 ),
    .A_2_0_address1( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address1 ),
    .A_2_0_ce1( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce1 ),
    .A_2_0_q1( grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q1 ),
    .A_3_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address0 ),
    .A_3_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce0 ),
    .A_3_0_q0( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q0 ),
    .A_3_0_address1( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address1 ),
    .A_3_0_ce1( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce1 ),
    .A_3_0_q1( grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q1 ),
    .C_0_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_address0 ),
    .C_0_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_ce0 ),
    .C_0_0_we0( grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_we0 ),
    .C_0_0_d0( grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_d0 ),
    .C_1_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_address0 ),
    .C_1_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_ce0 ),
    .C_1_0_we0( grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_we0 ),
    .C_1_0_d0( grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_d0 ),
    .C_2_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_address0 ),
    .C_2_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_ce0 ),
    .C_2_0_we0( grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_we0 ),
    .C_2_0_d0( grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_d0 ),
    .C_3_0_address0( grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_address0 ),
    .C_3_0_ce0( grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_ce0 ),
    .C_3_0_we0( grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_we0 ),
    .C_3_0_d0( grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_d0 )
);

inference_add_1_10_s grp_inference_add_1_10_s_fu_552(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_inference_add_1_10_s_fu_552_ap_start ),
    .ap_done( grp_inference_add_1_10_s_fu_552_ap_done ),
    .ap_idle( grp_inference_add_1_10_s_fu_552_ap_idle ),
    .ap_ready( grp_inference_add_1_10_s_fu_552_ap_ready ),
    .A_0_0_address0( grp_inference_add_1_10_s_fu_552_A_0_0_address0 ),
    .A_0_0_ce0( grp_inference_add_1_10_s_fu_552_A_0_0_ce0 ),
    .A_0_0_q0( grp_inference_add_1_10_s_fu_552_A_0_0_q0 ),
    .A_1_0_address0( grp_inference_add_1_10_s_fu_552_A_1_0_address0 ),
    .A_1_0_ce0( grp_inference_add_1_10_s_fu_552_A_1_0_ce0 ),
    .A_1_0_q0( grp_inference_add_1_10_s_fu_552_A_1_0_q0 ),
    .A_2_0_address0( grp_inference_add_1_10_s_fu_552_A_2_0_address0 ),
    .A_2_0_ce0( grp_inference_add_1_10_s_fu_552_A_2_0_ce0 ),
    .A_2_0_q0( grp_inference_add_1_10_s_fu_552_A_2_0_q0 ),
    .A_3_0_address0( grp_inference_add_1_10_s_fu_552_A_3_0_address0 ),
    .A_3_0_ce0( grp_inference_add_1_10_s_fu_552_A_3_0_ce0 ),
    .A_3_0_q0( grp_inference_add_1_10_s_fu_552_A_3_0_q0 ),
    .C_0_0_address0( grp_inference_add_1_10_s_fu_552_C_0_0_address0 ),
    .C_0_0_ce0( grp_inference_add_1_10_s_fu_552_C_0_0_ce0 ),
    .C_0_0_we0( grp_inference_add_1_10_s_fu_552_C_0_0_we0 ),
    .C_0_0_d0( grp_inference_add_1_10_s_fu_552_C_0_0_d0 ),
    .C_1_0_address0( grp_inference_add_1_10_s_fu_552_C_1_0_address0 ),
    .C_1_0_ce0( grp_inference_add_1_10_s_fu_552_C_1_0_ce0 ),
    .C_1_0_we0( grp_inference_add_1_10_s_fu_552_C_1_0_we0 ),
    .C_1_0_d0( grp_inference_add_1_10_s_fu_552_C_1_0_d0 ),
    .C_2_0_address0( grp_inference_add_1_10_s_fu_552_C_2_0_address0 ),
    .C_2_0_ce0( grp_inference_add_1_10_s_fu_552_C_2_0_ce0 ),
    .C_2_0_we0( grp_inference_add_1_10_s_fu_552_C_2_0_we0 ),
    .C_2_0_d0( grp_inference_add_1_10_s_fu_552_C_2_0_d0 ),
    .C_3_0_address0( grp_inference_add_1_10_s_fu_552_C_3_0_address0 ),
    .C_3_0_ce0( grp_inference_add_1_10_s_fu_552_C_3_0_ce0 ),
    .C_3_0_we0( grp_inference_add_1_10_s_fu_552_C_3_0_we0 ),
    .C_3_0_d0( grp_inference_add_1_10_s_fu_552_C_3_0_d0 )
);

inference_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
inference_fcmp_32ns_32ns_1_1_U1931(
    .din0( max_val_reg_837 ),
    .din1( max_val_1_fu_244 ),
    .opcode( tmp_7_fu_566_opcode ),
    .dout( tmp_7_fu_566_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(exitcond_flatten_fu_575_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_inference_add_1_10_s_fu_552_ap_ready)) begin
            grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_302)) begin
            grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_inference_mult_1_84_84_10_s_fu_364_ap_ready)) begin
            grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_785 == ap_const_lv1_0))) begin
        i_i_reg_342 <= i_i_mid2_reg_799;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done))) begin
        i_i_reg_342 <= ap_const_lv1_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_331 <= indvar_flatten_next_fu_581_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done))) begin
        indvar_flatten_reg_331 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
        j_i_reg_353 <= j_fu_629_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done))) begin
        j_i_reg_353 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_lv1_0 == tmp_8_fu_758_p2))) begin
        max_val_1_fu_244 <= max_val_reg_837;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_302)) begin
        max_val_1_fu_244 <= ap_const_lv32_CF000000;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_flatten_reg_785_pp0_it1 <= exitcond_flatten_reg_785;
        ap_reg_ppstg_i_i_mid2_reg_799_pp0_it1 <= i_i_mid2_reg_799;
        ap_reg_ppstg_j_i_mid2_reg_794_pp0_it1 <= j_i_mid2_reg_794;
        exitcond_flatten_reg_785 <= exitcond_flatten_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
        i_i_mid2_reg_799 <= i_i_mid2_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_flatten_fu_575_p2 == ap_const_lv1_0))) begin
        j_i_mid2_reg_794 <= j_i_mid2_fu_593_p3;
        tmp_1_reg_805 <= tmp_1_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_flatten_reg_785 == ap_const_lv1_0))) begin
        max_val_reg_837 <= max_val_fu_666_p3;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_0_0_address0 or newIndex4_i_fu_621_p1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_0_0_address0 = newIndex4_i_fu_621_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_address0 = grp_inference_add_1_10_s_fu_552_C_0_0_address0;
    end else begin
        S_0_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_0_0_ce0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_0_0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_ce0 = grp_inference_add_1_10_s_fu_552_C_0_0_ce0;
    end else begin
        S_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_0_0_we0) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_0_0_we0 = grp_inference_add_1_10_s_fu_552_C_0_0_we0;
    end else begin
        S_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_1_0_address0 or newIndex4_i_fu_621_p1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_1_0_address0 = newIndex4_i_fu_621_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_address0 = grp_inference_add_1_10_s_fu_552_C_1_0_address0;
    end else begin
        S_1_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_1_0_ce0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_1_0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_ce0 = grp_inference_add_1_10_s_fu_552_C_1_0_ce0;
    end else begin
        S_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_1_0_we0) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_1_0_we0 = grp_inference_add_1_10_s_fu_552_C_1_0_we0;
    end else begin
        S_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_2_0_address0 or newIndex4_i_fu_621_p1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_2_0_address0 = newIndex4_i_fu_621_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_address0 = grp_inference_add_1_10_s_fu_552_C_2_0_address0;
    end else begin
        S_2_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_2_0_ce0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_2_0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_ce0 = grp_inference_add_1_10_s_fu_552_C_2_0_ce0;
    end else begin
        S_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_2_0_we0) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_2_0_we0 = grp_inference_add_1_10_s_fu_552_C_2_0_we0;
    end else begin
        S_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_3_0_address0 or newIndex4_i_fu_621_p1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_3_0_address0 = newIndex4_i_fu_621_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_address0 = grp_inference_add_1_10_s_fu_552_C_3_0_address0;
    end else begin
        S_3_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_3_0_ce0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        S_3_0_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_ce0 = grp_inference_add_1_10_s_fu_552_C_3_0_ce0;
    end else begin
        S_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_add_1_10_s_fu_552_C_3_0_we0) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S_3_0_we0 = grp_inference_add_1_10_s_fu_552_C_3_0_we0;
    end else begin
        S_3_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_address0 or grp_inference_add_1_10_s_fu_552_A_0_0_address0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_0_0_address0 = grp_inference_add_1_10_s_fu_552_A_0_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_address0;
    end else begin
        T_0_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_ce0 or grp_inference_add_1_10_s_fu_552_A_0_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_0_0_ce0 = grp_inference_add_1_10_s_fu_552_A_0_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_ce0;
    end else begin
        T_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_0_0_we0 = grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_we0;
    end else begin
        T_0_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_address0 or grp_inference_add_1_10_s_fu_552_A_1_0_address0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_1_0_address0 = grp_inference_add_1_10_s_fu_552_A_1_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_address0;
    end else begin
        T_1_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_ce0 or grp_inference_add_1_10_s_fu_552_A_1_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_1_0_ce0 = grp_inference_add_1_10_s_fu_552_A_1_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_ce0;
    end else begin
        T_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_1_0_we0 = grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_we0;
    end else begin
        T_1_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_address0 or grp_inference_add_1_10_s_fu_552_A_2_0_address0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_2_0_address0 = grp_inference_add_1_10_s_fu_552_A_2_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_address0;
    end else begin
        T_2_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_ce0 or grp_inference_add_1_10_s_fu_552_A_2_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_2_0_ce0 = grp_inference_add_1_10_s_fu_552_A_2_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_ce0;
    end else begin
        T_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_2_0_we0 = grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_we0;
    end else begin
        T_2_0_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_address0 or grp_inference_add_1_10_s_fu_552_A_3_0_address0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_3_0_address0 = grp_inference_add_1_10_s_fu_552_A_3_0_address0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_address0;
    end else begin
        T_3_0_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_ce0 or grp_inference_add_1_10_s_fu_552_A_3_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        T_3_0_ce0 = grp_inference_add_1_10_s_fu_552_A_3_0_ce0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_ce0;
    end else begin
        T_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_we0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        T_3_0_we0 = grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_we0;
    end else begin
        T_3_0_we0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_0_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce0;
    end else begin
        X_0_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_0_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce1;
    end else begin
        X_0_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_1_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce0;
    end else begin
        X_1_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_1_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce1;
    end else begin
        X_1_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_2_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce0;
    end else begin
        X_2_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_2_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce1;
    end else begin
        X_2_0_ce1 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_3_0_ce0 = grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce0;
    end else begin
        X_3_0_ce0 = ap_const_logic_0;
    end
end

always @ (grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        X_3_0_ce1 = grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce1;
    end else begin
        X_3_0_ce1 = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_st8_fsm_5) begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st8_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_83) begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_310) begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_991) begin
    if (ap_sig_bdd_991) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_129) begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1152) begin
    if (ap_sig_bdd_1152) begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it2 or tmp_8_fu_758_p2) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_lv1_0 == tmp_8_fu_758_p2))) begin
        argmax_ap_vld = ap_const_logic_1;
    end else begin
        argmax_ap_vld = ap_const_logic_0;
    end
end

always @ (i_i_reg_342 or exitcond_flatten_reg_785 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or i_i_mid2_reg_799) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_785 == ap_const_lv1_0))) begin
        i_i_phi_fu_346_p4 = i_i_mid2_reg_799;
    end else begin
        i_i_phi_fu_346_p4 = i_i_reg_342;
    end
end
always @ (ap_CS_fsm or exitcond_flatten_fu_575_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or grp_inference_add_1_10_s_fu_552_ap_done or grp_inference_mult_1_84_84_10_s_fu_364_ap_done or ap_sig_bdd_302) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_302) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_inference_mult_1_84_84_10_s_fu_364_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_logic_0 == grp_inference_add_1_10_s_fu_552_ap_done)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_575_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_575_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end
        end
        ap_ST_st8_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign S_0_0_d0 = grp_inference_add_1_10_s_fu_552_C_0_0_d0;

assign S_1_0_d0 = grp_inference_add_1_10_s_fu_552_C_1_0_d0;

assign S_2_0_d0 = grp_inference_add_1_10_s_fu_552_C_2_0_d0;

assign S_3_0_d0 = grp_inference_add_1_10_s_fu_552_C_3_0_d0;

assign T_0_0_d0 = grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_d0;

assign T_1_0_d0 = grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_d0;

assign T_2_0_d0 = grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_d0;

assign T_3_0_d0 = grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_d0;

assign X_0_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address0;

assign X_0_0_address1 = grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address1;

assign X_1_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address0;

assign X_1_0_address1 = grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address1;

assign X_2_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address0;

assign X_2_0_address1 = grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address1;

assign X_3_0_address0 = grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address0;

assign X_3_0_address1 = grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address1;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1152 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_302 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_991 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign argmax = tmp_4_i_fu_764_p2;

assign exitcond_flatten_fu_575_p2 = (indvar_flatten_reg_331 == ap_const_lv4_A? 1'b1: 1'b0);

assign exitcond_i_fu_587_p2 = (j_i_reg_353 == ap_const_lv4_A? 1'b1: 1'b0);

assign grp_inference_add_1_10_s_fu_552_A_0_0_q0 = T_0_0_q0;

assign grp_inference_add_1_10_s_fu_552_A_1_0_q0 = T_1_0_q0;

assign grp_inference_add_1_10_s_fu_552_A_2_0_q0 = T_2_0_q0;

assign grp_inference_add_1_10_s_fu_552_A_3_0_q0 = T_3_0_q0;

assign grp_inference_add_1_10_s_fu_552_ap_start = grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q0 = X_0_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q1 = X_0_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q0 = X_1_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q1 = X_1_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q0 = X_2_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q1 = X_2_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q0 = X_3_0_q0;

assign grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q1 = X_3_0_q1;

assign grp_inference_mult_1_84_84_10_s_fu_364_ap_start = grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg;

assign i_cast6_i_fu_678_p1 = ap_reg_ppstg_i_i_mid2_reg_799_pp0_it1;

assign i_i_mid2_fu_601_p2 = (exitcond_i_fu_587_p2 | i_i_phi_fu_346_p4);

assign indvar_flatten_next_fu_581_p2 = (indvar_flatten_reg_331 + ap_const_lv4_1);

assign j_fu_629_p2 = (j_i_mid2_fu_593_p3 + ap_const_lv4_1);

assign j_i_mid2_fu_593_p3 = ((exitcond_i_fu_587_p2[0:0] === 1'b1) ? ap_const_lv4_0 : j_i_reg_353);

assign max_val_1_i_to_int_fu_698_p1 = max_val_1_fu_244;

assign max_val_3_i_to_int_fu_681_p1 = max_val_reg_837;

assign max_val_fu_666_p3 = ((sel_tmp4_i_fu_661_p2[0:0] === 1'b1) ? S_2_0_q0 : sel_tmp3_i_fu_653_p3);

assign newIndex4_i_fu_621_p1 = newIndex_i_fu_611_p4;

assign newIndex_i_fu_611_p4 = {{j_i_mid2_fu_593_p3[ap_const_lv32_3 : ap_const_lv32_2]}};

assign notlhs1_fu_734_p2 = (tmp_2_fu_702_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_716_p2 = (tmp_fu_684_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs2_fu_740_p2 = (tmp_9_fu_712_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_722_p2 = (tmp_3_fu_694_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign sel_tmp1_i_fu_640_p3 = ((sel_tmp_i_fu_635_p2[0:0] === 1'b1) ? S_0_0_q0 : S_3_0_q0);

assign sel_tmp2_i_fu_648_p2 = (tmp_1_reg_805 == ap_const_lv2_1? 1'b1: 1'b0);

assign sel_tmp3_i_fu_653_p3 = ((sel_tmp2_i_fu_648_p2[0:0] === 1'b1) ? S_1_0_q0 : sel_tmp1_i_fu_640_p3);

assign sel_tmp4_i_fu_661_p2 = (tmp_1_reg_805 == ap_const_lv2_2? 1'b1: 1'b0);

assign sel_tmp_i_fu_635_p2 = (tmp_1_reg_805 == ap_const_lv2_0? 1'b1: 1'b0);

assign tmp_1_fu_607_p1 = j_i_mid2_fu_593_p3[1:0];

assign tmp_2_fu_702_p4 = {{max_val_1_i_to_int_fu_698_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_3_fu_694_p1 = max_val_3_i_to_int_fu_681_p1[22:0];

assign tmp_4_fu_728_p2 = (notrhs_fu_722_p2 | notlhs_fu_716_p2);

assign tmp_4_i_fu_764_p2 = (ap_reg_ppstg_j_i_mid2_reg_794_pp0_it1 + i_cast6_i_fu_678_p1);

assign tmp_5_fu_746_p2 = (notrhs2_fu_740_p2 | notlhs1_fu_734_p2);

assign tmp_6_fu_752_p2 = (tmp_4_fu_728_p2 & tmp_5_fu_746_p2);

assign tmp_7_fu_566_opcode = ap_const_lv5_2;

assign tmp_8_fu_758_p2 = (tmp_6_fu_752_p2 & tmp_7_fu_566_p2);

assign tmp_9_fu_712_p1 = max_val_1_i_to_int_fu_698_p1[22:0];

assign tmp_fu_684_p4 = {{max_val_3_i_to_int_fu_681_p1[ap_const_lv32_1E : ap_const_lv32_17]}};


endmodule //inference_sm

