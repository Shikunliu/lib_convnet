// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _inference_Loop_1_proc_HH_
#define _inference_Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "inference_urem_5ns_4ns_5_9.h"

namespace ap_rtl {

struct inference_Loop_1_proc : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > inputImage_address0;
    sc_out< sc_logic > inputImage_ce0;
    sc_in< sc_lv<32> > inputImage_q0;
    sc_out< sc_lv<6> > x_in_0_0_0_address0;
    sc_out< sc_logic > x_in_0_0_0_ce0;
    sc_out< sc_logic > x_in_0_0_0_we0;
    sc_out< sc_lv<32> > x_in_0_0_0_d0;
    sc_out< sc_lv<6> > x_in_0_1_0_address0;
    sc_out< sc_logic > x_in_0_1_0_ce0;
    sc_out< sc_logic > x_in_0_1_0_we0;
    sc_out< sc_lv<32> > x_in_0_1_0_d0;
    sc_out< sc_lv<6> > x_in_0_2_0_address0;
    sc_out< sc_logic > x_in_0_2_0_ce0;
    sc_out< sc_logic > x_in_0_2_0_we0;
    sc_out< sc_lv<32> > x_in_0_2_0_d0;
    sc_out< sc_lv<5> > x_in_0_3_0_address0;
    sc_out< sc_logic > x_in_0_3_0_ce0;
    sc_out< sc_logic > x_in_0_3_0_we0;
    sc_out< sc_lv<32> > x_in_0_3_0_d0;
    sc_out< sc_lv<5> > x_in_0_4_0_address0;
    sc_out< sc_logic > x_in_0_4_0_ce0;
    sc_out< sc_logic > x_in_0_4_0_we0;
    sc_out< sc_lv<32> > x_in_0_4_0_d0;
    sc_out< sc_lv<6> > x_in_1_0_0_address0;
    sc_out< sc_logic > x_in_1_0_0_ce0;
    sc_out< sc_logic > x_in_1_0_0_we0;
    sc_out< sc_lv<32> > x_in_1_0_0_d0;
    sc_out< sc_lv<6> > x_in_1_1_0_address0;
    sc_out< sc_logic > x_in_1_1_0_ce0;
    sc_out< sc_logic > x_in_1_1_0_we0;
    sc_out< sc_lv<32> > x_in_1_1_0_d0;
    sc_out< sc_lv<6> > x_in_1_2_0_address0;
    sc_out< sc_logic > x_in_1_2_0_ce0;
    sc_out< sc_logic > x_in_1_2_0_we0;
    sc_out< sc_lv<32> > x_in_1_2_0_d0;
    sc_out< sc_lv<5> > x_in_1_3_0_address0;
    sc_out< sc_logic > x_in_1_3_0_ce0;
    sc_out< sc_logic > x_in_1_3_0_we0;
    sc_out< sc_lv<32> > x_in_1_3_0_d0;
    sc_out< sc_lv<5> > x_in_1_4_0_address0;
    sc_out< sc_logic > x_in_1_4_0_ce0;
    sc_out< sc_logic > x_in_1_4_0_we0;
    sc_out< sc_lv<32> > x_in_1_4_0_d0;
    sc_out< sc_lv<6> > x_in_2_0_0_address0;
    sc_out< sc_logic > x_in_2_0_0_ce0;
    sc_out< sc_logic > x_in_2_0_0_we0;
    sc_out< sc_lv<32> > x_in_2_0_0_d0;
    sc_out< sc_lv<6> > x_in_2_1_0_address0;
    sc_out< sc_logic > x_in_2_1_0_ce0;
    sc_out< sc_logic > x_in_2_1_0_we0;
    sc_out< sc_lv<32> > x_in_2_1_0_d0;
    sc_out< sc_lv<6> > x_in_2_2_0_address0;
    sc_out< sc_logic > x_in_2_2_0_ce0;
    sc_out< sc_logic > x_in_2_2_0_we0;
    sc_out< sc_lv<32> > x_in_2_2_0_d0;
    sc_out< sc_lv<5> > x_in_2_3_0_address0;
    sc_out< sc_logic > x_in_2_3_0_ce0;
    sc_out< sc_logic > x_in_2_3_0_we0;
    sc_out< sc_lv<32> > x_in_2_3_0_d0;
    sc_out< sc_lv<5> > x_in_2_4_0_address0;
    sc_out< sc_logic > x_in_2_4_0_ce0;
    sc_out< sc_logic > x_in_2_4_0_we0;
    sc_out< sc_lv<32> > x_in_2_4_0_d0;
    sc_out< sc_lv<5> > x_in_3_0_0_address0;
    sc_out< sc_logic > x_in_3_0_0_ce0;
    sc_out< sc_logic > x_in_3_0_0_we0;
    sc_out< sc_lv<32> > x_in_3_0_0_d0;
    sc_out< sc_lv<5> > x_in_3_1_0_address0;
    sc_out< sc_logic > x_in_3_1_0_ce0;
    sc_out< sc_logic > x_in_3_1_0_we0;
    sc_out< sc_lv<32> > x_in_3_1_0_d0;
    sc_out< sc_lv<5> > x_in_3_2_0_address0;
    sc_out< sc_logic > x_in_3_2_0_ce0;
    sc_out< sc_logic > x_in_3_2_0_we0;
    sc_out< sc_lv<32> > x_in_3_2_0_d0;
    sc_out< sc_lv<5> > x_in_3_3_0_address0;
    sc_out< sc_logic > x_in_3_3_0_ce0;
    sc_out< sc_logic > x_in_3_3_0_we0;
    sc_out< sc_lv<32> > x_in_3_3_0_d0;
    sc_out< sc_lv<5> > x_in_3_4_0_address0;
    sc_out< sc_logic > x_in_3_4_0_ce0;
    sc_out< sc_logic > x_in_3_4_0_we0;
    sc_out< sc_lv<32> > x_in_3_4_0_d0;
    sc_out< sc_lv<5> > x_in_4_0_0_address0;
    sc_out< sc_logic > x_in_4_0_0_ce0;
    sc_out< sc_logic > x_in_4_0_0_we0;
    sc_out< sc_lv<32> > x_in_4_0_0_d0;
    sc_out< sc_lv<5> > x_in_4_1_0_address0;
    sc_out< sc_logic > x_in_4_1_0_ce0;
    sc_out< sc_logic > x_in_4_1_0_we0;
    sc_out< sc_lv<32> > x_in_4_1_0_d0;
    sc_out< sc_lv<5> > x_in_4_2_0_address0;
    sc_out< sc_logic > x_in_4_2_0_ce0;
    sc_out< sc_logic > x_in_4_2_0_we0;
    sc_out< sc_lv<32> > x_in_4_2_0_d0;
    sc_out< sc_lv<5> > x_in_4_3_0_address0;
    sc_out< sc_logic > x_in_4_3_0_ce0;
    sc_out< sc_logic > x_in_4_3_0_we0;
    sc_out< sc_lv<32> > x_in_4_3_0_d0;
    sc_out< sc_lv<5> > x_in_4_4_0_address0;
    sc_out< sc_logic > x_in_4_4_0_ce0;
    sc_out< sc_logic > x_in_4_4_0_we0;
    sc_out< sc_lv<32> > x_in_4_4_0_d0;


    // Module declarations
    inference_Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(inference_Loop_1_proc);

    ~inference_Loop_1_proc();

    sc_trace_file* mVcdFile;

    inference_urem_5ns_4ns_5_9<1,9,5,4,5>* inference_urem_5ns_4ns_5_9_U1;
    inference_urem_5ns_4ns_5_9<1,9,5,4,5>* inference_urem_5ns_4ns_5_9_U2;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<10> > indvar_flatten_reg_465;
    sc_signal< sc_lv<5> > i_0_i_i_reg_476;
    sc_signal< sc_lv<5> > j_0_i_i_reg_487;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_498_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_748;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_222;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it8;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_748_pp0_it6;
    sc_signal< sc_lv<10> > indvar_flatten_next_fu_504_p2;
    sc_signal< sc_lv<5> > j_0_i_i_mid2_fu_522_p3;
    sc_signal< sc_lv<5> > j_0_i_i_mid2_reg_757;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it1;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it2;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it3;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it4;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it5;
    sc_signal< sc_lv<5> > ap_reg_ppstg_j_0_i_i_mid2_reg_757_pp0_it6;
    sc_signal< sc_lv<5> > i_0_i_i_mid2_fu_530_p3;
    sc_signal< sc_lv<5> > i_0_i_i_mid2_reg_764;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it1;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it2;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it3;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it4;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it5;
    sc_signal< sc_lv<5> > ap_reg_ppstg_i_0_i_i_mid2_reg_764_pp0_it6;
    sc_signal< sc_lv<5> > j_fu_550_p2;
    sc_signal< sc_lv<4> > tmp_1104_reg_778;
    sc_signal< sc_lv<4> > tmp_1113_reg_791;
    sc_signal< bool > ap_sig_bdd_289;
    sc_signal< sc_lv<5> > i_0_i_i_phi_fu_480_p4;
    sc_signal< sc_lv<64> > tmp_1138_cast_fu_612_p1;
    sc_signal< sc_lv<64> > tmp_1139_cast_fu_709_p1;
    sc_signal< sc_lv<64> > tmp_1140_cast_fu_734_p1;
    sc_signal< sc_lv<4> > tmp_1103_fu_636_p1;
    sc_signal< sc_lv<4> > tmp_1112_fu_688_p1;
    sc_signal< sc_lv<1> > exitcond4_i_i9_fu_516_p2;
    sc_signal< sc_lv<5> > i_fu_510_p2;
    sc_signal< sc_lv<5> > grp_fu_538_p0;
    sc_signal< sc_lv<4> > grp_fu_538_p1;
    sc_signal< sc_lv<4> > grp_fu_544_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_556_p3;
    sc_signal< sc_lv<7> > tmp_1101_fu_567_p3;
    sc_signal< sc_lv<11> > p_shl6_cast_fu_563_p1;
    sc_signal< sc_lv<11> > p_shl7_cast_fu_574_p1;
    sc_signal< sc_lv<5> > mul4_fu_587_p1;
    sc_signal< sc_lv<12> > mul4_fu_587_p2;
    sc_signal< sc_lv<11> > tmp_1102_fu_578_p2;
    sc_signal< sc_lv<11> > tmp_22_i_cast_fu_603_p1;
    sc_signal< sc_lv<11> > tmp_1111_fu_606_p2;
    sc_signal< sc_lv<5> > mul_fu_620_p1;
    sc_signal< sc_lv<12> > mul_fu_620_p2;
    sc_signal< sc_lv<5> > grp_fu_538_p2;
    sc_signal< sc_lv<5> > newIndex_fu_640_p1;
    sc_signal< sc_lv<5> > tmp_1106_fu_654_p3;
    sc_signal< sc_lv<6> > tmp_1107_fu_661_p1;
    sc_signal< sc_lv<7> > tmp_1105_fu_647_p3;
    sc_signal< sc_lv<7> > p_shl2_cast_fu_665_p1;
    sc_signal< sc_lv<6> > newIndex2_cast_fu_643_p1;
    sc_signal< sc_lv<6> > tmp_1109_fu_675_p3;
    sc_signal< sc_lv<5> > grp_fu_544_p2;
    sc_signal< sc_lv<5> > newIndex8_fu_692_p1;
    sc_signal< sc_lv<7> > tmp_1108_fu_669_p2;
    sc_signal< sc_lv<7> > newIndex9_cast_fu_699_p1;
    sc_signal< sc_lv<7> > tmp_1114_fu_703_p2;
    sc_signal< sc_lv<6> > tmp_1110_fu_682_p2;
    sc_signal< sc_lv<6> > newIndex9_cast1_fu_695_p1;
    sc_signal< sc_lv<6> > tmp_1115_fu_728_p2;
    sc_signal< sc_logic > grp_fu_538_ce;
    sc_signal< sc_logic > grp_fu_544_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_2;
    sc_signal< bool > ap_sig_bdd_606;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<12> > mul4_fu_587_p10;
    sc_signal< sc_lv<12> > mul_fu_620_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st11_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<12> ap_const_lv12_34;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_222();
    void thread_ap_sig_bdd_289();
    void thread_ap_sig_bdd_606();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st11_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_exitcond4_i_i9_fu_516_p2();
    void thread_exitcond_flatten_fu_498_p2();
    void thread_grp_fu_538_ce();
    void thread_grp_fu_538_p0();
    void thread_grp_fu_538_p1();
    void thread_grp_fu_544_ce();
    void thread_grp_fu_544_p1();
    void thread_i_0_i_i_mid2_fu_530_p3();
    void thread_i_0_i_i_phi_fu_480_p4();
    void thread_i_fu_510_p2();
    void thread_indvar_flatten_next_fu_504_p2();
    void thread_inputImage_address0();
    void thread_inputImage_ce0();
    void thread_j_0_i_i_mid2_fu_522_p3();
    void thread_j_fu_550_p2();
    void thread_mul4_fu_587_p1();
    void thread_mul4_fu_587_p10();
    void thread_mul4_fu_587_p2();
    void thread_mul_fu_620_p1();
    void thread_mul_fu_620_p10();
    void thread_mul_fu_620_p2();
    void thread_newIndex2_cast_fu_643_p1();
    void thread_newIndex8_fu_692_p1();
    void thread_newIndex9_cast1_fu_695_p1();
    void thread_newIndex9_cast_fu_699_p1();
    void thread_newIndex_fu_640_p1();
    void thread_p_shl2_cast_fu_665_p1();
    void thread_p_shl6_cast_fu_563_p1();
    void thread_p_shl7_cast_fu_574_p1();
    void thread_tmp_1101_fu_567_p3();
    void thread_tmp_1102_fu_578_p2();
    void thread_tmp_1103_fu_636_p1();
    void thread_tmp_1105_fu_647_p3();
    void thread_tmp_1106_fu_654_p3();
    void thread_tmp_1107_fu_661_p1();
    void thread_tmp_1108_fu_669_p2();
    void thread_tmp_1109_fu_675_p3();
    void thread_tmp_1110_fu_682_p2();
    void thread_tmp_1111_fu_606_p2();
    void thread_tmp_1112_fu_688_p1();
    void thread_tmp_1114_fu_703_p2();
    void thread_tmp_1115_fu_728_p2();
    void thread_tmp_1138_cast_fu_612_p1();
    void thread_tmp_1139_cast_fu_709_p1();
    void thread_tmp_1140_cast_fu_734_p1();
    void thread_tmp_22_i_cast_fu_603_p1();
    void thread_tmp_s_fu_556_p3();
    void thread_x_in_0_0_0_address0();
    void thread_x_in_0_0_0_ce0();
    void thread_x_in_0_0_0_d0();
    void thread_x_in_0_0_0_we0();
    void thread_x_in_0_1_0_address0();
    void thread_x_in_0_1_0_ce0();
    void thread_x_in_0_1_0_d0();
    void thread_x_in_0_1_0_we0();
    void thread_x_in_0_2_0_address0();
    void thread_x_in_0_2_0_ce0();
    void thread_x_in_0_2_0_d0();
    void thread_x_in_0_2_0_we0();
    void thread_x_in_0_3_0_address0();
    void thread_x_in_0_3_0_ce0();
    void thread_x_in_0_3_0_d0();
    void thread_x_in_0_3_0_we0();
    void thread_x_in_0_4_0_address0();
    void thread_x_in_0_4_0_ce0();
    void thread_x_in_0_4_0_d0();
    void thread_x_in_0_4_0_we0();
    void thread_x_in_1_0_0_address0();
    void thread_x_in_1_0_0_ce0();
    void thread_x_in_1_0_0_d0();
    void thread_x_in_1_0_0_we0();
    void thread_x_in_1_1_0_address0();
    void thread_x_in_1_1_0_ce0();
    void thread_x_in_1_1_0_d0();
    void thread_x_in_1_1_0_we0();
    void thread_x_in_1_2_0_address0();
    void thread_x_in_1_2_0_ce0();
    void thread_x_in_1_2_0_d0();
    void thread_x_in_1_2_0_we0();
    void thread_x_in_1_3_0_address0();
    void thread_x_in_1_3_0_ce0();
    void thread_x_in_1_3_0_d0();
    void thread_x_in_1_3_0_we0();
    void thread_x_in_1_4_0_address0();
    void thread_x_in_1_4_0_ce0();
    void thread_x_in_1_4_0_d0();
    void thread_x_in_1_4_0_we0();
    void thread_x_in_2_0_0_address0();
    void thread_x_in_2_0_0_ce0();
    void thread_x_in_2_0_0_d0();
    void thread_x_in_2_0_0_we0();
    void thread_x_in_2_1_0_address0();
    void thread_x_in_2_1_0_ce0();
    void thread_x_in_2_1_0_d0();
    void thread_x_in_2_1_0_we0();
    void thread_x_in_2_2_0_address0();
    void thread_x_in_2_2_0_ce0();
    void thread_x_in_2_2_0_d0();
    void thread_x_in_2_2_0_we0();
    void thread_x_in_2_3_0_address0();
    void thread_x_in_2_3_0_ce0();
    void thread_x_in_2_3_0_d0();
    void thread_x_in_2_3_0_we0();
    void thread_x_in_2_4_0_address0();
    void thread_x_in_2_4_0_ce0();
    void thread_x_in_2_4_0_d0();
    void thread_x_in_2_4_0_we0();
    void thread_x_in_3_0_0_address0();
    void thread_x_in_3_0_0_ce0();
    void thread_x_in_3_0_0_d0();
    void thread_x_in_3_0_0_we0();
    void thread_x_in_3_1_0_address0();
    void thread_x_in_3_1_0_ce0();
    void thread_x_in_3_1_0_d0();
    void thread_x_in_3_1_0_we0();
    void thread_x_in_3_2_0_address0();
    void thread_x_in_3_2_0_ce0();
    void thread_x_in_3_2_0_d0();
    void thread_x_in_3_2_0_we0();
    void thread_x_in_3_3_0_address0();
    void thread_x_in_3_3_0_ce0();
    void thread_x_in_3_3_0_d0();
    void thread_x_in_3_3_0_we0();
    void thread_x_in_3_4_0_address0();
    void thread_x_in_3_4_0_ce0();
    void thread_x_in_3_4_0_d0();
    void thread_x_in_3_4_0_we0();
    void thread_x_in_4_0_0_address0();
    void thread_x_in_4_0_0_ce0();
    void thread_x_in_4_0_0_d0();
    void thread_x_in_4_0_0_we0();
    void thread_x_in_4_1_0_address0();
    void thread_x_in_4_1_0_ce0();
    void thread_x_in_4_1_0_d0();
    void thread_x_in_4_1_0_we0();
    void thread_x_in_4_2_0_address0();
    void thread_x_in_4_2_0_ce0();
    void thread_x_in_4_2_0_d0();
    void thread_x_in_4_2_0_we0();
    void thread_x_in_4_3_0_address0();
    void thread_x_in_4_3_0_ce0();
    void thread_x_in_4_3_0_d0();
    void thread_x_in_4_3_0_we0();
    void thread_x_in_4_4_0_address0();
    void thread_x_in_4_4_0_ce0();
    void thread_x_in_4_4_0_d0();
    void thread_x_in_4_4_0_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
