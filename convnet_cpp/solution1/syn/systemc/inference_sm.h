// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _inference_sm_HH_
#define _inference_sm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "inference_mult_1_84_84_10_s.h"
#include "inference_add_1_10_s.h"
#include "inference_fcmp_32ns_32ns_1_1.h"
#include "inference_sm_T_0_0.h"
#include "inference_sm_T_2_0.h"

namespace ap_rtl {

struct inference_sm : public sc_module {
    // Port declarations 33
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > X_0_0_address0;
    sc_out< sc_logic > X_0_0_ce0;
    sc_in< sc_lv<32> > X_0_0_q0;
    sc_out< sc_lv<5> > X_0_0_address1;
    sc_out< sc_logic > X_0_0_ce1;
    sc_in< sc_lv<32> > X_0_0_q1;
    sc_out< sc_lv<5> > X_1_0_address0;
    sc_out< sc_logic > X_1_0_ce0;
    sc_in< sc_lv<32> > X_1_0_q0;
    sc_out< sc_lv<5> > X_1_0_address1;
    sc_out< sc_logic > X_1_0_ce1;
    sc_in< sc_lv<32> > X_1_0_q1;
    sc_out< sc_lv<5> > X_2_0_address0;
    sc_out< sc_logic > X_2_0_ce0;
    sc_in< sc_lv<32> > X_2_0_q0;
    sc_out< sc_lv<5> > X_2_0_address1;
    sc_out< sc_logic > X_2_0_ce1;
    sc_in< sc_lv<32> > X_2_0_q1;
    sc_out< sc_lv<5> > X_3_0_address0;
    sc_out< sc_logic > X_3_0_ce0;
    sc_in< sc_lv<32> > X_3_0_q0;
    sc_out< sc_lv<5> > X_3_0_address1;
    sc_out< sc_logic > X_3_0_ce1;
    sc_in< sc_lv<32> > X_3_0_q1;
    sc_out< sc_lv<32> > argmax;
    sc_out< sc_logic > argmax_ap_vld;


    // Module declarations
    inference_sm(sc_module_name name);
    SC_HAS_PROCESS(inference_sm);

    ~inference_sm();

    sc_trace_file* mVcdFile;

    inference_sm_T_0_0* T_0_0_U;
    inference_sm_T_0_0* T_1_0_U;
    inference_sm_T_2_0* T_2_0_U;
    inference_sm_T_2_0* T_3_0_U;
    inference_sm_T_0_0* S_0_0_U;
    inference_sm_T_0_0* S_1_0_U;
    inference_sm_T_2_0* S_2_0_U;
    inference_sm_T_2_0* S_3_0_U;
    inference_mult_1_84_84_10_s* grp_inference_mult_1_84_84_10_s_fu_364;
    inference_add_1_10_s* grp_inference_add_1_10_s_fu_552;
    inference_fcmp_32ns_32ns_1_1<1,1,32,32,1>* inference_fcmp_32ns_32ns_1_1_U1931;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_25;
    sc_signal< sc_lv<4> > indvar_flatten_reg_331;
    sc_signal< sc_lv<1> > i_i_reg_342;
    sc_signal< sc_lv<4> > j_i_reg_353;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_575_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_785;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_4;
    sc_signal< bool > ap_sig_bdd_83;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_785_pp0_it1;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_581_p2;
    sc_signal< sc_lv<4> > j_i_mid2_fu_593_p3;
    sc_signal< sc_lv<4> > j_i_mid2_reg_794;
    sc_signal< sc_lv<4> > ap_reg_ppstg_j_i_mid2_reg_794_pp0_it1;
    sc_signal< sc_lv<1> > i_i_mid2_fu_601_p2;
    sc_signal< sc_lv<1> > i_i_mid2_reg_799;
    sc_signal< sc_lv<1> > ap_reg_ppstg_i_i_mid2_reg_799_pp0_it1;
    sc_signal< sc_lv<2> > tmp_1_fu_607_p1;
    sc_signal< sc_lv<2> > tmp_1_reg_805;
    sc_signal< sc_lv<4> > j_fu_629_p2;
    sc_signal< sc_lv<32> > max_val_fu_666_p3;
    sc_signal< sc_lv<32> > max_val_reg_837;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_129;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_ap_done;
    sc_signal< sc_lv<2> > T_0_0_address0;
    sc_signal< sc_logic > T_0_0_ce0;
    sc_signal< sc_logic > T_0_0_we0;
    sc_signal< sc_lv<32> > T_0_0_d0;
    sc_signal< sc_lv<32> > T_0_0_q0;
    sc_signal< sc_lv<2> > T_1_0_address0;
    sc_signal< sc_logic > T_1_0_ce0;
    sc_signal< sc_logic > T_1_0_we0;
    sc_signal< sc_lv<32> > T_1_0_d0;
    sc_signal< sc_lv<32> > T_1_0_q0;
    sc_signal< sc_lv<1> > T_2_0_address0;
    sc_signal< sc_logic > T_2_0_ce0;
    sc_signal< sc_logic > T_2_0_we0;
    sc_signal< sc_lv<32> > T_2_0_d0;
    sc_signal< sc_lv<32> > T_2_0_q0;
    sc_signal< sc_lv<1> > T_3_0_address0;
    sc_signal< sc_logic > T_3_0_ce0;
    sc_signal< sc_logic > T_3_0_we0;
    sc_signal< sc_lv<32> > T_3_0_d0;
    sc_signal< sc_lv<32> > T_3_0_q0;
    sc_signal< sc_lv<2> > S_0_0_address0;
    sc_signal< sc_logic > S_0_0_ce0;
    sc_signal< sc_logic > S_0_0_we0;
    sc_signal< sc_lv<32> > S_0_0_d0;
    sc_signal< sc_lv<32> > S_0_0_q0;
    sc_signal< sc_lv<2> > S_1_0_address0;
    sc_signal< sc_logic > S_1_0_ce0;
    sc_signal< sc_logic > S_1_0_we0;
    sc_signal< sc_lv<32> > S_1_0_d0;
    sc_signal< sc_lv<32> > S_1_0_q0;
    sc_signal< sc_lv<1> > S_2_0_address0;
    sc_signal< sc_logic > S_2_0_ce0;
    sc_signal< sc_logic > S_2_0_we0;
    sc_signal< sc_lv<32> > S_2_0_d0;
    sc_signal< sc_lv<32> > S_2_0_q0;
    sc_signal< sc_lv<1> > S_3_0_address0;
    sc_signal< sc_logic > S_3_0_ce0;
    sc_signal< sc_logic > S_3_0_we0;
    sc_signal< sc_lv<32> > S_3_0_d0;
    sc_signal< sc_lv<32> > S_3_0_q0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_ap_start;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_ap_done;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_ap_idle;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_ap_ready;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q0;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_address1;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_ce1;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q1;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q0;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_address1;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_ce1;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q1;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q0;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_address1;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_ce1;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q1;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q0;
    sc_signal< sc_lv<5> > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_address1;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_ce1;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q1;
    sc_signal< sc_lv<2> > grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_ce0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_we0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_C_0_0_d0;
    sc_signal< sc_lv<2> > grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_ce0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_we0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_C_1_0_d0;
    sc_signal< sc_lv<1> > grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_ce0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_we0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_C_2_0_d0;
    sc_signal< sc_lv<1> > grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_address0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_ce0;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_we0;
    sc_signal< sc_lv<32> > grp_inference_mult_1_84_84_10_s_fu_364_C_3_0_d0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_ap_start;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_ap_idle;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_ap_ready;
    sc_signal< sc_lv<2> > grp_inference_add_1_10_s_fu_552_A_0_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_A_0_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_A_0_0_q0;
    sc_signal< sc_lv<2> > grp_inference_add_1_10_s_fu_552_A_1_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_A_1_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_A_1_0_q0;
    sc_signal< sc_lv<1> > grp_inference_add_1_10_s_fu_552_A_2_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_A_2_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_A_2_0_q0;
    sc_signal< sc_lv<1> > grp_inference_add_1_10_s_fu_552_A_3_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_A_3_0_ce0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_A_3_0_q0;
    sc_signal< sc_lv<2> > grp_inference_add_1_10_s_fu_552_C_0_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_0_0_ce0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_0_0_we0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_C_0_0_d0;
    sc_signal< sc_lv<2> > grp_inference_add_1_10_s_fu_552_C_1_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_1_0_ce0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_1_0_we0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_C_1_0_d0;
    sc_signal< sc_lv<1> > grp_inference_add_1_10_s_fu_552_C_2_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_2_0_ce0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_2_0_we0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_C_2_0_d0;
    sc_signal< sc_lv<1> > grp_inference_add_1_10_s_fu_552_C_3_0_address0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_3_0_ce0;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_C_3_0_we0;
    sc_signal< sc_lv<32> > grp_inference_add_1_10_s_fu_552_C_3_0_d0;
    sc_signal< sc_lv<1> > i_i_phi_fu_346_p4;
    sc_signal< sc_logic > grp_inference_mult_1_84_84_10_s_fu_364_ap_start_ap_start_reg;
    sc_signal< bool > ap_sig_bdd_302;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_310;
    sc_signal< sc_logic > grp_inference_add_1_10_s_fu_552_ap_start_ap_start_reg;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_991;
    sc_signal< sc_lv<64> > newIndex4_i_fu_621_p1;
    sc_signal< sc_lv<32> > max_val_1_fu_244;
    sc_signal< sc_lv<1> > tmp_8_fu_758_p2;
    sc_signal< sc_lv<1> > exitcond_i_fu_587_p2;
    sc_signal< sc_lv<2> > newIndex_i_fu_611_p4;
    sc_signal< sc_lv<1> > sel_tmp_i_fu_635_p2;
    sc_signal< sc_lv<1> > sel_tmp2_i_fu_648_p2;
    sc_signal< sc_lv<32> > sel_tmp1_i_fu_640_p3;
    sc_signal< sc_lv<1> > sel_tmp4_i_fu_661_p2;
    sc_signal< sc_lv<32> > sel_tmp3_i_fu_653_p3;
    sc_signal< sc_lv<32> > max_val_3_i_to_int_fu_681_p1;
    sc_signal< sc_lv<32> > max_val_1_i_to_int_fu_698_p1;
    sc_signal< sc_lv<8> > tmp_fu_684_p4;
    sc_signal< sc_lv<23> > tmp_3_fu_694_p1;
    sc_signal< sc_lv<1> > notrhs_fu_722_p2;
    sc_signal< sc_lv<1> > notlhs_fu_716_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_702_p4;
    sc_signal< sc_lv<23> > tmp_9_fu_712_p1;
    sc_signal< sc_lv<1> > notrhs2_fu_740_p2;
    sc_signal< sc_lv<1> > notlhs1_fu_734_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_728_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_746_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_752_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_566_p2;
    sc_signal< sc_lv<4> > i_cast6_i_fu_678_p1;
    sc_signal< sc_lv<4> > tmp_4_i_fu_764_p2;
    sc_signal< sc_lv<5> > tmp_7_fu_566_opcode;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_5;
    sc_signal< bool > ap_sig_bdd_1152;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_pp0_stg0_fsm_4;
    static const sc_lv<6> ap_ST_st8_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_CF000000;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_S_0_0_address0();
    void thread_S_0_0_ce0();
    void thread_S_0_0_d0();
    void thread_S_0_0_we0();
    void thread_S_1_0_address0();
    void thread_S_1_0_ce0();
    void thread_S_1_0_d0();
    void thread_S_1_0_we0();
    void thread_S_2_0_address0();
    void thread_S_2_0_ce0();
    void thread_S_2_0_d0();
    void thread_S_2_0_we0();
    void thread_S_3_0_address0();
    void thread_S_3_0_ce0();
    void thread_S_3_0_d0();
    void thread_S_3_0_we0();
    void thread_T_0_0_address0();
    void thread_T_0_0_ce0();
    void thread_T_0_0_d0();
    void thread_T_0_0_we0();
    void thread_T_1_0_address0();
    void thread_T_1_0_ce0();
    void thread_T_1_0_d0();
    void thread_T_1_0_we0();
    void thread_T_2_0_address0();
    void thread_T_2_0_ce0();
    void thread_T_2_0_d0();
    void thread_T_2_0_we0();
    void thread_T_3_0_address0();
    void thread_T_3_0_ce0();
    void thread_T_3_0_d0();
    void thread_T_3_0_we0();
    void thread_X_0_0_address0();
    void thread_X_0_0_address1();
    void thread_X_0_0_ce0();
    void thread_X_0_0_ce1();
    void thread_X_1_0_address0();
    void thread_X_1_0_address1();
    void thread_X_1_0_ce0();
    void thread_X_1_0_ce1();
    void thread_X_2_0_address0();
    void thread_X_2_0_address1();
    void thread_X_2_0_ce0();
    void thread_X_2_0_ce1();
    void thread_X_3_0_address0();
    void thread_X_3_0_address1();
    void thread_X_3_0_ce0();
    void thread_X_3_0_ce1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_1152();
    void thread_ap_sig_bdd_129();
    void thread_ap_sig_bdd_25();
    void thread_ap_sig_bdd_302();
    void thread_ap_sig_bdd_310();
    void thread_ap_sig_bdd_83();
    void thread_ap_sig_bdd_991();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st8_fsm_5();
    void thread_argmax();
    void thread_argmax_ap_vld();
    void thread_exitcond_flatten_fu_575_p2();
    void thread_exitcond_i_fu_587_p2();
    void thread_grp_inference_add_1_10_s_fu_552_A_0_0_q0();
    void thread_grp_inference_add_1_10_s_fu_552_A_1_0_q0();
    void thread_grp_inference_add_1_10_s_fu_552_A_2_0_q0();
    void thread_grp_inference_add_1_10_s_fu_552_A_3_0_q0();
    void thread_grp_inference_add_1_10_s_fu_552_ap_start();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q0();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_0_0_q1();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q0();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_1_0_q1();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q0();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_2_0_q1();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q0();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_A_3_0_q1();
    void thread_grp_inference_mult_1_84_84_10_s_fu_364_ap_start();
    void thread_i_cast6_i_fu_678_p1();
    void thread_i_i_mid2_fu_601_p2();
    void thread_i_i_phi_fu_346_p4();
    void thread_indvar_flatten_next_fu_581_p2();
    void thread_j_fu_629_p2();
    void thread_j_i_mid2_fu_593_p3();
    void thread_max_val_1_i_to_int_fu_698_p1();
    void thread_max_val_3_i_to_int_fu_681_p1();
    void thread_max_val_fu_666_p3();
    void thread_newIndex4_i_fu_621_p1();
    void thread_newIndex_i_fu_611_p4();
    void thread_notlhs1_fu_734_p2();
    void thread_notlhs_fu_716_p2();
    void thread_notrhs2_fu_740_p2();
    void thread_notrhs_fu_722_p2();
    void thread_sel_tmp1_i_fu_640_p3();
    void thread_sel_tmp2_i_fu_648_p2();
    void thread_sel_tmp3_i_fu_653_p3();
    void thread_sel_tmp4_i_fu_661_p2();
    void thread_sel_tmp_i_fu_635_p2();
    void thread_tmp_1_fu_607_p1();
    void thread_tmp_2_fu_702_p4();
    void thread_tmp_3_fu_694_p1();
    void thread_tmp_4_fu_728_p2();
    void thread_tmp_4_i_fu_764_p2();
    void thread_tmp_5_fu_746_p2();
    void thread_tmp_6_fu_752_p2();
    void thread_tmp_7_fu_566_opcode();
    void thread_tmp_8_fu_758_p2();
    void thread_tmp_9_fu_712_p1();
    void thread_tmp_fu_684_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
