// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _inference_add_1_10_s_HH_
#define _inference_add_1_10_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "inference_fadd_32ns_32ns_32_4_full_dsp.h"
#include "inference_add_1_10_s_B5_0.h"

namespace ap_rtl {

struct inference_add_1_10_s : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > A_0_0_address0;
    sc_out< sc_logic > A_0_0_ce0;
    sc_in< sc_lv<32> > A_0_0_q0;
    sc_out< sc_lv<2> > A_1_0_address0;
    sc_out< sc_logic > A_1_0_ce0;
    sc_in< sc_lv<32> > A_1_0_q0;
    sc_out< sc_lv<1> > A_2_0_address0;
    sc_out< sc_logic > A_2_0_ce0;
    sc_in< sc_lv<32> > A_2_0_q0;
    sc_out< sc_lv<1> > A_3_0_address0;
    sc_out< sc_logic > A_3_0_ce0;
    sc_in< sc_lv<32> > A_3_0_q0;
    sc_out< sc_lv<2> > C_0_0_address0;
    sc_out< sc_logic > C_0_0_ce0;
    sc_out< sc_logic > C_0_0_we0;
    sc_out< sc_lv<32> > C_0_0_d0;
    sc_out< sc_lv<2> > C_1_0_address0;
    sc_out< sc_logic > C_1_0_ce0;
    sc_out< sc_logic > C_1_0_we0;
    sc_out< sc_lv<32> > C_1_0_d0;
    sc_out< sc_lv<1> > C_2_0_address0;
    sc_out< sc_logic > C_2_0_ce0;
    sc_out< sc_logic > C_2_0_we0;
    sc_out< sc_lv<32> > C_2_0_d0;
    sc_out< sc_lv<1> > C_3_0_address0;
    sc_out< sc_logic > C_3_0_ce0;
    sc_out< sc_logic > C_3_0_we0;
    sc_out< sc_lv<32> > C_3_0_d0;


    // Module declarations
    inference_add_1_10_s(sc_module_name name);
    SC_HAS_PROCESS(inference_add_1_10_s);

    ~inference_add_1_10_s();

    sc_trace_file* mVcdFile;

    inference_add_1_10_s_B5_0* B5_0_U;
    inference_fadd_32ns_32ns_32_4_full_dsp<1,4,32,32,32>* inference_fadd_32ns_32ns_32_4_full_dsp_U1921;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<4> > B5_0_address0;
    sc_signal< sc_logic > B5_0_ce0;
    sc_signal< sc_lv<32> > B5_0_q0;
    sc_signal< sc_lv<4> > j_reg_164;
    sc_signal< sc_lv<1> > exitcond_fu_179_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_94;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_lv<4> > j_4_fu_185_p2;
    sc_signal< sc_lv<2> > tmp_1102_fu_196_p1;
    sc_signal< sc_lv<2> > tmp_1102_reg_270;
    sc_signal< sc_lv<2> > ap_reg_ppstg_tmp_1102_reg_270_pp0_it1;
    sc_signal< sc_lv<2> > ap_reg_ppstg_tmp_1102_reg_270_pp0_it2;
    sc_signal< sc_lv<2> > ap_reg_ppstg_tmp_1102_reg_270_pp0_it3;
    sc_signal< sc_lv<2> > ap_reg_ppstg_tmp_1102_reg_270_pp0_it4;
    sc_signal< sc_lv<2> > ap_reg_ppstg_tmp_1102_reg_270_pp0_it5;
    sc_signal< sc_lv<2> > C_0_0_addr_reg_302;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_0_0_addr_reg_302_pp0_it1;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_0_0_addr_reg_302_pp0_it2;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_0_0_addr_reg_302_pp0_it3;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_0_0_addr_reg_302_pp0_it4;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_0_0_addr_reg_302_pp0_it5;
    sc_signal< sc_lv<2> > C_1_0_addr_reg_307;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_1_0_addr_reg_307_pp0_it1;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_1_0_addr_reg_307_pp0_it2;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_1_0_addr_reg_307_pp0_it3;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_1_0_addr_reg_307_pp0_it4;
    sc_signal< sc_lv<2> > ap_reg_ppstg_C_1_0_addr_reg_307_pp0_it5;
    sc_signal< sc_lv<1> > C_2_0_addr_reg_312;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_2_0_addr_reg_312_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_2_0_addr_reg_312_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_2_0_addr_reg_312_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_2_0_addr_reg_312_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_2_0_addr_reg_312_pp0_it5;
    sc_signal< sc_lv<1> > C_3_0_addr_reg_317;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_3_0_addr_reg_317_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_3_0_addr_reg_317_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_3_0_addr_reg_317_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_3_0_addr_reg_317_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_C_3_0_addr_reg_317_pp0_it5;
    sc_signal< sc_lv<32> > A_load_phi_fu_253_p3;
    sc_signal< sc_lv<32> > A_load_phi_reg_322;
    sc_signal< sc_lv<32> > B5_0_load_reg_327;
    sc_signal< sc_lv<32> > grp_fu_175_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_332;
    sc_signal< sc_lv<64> > newIndex7_fu_210_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_191_p1;
    sc_signal< sc_lv<2> > newIndex_fu_200_p4;
    sc_signal< sc_lv<1> > sel_tmp_fu_222_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_235_p2;
    sc_signal< sc_lv<32> > sel_tmp1_fu_227_p3;
    sc_signal< sc_lv<1> > sel_tmp4_fu_248_p2;
    sc_signal< sc_lv<32> > sel_tmp3_fu_240_p3;
    sc_signal< sc_logic > grp_fu_175_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_2;
    sc_signal< bool > ap_sig_bdd_272;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st9_fsm_2;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_0_0_address0();
    void thread_A_0_0_ce0();
    void thread_A_1_0_address0();
    void thread_A_1_0_ce0();
    void thread_A_2_0_address0();
    void thread_A_2_0_ce0();
    void thread_A_3_0_address0();
    void thread_A_3_0_ce0();
    void thread_A_load_phi_fu_253_p3();
    void thread_B5_0_address0();
    void thread_B5_0_ce0();
    void thread_C_0_0_address0();
    void thread_C_0_0_ce0();
    void thread_C_0_0_d0();
    void thread_C_0_0_we0();
    void thread_C_1_0_address0();
    void thread_C_1_0_ce0();
    void thread_C_1_0_d0();
    void thread_C_1_0_we0();
    void thread_C_2_0_address0();
    void thread_C_2_0_ce0();
    void thread_C_2_0_d0();
    void thread_C_2_0_we0();
    void thread_C_3_0_address0();
    void thread_C_3_0_ce0();
    void thread_C_3_0_d0();
    void thread_C_3_0_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_272();
    void thread_ap_sig_bdd_94();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st9_fsm_2();
    void thread_exitcond_fu_179_p2();
    void thread_grp_fu_175_ce();
    void thread_j_4_fu_185_p2();
    void thread_newIndex7_fu_210_p1();
    void thread_newIndex_fu_200_p4();
    void thread_sel_tmp1_fu_227_p3();
    void thread_sel_tmp2_fu_235_p2();
    void thread_sel_tmp3_fu_240_p3();
    void thread_sel_tmp4_fu_248_p2();
    void thread_sel_tmp_fu_222_p2();
    void thread_tmp_1102_fu_196_p1();
    void thread_tmp_s_fu_191_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
