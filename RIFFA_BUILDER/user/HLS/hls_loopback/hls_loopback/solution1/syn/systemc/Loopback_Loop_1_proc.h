// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _Loopback_Loop_1_proc_HH_
#define _Loopback_Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loopback_Loop_1_proc : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > IN_r_TDATA;
    sc_in< sc_logic > IN_r_TVALID;
    sc_out< sc_logic > IN_r_TREADY;
    sc_out< sc_lv<32> > OUT_r_TDATA;
    sc_out< sc_logic > OUT_r_TVALID;
    sc_in< sc_logic > OUT_r_TREADY;


    // Module declarations
    Loopback_Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(Loopback_Loop_1_proc);

    ~Loopback_Loop_1_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<17> > i_fu_57_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_41;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_51_p2;
    sc_signal< bool > ap_sig_bdd_48;
    sc_signal< sc_logic > ap_sig_ioackin_OUT_r_TREADY;
    sc_signal< sc_lv<17> > i_0_i_i_reg_40;
    sc_signal< bool > ap_sig_bdd_61;
    sc_signal< sc_logic > ap_reg_ioackin_OUT_r_TREADY;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_101;
    sc_signal< bool > ap_sig_bdd_100;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<17> ap_const_lv17_10000;
    static const sc_lv<17> ap_const_lv17_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN_r_TREADY();
    void thread_OUT_r_TDATA();
    void thread_OUT_r_TVALID();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_100();
    void thread_ap_sig_bdd_101();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_41();
    void thread_ap_sig_bdd_48();
    void thread_ap_sig_bdd_61();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_ioackin_OUT_r_TREADY();
    void thread_exitcond_i_i_fu_51_p2();
    void thread_i_fu_57_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
