// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Loopback,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.450000,HLS_SYN_LAT=65537,HLS_SYN_TPT=65538,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=23,HLS_SYN_LUT=47}" *)

module Loopback (
        IN_r_TDATA,
        OUT_r_TDATA,
        ap_clk,
        ap_rst_n,
        IN_r_TVALID,
        IN_r_TREADY,
        OUT_r_TVALID,
        OUT_r_TREADY,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;

input  [31:0] IN_r_TDATA;
output  [31:0] OUT_r_TDATA;
input   ap_clk;
input   ap_rst_n;
input   IN_r_TVALID;
output   IN_r_TREADY;
output   OUT_r_TVALID;
input   OUT_r_TREADY;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
reg    ap_rst_n_inv;
wire    Loopback_Loop_1_proc_U0_ap_start;
wire    Loopback_Loop_1_proc_U0_ap_done;
wire    Loopback_Loop_1_proc_U0_ap_continue;
wire    Loopback_Loop_1_proc_U0_ap_idle;
wire    Loopback_Loop_1_proc_U0_ap_ready;
wire   [31:0] Loopback_Loop_1_proc_U0_IN_r_TDATA;
wire    Loopback_Loop_1_proc_U0_IN_r_TVALID;
wire    Loopback_Loop_1_proc_U0_IN_r_TREADY;
wire   [31:0] Loopback_Loop_1_proc_U0_OUT_r_TDATA;
wire    Loopback_Loop_1_proc_U0_OUT_r_TVALID;
wire    Loopback_Loop_1_proc_U0_OUT_r_TREADY;
wire    ap_sig_hs_continue;
reg    ap_reg_procdone_Loopback_Loop_1_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_CS;
wire    ap_sig_top_allready;


Loopback_Loop_1_proc Loopback_Loop_1_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( Loopback_Loop_1_proc_U0_ap_start ),
    .ap_done( Loopback_Loop_1_proc_U0_ap_done ),
    .ap_continue( Loopback_Loop_1_proc_U0_ap_continue ),
    .ap_idle( Loopback_Loop_1_proc_U0_ap_idle ),
    .ap_ready( Loopback_Loop_1_proc_U0_ap_ready ),
    .IN_r_TDATA( Loopback_Loop_1_proc_U0_IN_r_TDATA ),
    .IN_r_TVALID( Loopback_Loop_1_proc_U0_IN_r_TVALID ),
    .IN_r_TREADY( Loopback_Loop_1_proc_U0_IN_r_TREADY ),
    .OUT_r_TDATA( Loopback_Loop_1_proc_U0_OUT_r_TDATA ),
    .OUT_r_TVALID( Loopback_Loop_1_proc_U0_OUT_r_TVALID ),
    .OUT_r_TREADY( Loopback_Loop_1_proc_U0_OUT_r_TREADY )
);



always @ (posedge ap_clk) begin : ap_ret_ap_reg_procdone_Loopback_Loop_1_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_Loopback_Loop_1_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Loopback_Loop_1_proc_U0 <= ap_const_logic_0;
        end else if ((Loopback_Loop_1_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_Loopback_Loop_1_proc_U0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_CS <= ap_const_logic_0;
end

always @ (Loopback_Loop_1_proc_U0_ap_idle) begin
    if ((Loopback_Loop_1_proc_U0_ap_idle == ap_const_logic_1)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (Loopback_Loop_1_proc_U0_ap_done) begin
    if ((Loopback_Loop_1_proc_U0_ap_done == ap_const_logic_1)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

assign IN_r_TREADY = Loopback_Loop_1_proc_U0_IN_r_TREADY;

assign Loopback_Loop_1_proc_U0_IN_r_TDATA = IN_r_TDATA;

assign Loopback_Loop_1_proc_U0_IN_r_TVALID = IN_r_TVALID;

assign Loopback_Loop_1_proc_U0_OUT_r_TREADY = OUT_r_TREADY;

assign Loopback_Loop_1_proc_U0_ap_continue = ap_sig_hs_continue;

assign Loopback_Loop_1_proc_U0_ap_start = ap_start;

assign OUT_r_TDATA = Loopback_Loop_1_proc_U0_OUT_r_TDATA;

assign OUT_r_TVALID = Loopback_Loop_1_proc_U0_OUT_r_TVALID;

assign ap_done = ap_sig_hs_done;

assign ap_ready = ap_sig_top_allready;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sig_hs_continue = ap_const_logic_1;

assign ap_sig_top_allready = Loopback_Loop_1_proc_U0_ap_ready;


endmodule //Loopback

